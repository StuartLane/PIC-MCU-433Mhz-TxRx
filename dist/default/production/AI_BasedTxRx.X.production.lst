

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 12 17:58:18 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1847
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Generated 07/09/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1847 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     0111                     	;# 
   113     0112                     	;# 
   114     0113                     	;# 
   115     0114                     	;# 
   116     0115                     	;# 
   117     0116                     	;# 
   118     0117                     	;# 
   119     0118                     	;# 
   120     0119                     	;# 
   121     011A                     	;# 
   122     011B                     	;# 
   123     011D                     	;# 
   124     011E                     	;# 
   125     018C                     	;# 
   126     018D                     	;# 
   127     0191                     	;# 
   128     0191                     	;# 
   129     0192                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0194                     	;# 
   134     0195                     	;# 
   135     0196                     	;# 
   136     0199                     	;# 
   137     019A                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019B                     	;# 
   142     019C                     	;# 
   143     019C                     	;# 
   144     019D                     	;# 
   145     019E                     	;# 
   146     019F                     	;# 
   147     020C                     	;# 
   148     020D                     	;# 
   149     0211                     	;# 
   150     0211                     	;# 
   151     0212                     	;# 
   152     0212                     	;# 
   153     0213                     	;# 
   154     0213                     	;# 
   155     0214                     	;# 
   156     0214                     	;# 
   157     0215                     	;# 
   158     0215                     	;# 
   159     0215                     	;# 
   160     0216                     	;# 
   161     0216                     	;# 
   162     0217                     	;# 
   163     0217                     	;# 
   164     0219                     	;# 
   165     021A                     	;# 
   166     021B                     	;# 
   167     021C                     	;# 
   168     021D                     	;# 
   169     021E                     	;# 
   170     021F                     	;# 
   171     0291                     	;# 
   172     0291                     	;# 
   173     0292                     	;# 
   174     0293                     	;# 
   175     0294                     	;# 
   176     0295                     	;# 
   177     0295                     	;# 
   178     0296                     	;# 
   179     0298                     	;# 
   180     0298                     	;# 
   181     0299                     	;# 
   182     029A                     	;# 
   183     029B                     	;# 
   184     029C                     	;# 
   185     029C                     	;# 
   186     029D                     	;# 
   187     029E                     	;# 
   188     029E                     	;# 
   189     0311                     	;# 
   190     0311                     	;# 
   191     0312                     	;# 
   192     0313                     	;# 
   193     0318                     	;# 
   194     0318                     	;# 
   195     0319                     	;# 
   196     031A                     	;# 
   197     0394                     	;# 
   198     0395                     	;# 
   199     0396                     	;# 
   200     039A                     	;# 
   201     039C                     	;# 
   202     039D                     	;# 
   203     039E                     	;# 
   204     039F                     	;# 
   205     0415                     	;# 
   206     0416                     	;# 
   207     0417                     	;# 
   208     041C                     	;# 
   209     041D                     	;# 
   210     041E                     	;# 
   211     0FE4                     	;# 
   212     0FE5                     	;# 
   213     0FE6                     	;# 
   214     0FE7                     	;# 
   215     0FE8                     	;# 
   216     0FE9                     	;# 
   217     0FEA                     	;# 
   218     0FEB                     	;# 
   219     0FED                     	;# 
   220     0FEE                     	;# 
   221     0FEF                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0014                     	;# 
   240     0015                     	;# 
   241     0016                     	;# 
   242     0016                     	;# 
   243     0017                     	;# 
   244     0018                     	;# 
   245     0019                     	;# 
   246     001A                     	;# 
   247     001B                     	;# 
   248     001C                     	;# 
   249     001E                     	;# 
   250     001F                     	;# 
   251     008C                     	;# 
   252     008D                     	;# 
   253     0091                     	;# 
   254     0092                     	;# 
   255     0093                     	;# 
   256     0094                     	;# 
   257     0095                     	;# 
   258     0096                     	;# 
   259     0097                     	;# 
   260     0098                     	;# 
   261     0099                     	;# 
   262     009A                     	;# 
   263     009B                     	;# 
   264     009B                     	;# 
   265     009C                     	;# 
   266     009D                     	;# 
   267     009E                     	;# 
   268     010C                     	;# 
   269     010D                     	;# 
   270     0111                     	;# 
   271     0112                     	;# 
   272     0113                     	;# 
   273     0114                     	;# 
   274     0115                     	;# 
   275     0116                     	;# 
   276     0117                     	;# 
   277     0118                     	;# 
   278     0119                     	;# 
   279     011A                     	;# 
   280     011B                     	;# 
   281     011D                     	;# 
   282     011E                     	;# 
   283     018C                     	;# 
   284     018D                     	;# 
   285     0191                     	;# 
   286     0191                     	;# 
   287     0192                     	;# 
   288     0193                     	;# 
   289     0193                     	;# 
   290     0193                     	;# 
   291     0194                     	;# 
   292     0195                     	;# 
   293     0196                     	;# 
   294     0199                     	;# 
   295     019A                     	;# 
   296     019B                     	;# 
   297     019B                     	;# 
   298     019B                     	;# 
   299     019B                     	;# 
   300     019C                     	;# 
   301     019C                     	;# 
   302     019D                     	;# 
   303     019E                     	;# 
   304     019F                     	;# 
   305     020C                     	;# 
   306     020D                     	;# 
   307     0211                     	;# 
   308     0211                     	;# 
   309     0212                     	;# 
   310     0212                     	;# 
   311     0213                     	;# 
   312     0213                     	;# 
   313     0214                     	;# 
   314     0214                     	;# 
   315     0215                     	;# 
   316     0215                     	;# 
   317     0215                     	;# 
   318     0216                     	;# 
   319     0216                     	;# 
   320     0217                     	;# 
   321     0217                     	;# 
   322     0219                     	;# 
   323     021A                     	;# 
   324     021B                     	;# 
   325     021C                     	;# 
   326     021D                     	;# 
   327     021E                     	;# 
   328     021F                     	;# 
   329     0291                     	;# 
   330     0291                     	;# 
   331     0292                     	;# 
   332     0293                     	;# 
   333     0294                     	;# 
   334     0295                     	;# 
   335     0295                     	;# 
   336     0296                     	;# 
   337     0298                     	;# 
   338     0298                     	;# 
   339     0299                     	;# 
   340     029A                     	;# 
   341     029B                     	;# 
   342     029C                     	;# 
   343     029C                     	;# 
   344     029D                     	;# 
   345     029E                     	;# 
   346     029E                     	;# 
   347     0311                     	;# 
   348     0311                     	;# 
   349     0312                     	;# 
   350     0313                     	;# 
   351     0318                     	;# 
   352     0318                     	;# 
   353     0319                     	;# 
   354     031A                     	;# 
   355     0394                     	;# 
   356     0395                     	;# 
   357     0396                     	;# 
   358     039A                     	;# 
   359     039C                     	;# 
   360     039D                     	;# 
   361     039E                     	;# 
   362     039F                     	;# 
   363     0415                     	;# 
   364     0416                     	;# 
   365     0417                     	;# 
   366     041C                     	;# 
   367     041D                     	;# 
   368     041E                     	;# 
   369     0FE4                     	;# 
   370     0FE5                     	;# 
   371     0FE6                     	;# 
   372     0FE7                     	;# 
   373     0FE8                     	;# 
   374     0FE9                     	;# 
   375     0FEA                     	;# 
   376     0FEB                     	;# 
   377     0FED                     	;# 
   378     0FEE                     	;# 
   379     0FEF                     	;# 
   380                           
   381                           	psect	idataBANK1
   382     028A                     __pidataBANK1:
   383                           
   384                           ;initializer for _exp
   385     028A  344C               	retlw	76
   386     028B  3461               	retlw	97
   387     028C  346E               	retlw	110
   388     028D  3465               	retlw	101
   389     028E  344C               	retlw	76
   390     028F  3469               	retlw	105
   391     0290  3467               	retlw	103
   392     0291  3468               	retlw	104
   393     0292  3474               	retlw	116
   394     0293  3473               	retlw	115
   395     0294  3430               	retlw	48
   396     0295  3431               	retlw	49
   397     0296  340A               	retlw	10
   398     0297  340D               	retlw	13
   399     0298  3420               	retlw	32
   400     0299  3420               	retlw	32
   401     029A  3400               	retlw	0
   402                           
   403                           	psect	nvCOMMON
   404     0078                     __pnvCOMMON:
   405     0078                     _start_addr:
   406     0078                     	ds	2
   407                           
   408                           	psect	nvBANK0
   409     0069                     __pnvBANK0:
   410     0069                     _index:
   411     0069                     	ds	1
   412     000D                     _PORTBbits	set	13
   413     001F                     _CPSCON1	set	31
   414     001E                     _CPSCON0	set	30
   415     000B                     _INTCONbits	set	11
   416     0011                     _PIR1bits	set	17
   417     0091                     _PIE1bits	set	145
   418     008D                     _TRISBbits	set	141
   419     008C                     _TRISAbits	set	140
   420     010C                     _LATAbits	set	268
   421     0191                     _EEADR	set	401
   422     018D                     _ANSELBbits	set	397
   423     0196                     _EECON2	set	406
   424     0195                     _EECON1bits	set	405
   425     0193                     _EEDATA	set	403
   426     0199                     _RCREG	set	409
   427     019A                     _TXREG	set	410
   428     019D                     _RCSTAbits	set	413
   429     019F                     _BAUDCONbits	set	415
   430     019E                     _TXSTAbits	set	414
   431     019B                     _SPBRGL	set	411
   432     019C                     _SPBRGH	set	412
   433                           
   434                           	psect	cinit
   435     004B                     start_initialization:	
   436                           ; #config settings
   437                           
   438     004B                     __initialization:
   439                           
   440                           ; Initialize objects allocated to BANK1
   441     004B  308A               	movlw	low __pidataBANK1
   442     004C  0084               	movwf	4
   443     004D  3082               	movlw	(high __pidataBANK1)| (0+128)
   444     004E  0085               	movwf	5
   445     004F  30D0               	movlw	low __pdataBANK1
   446     0050  0086               	movwf	6
   447     0051  3000               	movlw	high __pdataBANK1
   448     0052  0087               	movwf	7
   449     0053  3011               	movlw	17
   450     0054  3182  22BB  3180   	fcall	init_ram
   451                           
   452                           ; Clear objects allocated to COMMON
   453     0057  01FA               	clrf	__pbssCOMMON& (0+127)
   454                           
   455                           ; Clear objects allocated to BANK0
   456     0058  3020               	movlw	low __pbssBANK0
   457     0059  0084               	movwf	4
   458     005A  3000               	movlw	high __pbssBANK0
   459     005B  0085               	movwf	5
   460     005C  3038               	movlw	56
   461     005D  3182  22C1  3180   	fcall	clear_ram0
   462                           
   463                           ; Clear objects allocated to BANK1
   464     0060  30A0               	movlw	low __pbssBANK1
   465     0061  0084               	movwf	4
   466     0062  3000               	movlw	high __pbssBANK1
   467     0063  0085               	movwf	5
   468     0064  3030               	movlw	48
   469     0065  3182  22C1  3180   	fcall	clear_ram0
   470     0068                     end_of_initialization:	
   471                           ;End of C runtime variable initialization code
   472                           
   473     0068                     __end_of__initialization:
   474     0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   475     0069  0020               	movlb	0
   476     006A  3180  286C         	ljmp	_main	;jump to C main() function
   477                           
   478                           	psect	bssCOMMON
   479     007A                     __pbssCOMMON:
   480     007A                     _val:
   481     007A                     	ds	1
   482                           
   483                           	psect	bssBANK0
   484     0020                     __pbssBANK0:
   485     0020                     _id1:
   486     0020                     	ds	16
   487     0030                     _outputStatus:
   488     0030                     	ds	2
   489     0032                     _loc:
   490     0032                     	ds	2
   491     0034                     _readData:
   492     0034                     	ds	2
   493     0036                     _num:
   494     0036                     	ds	2
   495     0038                     _id0:
   496     0038                     	ds	16
   497     0048                     _rxdChar:
   498     0048                     	ds	16
   499                           
   500                           	psect	bssBANK1
   501     00A0                     __pbssBANK1:
   502     00A0                     _id3:
   503     00A0                     	ds	16
   504     00B0                     _id2:
   505     00B0                     	ds	16
   506     00C0                     _idChar:
   507     00C0                     	ds	16
   508                           
   509                           	psect	dataBANK1
   510     00D0                     __pdataBANK1:
   511     00D0                     _exp:
   512     00D0                     	ds	17
   513                           
   514                           	psect	inittext
   515     02BB                     init_ram:
   516     02BB  00FE               	movwf	btemp
   517     02BC                     initloop:
   518     02BC  0012               	moviw fsr0++
   519     02BD  001E               	movwi fsr1++
   520     02BE  0BFE               	decfsz	btemp,f
   521     02BF  2ABC               	goto	initloop
   522     02C0  3400               	retlw	0
   523                           
   524                           	psect	clrtext
   525     02C1                     clear_ram0:	
   526                           ;	Called with FSR0 containing the base address, and
   527                           ;	WREG with the size to clear
   528                           
   529     02C1  0064               	clrwdt	;clear the watchdog before getting into this loop
   530     02C2                     clrloop0:
   531     02C2  0180               	clrf	0	;clear RAM location pointed to by FSR
   532     02C3  3101               	addfsr 0,1
   533     02C4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   534     02C5  2AC2               	goto	clrloop0	;have we reached the end yet?
   535     02C6  3400               	retlw	0	;all done for this memory range, return
   536                           
   537                           	psect	cstackCOMMON
   538     0070                     __pcstackCOMMON:
   539     0070                     ?_EUSART_Init:
   540     0070                     ?_EUSART_Write:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ??_ISR:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_main:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_ISR:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_set_index0:	
   553                           ; 2 bytes @ 0x0
   554                           
   555     0070                     ?_set_index1:	
   556                           ; 2 bytes @ 0x0
   557                           
   558     0070                     ?_set_index2:	
   559                           ; 2 bytes @ 0x0
   560                           
   561     0070                     ?_set_index3:	
   562                           ; 2 bytes @ 0x0
   563                           
   564                           
   565                           ; 2 bytes @ 0x0
   566     0070                     	ds	2
   567     0072                     ??_EUSART_Init:
   568     0072                     ??_EUSART_Write:	
   569                           ; 1 bytes @ 0x2
   570                           
   571     0072                     ?_compareIdToRecd:	
   572                           ; 1 bytes @ 0x2
   573                           
   574     0072                     ?_add_id:	
   575                           ; 1 bytes @ 0x2
   576                           
   577     0072                     ?_read_id:	
   578                           ; 2 bytes @ 0x2
   579                           
   580     0072                     EUSART_Write@data:	
   581                           ; 2 bytes @ 0x2
   582                           
   583     0072                     compareIdToRecd@rxd:	
   584                           ; 1 bytes @ 0x2
   585                           
   586     0072                     add_id@start_addr:	
   587                           ; 1 bytes @ 0x2
   588                           
   589     0072                     read_id@start_addr:	
   590                           ; 2 bytes @ 0x2
   591                           
   592                           
   593                           ; 2 bytes @ 0x2
   594     0072                     	ds	1
   595     0073                     compareIdToRecd@compareLength:
   596                           
   597                           ; 2 bytes @ 0x3
   598     0073                     	ds	1
   599     0074                     ??_read_id:
   600     0074                     ??_set_index0:	
   601                           ; 1 bytes @ 0x4
   602                           
   603     0074                     ??_set_index1:	
   604                           ; 1 bytes @ 0x4
   605                           
   606     0074                     ??_set_index2:	
   607                           ; 1 bytes @ 0x4
   608                           
   609     0074                     ??_set_index3:	
   610                           ; 1 bytes @ 0x4
   611                           
   612     0074                     add_id@rxdData:	
   613                           ; 1 bytes @ 0x4
   614                           
   615                           
   616                           ; 1 bytes @ 0x4
   617     0074                     	ds	1
   618     0075                     ??_add_id:
   619     0075                     set_index0@id_set:	
   620                           ; 1 bytes @ 0x5
   621                           
   622     0075                     set_index1@id_set:	
   623                           ; 1 bytes @ 0x5
   624                           
   625     0075                     set_index2@id_set:	
   626                           ; 1 bytes @ 0x5
   627                           
   628     0075                     set_index3@id_set:	
   629                           ; 1 bytes @ 0x5
   630                           
   631     0075                     compareIdToRecd@id:	
   632                           ; 1 bytes @ 0x5
   633                           
   634                           
   635                           ; 1 bytes @ 0x5
   636     0075                     	ds	1
   637     0076                     compareIdToRecd@i:
   638                           
   639                           ; 2 bytes @ 0x6
   640     0076                     	ds	2
   641                           
   642                           	psect	cstackBANK0
   643     0058                     __pcstackBANK0:
   644     0058                     ??_compareIdToRecd:
   645                           
   646                           ; 1 bytes @ 0x0
   647     0058                     	ds	6
   648     005E                     ??_main:
   649                           
   650                           ; 1 bytes @ 0x6
   651     005E                     	ds	2
   652     0060                     main@length:
   653                           
   654                           ; 2 bytes @ 0x8
   655     0060                     	ds	2
   656     0062                     main@length_459:
   657                           
   658                           ; 2 bytes @ 0xA
   659     0062                     	ds	2
   660     0064                     main@rxdData:
   661                           
   662                           ; 1 bytes @ 0xC
   663     0064                     	ds	1
   664     0065                     main@count_460:
   665                           
   666                           ; 2 bytes @ 0xD
   667     0065                     	ds	2
   668     0067                     main@count:
   669                           
   670                           ; 2 bytes @ 0xF
   671     0067                     	ds	2
   672                           
   673                           	psect	maintext
   674     006C                     __pmaintext:	
   675 ;;
   676 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   677 ;;
   678 ;; *************** function _main *****************
   679 ;; Defined at:
   680 ;;		line 170 in file "main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  rxdData         1   12[BANK0 ] unsigned char 
   685 ;;  count           2   13[BANK0 ] int 
   686 ;;  length          2   10[BANK0 ] int 
   687 ;;  count           2   15[BANK0 ] int 
   688 ;;  length          2    8[BANK0 ] int 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : B1F/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   699 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
   700 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   701 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
   702 ;;Total ram usage:       11 bytes
   703 ;; Hardware stack levels required when called: 3
   704 ;; This function calls:
   705 ;;		_EUSART_Init
   706 ;;		_EUSART_Write
   707 ;;		_add_id
   708 ;;		_compareIdToRecd
   709 ;;		_read_id
   710 ;;		_set_index0
   711 ;;		_set_index1
   712 ;;		_set_index2
   713 ;;		_set_index3
   714 ;; This function is called by:
   715 ;;		Startup code after reset
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719     006C                     _main:	
   720                           ;psect for function _main
   721                           
   722     006C                     l1290:	
   723                           ;incstack = 0
   724                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   725                           
   726                           
   727                           ;main.c: 171:     TRISAbits.TRISA1 = 0;
   728     006C  0021               	movlb	1	; select bank1
   729     006D  108C               	bcf	12,1	;volatile
   730                           
   731                           ;main.c: 172:     TRISBbits.TRISB1 = 1;
   732     006E  148D               	bsf	13,1	;volatile
   733                           
   734                           ;main.c: 173:     TRISBbits.TRISB2 = 0;
   735     006F  110D               	bcf	13,2	;volatile
   736                           
   737                           ;main.c: 174:     TRISBbits.TRISB0 = 1;
   738     0070  140D               	bsf	13,0	;volatile
   739                           
   740                           ;main.c: 175:     LATAbits.LATA1 = 0;
   741     0071  0022               	movlb	2	; select bank2
   742     0072  108C               	bcf	12,1	;volatile
   743                           
   744                           ;main.c: 176:     ANSELBbits.ANSB2 = 0;
   745     0073  0023               	movlb	3	; select bank3
   746     0074  110D               	bcf	13,2	;volatile
   747                           
   748                           ;main.c: 177:     ANSELBbits.ANSB1 = 0;
   749     0075  108D               	bcf	13,1	;volatile
   750     0076                     l1292:
   751                           
   752                           ;main.c: 178:     CPSCON0 = 0x00;
   753     0076  0020               	movlb	0	; select bank0
   754     0077  019E               	clrf	30	;volatile
   755                           
   756                           ;main.c: 179:     CPSCON1 = 0x00;
   757     0078  019F               	clrf	31	;volatile
   758     0079                     l1294:
   759                           
   760                           ;main.c: 181:     INTCONbits.GIE = 1;
   761     0079  178B               	bsf	11,7	;volatile
   762     007A                     l1296:
   763                           
   764                           ;main.c: 182:     INTCONbits.PEIE = 1;
   765     007A  170B               	bsf	11,6	;volatile
   766     007B                     l1298:
   767                           
   768                           ;main.c: 183:     PIE1bits.RCIE = 1;
   769     007B  0021               	movlb	1	; select bank1
   770     007C  1691               	bsf	17,5	;volatile
   771     007D                     l1300:
   772                           
   773                           ;main.c: 184:     RCSTAbits.CREN = 1;
   774     007D  0023               	movlb	3	; select bank3
   775     007E  161D               	bsf	29,4	;volatile
   776     007F                     l1302:
   777                           
   778                           ;main.c: 187:     EUSART_Init();
   779     007F  3182  229B  3180   	fcall	_EUSART_Init
   780     0082                     l1304:
   781                           
   782                           ;main.c: 189:     start_addr = 0x41;
   783     0082  3041               	movlw	65
   784     0083  00F8               	movwf	_start_addr
   785     0084  3000               	movlw	0
   786     0085  00F9               	movwf	_start_addr+1
   787     0086                     l1306:
   788                           
   789                           ;main.c: 190:     read_id(start_addr);
   790     0086  0879               	movf	_start_addr+1,w
   791     0087  00F3               	movwf	read_id@start_addr+1
   792     0088  0878               	movf	_start_addr,w
   793     0089  00F2               	movwf	read_id@start_addr
   794     008A  3182  22A7  3180   	fcall	_read_id
   795     008D                     l1308:
   796                           
   797                           ;main.c: 191:     index=EEDATA;
   798     008D  0023               	movlb	3	; select bank3
   799     008E  0813               	movf	19,w	;volatile
   800     008F  0020               	movlb	0	; select bank0
   801     0090  00E9               	movwf	_index
   802     0091                     l1310:
   803                           
   804                           ;main.c: 193:     if (index != 0x00 || index != 0x10 || index != 0x20 || index != 0x30) 
      +                          {
   805     0091  0869               	movf	_index,w
   806     0092  1D03               	btfss	3,2
   807     0093  2895               	goto	u551
   808     0094  2896               	goto	u550
   809     0095                     u551:
   810     0095  28A8               	goto	l1318
   811     0096                     u550:
   812     0096                     l1312:
   813     0096  3010               	movlw	16
   814     0097  0669               	xorwf	_index,w
   815     0098  1D03               	btfss	3,2
   816     0099  289B               	goto	u561
   817     009A  289C               	goto	u560
   818     009B                     u561:
   819     009B  28A8               	goto	l1318
   820     009C                     u560:
   821     009C                     l1314:
   822     009C  3020               	movlw	32
   823     009D  0669               	xorwf	_index,w
   824     009E  1D03               	btfss	3,2
   825     009F  28A1               	goto	u571
   826     00A0  28A2               	goto	u570
   827     00A1                     u571:
   828     00A1  28A8               	goto	l1318
   829     00A2                     u570:
   830     00A2                     l1316:
   831     00A2  3030               	movlw	48
   832     00A3  0669               	xorwf	_index,w
   833     00A4  1903               	btfsc	3,2
   834     00A5  28A7               	goto	u581
   835     00A6  28A8               	goto	u580
   836     00A7                     u581:
   837     00A7  28B5               	goto	l1324
   838     00A8                     u580:
   839     00A8                     l1318:
   840                           
   841                           ;main.c: 194:                 index = 0x00;
   842     00A8  01E9               	clrf	_index
   843     00A9                     l1320:
   844                           
   845                           ;main.c: 195:                 start_addr = 0x41;
   846     00A9  3041               	movlw	65
   847     00AA  00F8               	movwf	_start_addr
   848     00AB  3000               	movlw	0
   849     00AC  00F9               	movwf	_start_addr+1
   850     00AD                     l1322:
   851                           
   852                           ;main.c: 196:                 add_id (start_addr, index);
   853     00AD  0879               	movf	_start_addr+1,w
   854     00AE  00F3               	movwf	add_id@start_addr+1
   855     00AF  0878               	movf	_start_addr,w
   856     00B0  00F2               	movwf	add_id@start_addr
   857     00B1  01F4               	clrf	add_id@rxdData
   858     00B2  3182  2273  3180   	fcall	_add_id
   859     00B5                     l1324:
   860                           
   861                           ;main.c: 199:     if (index == 0x00){
   862     00B5  0020               	movlb	0	; select bank0
   863     00B6  0869               	movf	_index,w
   864     00B7  1D03               	btfss	3,2
   865     00B8  28BA               	goto	u591
   866     00B9  28BB               	goto	u590
   867     00BA                     u591:
   868     00BA  28BF               	goto	l1328
   869     00BB                     u590:
   870     00BB                     l1326:
   871                           
   872                           ;main.c: 200:         set_index0();
   873     00BB  3182  2253  3180   	fcall	_set_index0
   874                           
   875                           ;main.c: 201:     }
   876     00BE  28EF               	goto	l1340
   877     00BF                     l1328:
   878     00BF  3010               	movlw	16
   879     00C0  0669               	xorwf	_index,w
   880     00C1  1D03               	btfss	3,2
   881     00C2  28C4               	goto	u601
   882     00C3  28C5               	goto	u600
   883     00C4                     u601:
   884     00C4  28CC               	goto	l1332
   885     00C5                     u600:
   886     00C5                     l1330:
   887                           
   888                           ;main.c: 203:         set_index0();
   889     00C5  3182  2253  3180   	fcall	_set_index0
   890                           
   891                           ;main.c: 204:         set_index1();
   892     00C8  3182  2231  3180   	fcall	_set_index1
   893                           
   894                           ;main.c: 205:     }
   895     00CB  28EF               	goto	l1340
   896     00CC                     l1332:
   897     00CC  3020               	movlw	32
   898     00CD  0669               	xorwf	_index,w
   899     00CE  1D03               	btfss	3,2
   900     00CF  28D1               	goto	u611
   901     00D0  28D2               	goto	u610
   902     00D1                     u611:
   903     00D1  28DC               	goto	l1336
   904     00D2                     u610:
   905     00D2                     l1334:
   906                           
   907                           ;main.c: 207:         set_index0();
   908     00D2  3182  2253  3180   	fcall	_set_index0
   909                           
   910                           ;main.c: 208:         set_index1();
   911     00D5  3182  2231  3180   	fcall	_set_index1
   912                           
   913                           ;main.c: 209:         set_index2();
   914     00D8  3182  220F  3180   	fcall	_set_index2
   915                           
   916                           ;main.c: 210:     }
   917     00DB  28EF               	goto	l1340
   918     00DC                     l1336:
   919     00DC  3030               	movlw	48
   920     00DD  0669               	xorwf	_index,w
   921     00DE  1D03               	btfss	3,2
   922     00DF  28E1               	goto	u621
   923     00E0  28E2               	goto	u620
   924     00E1                     u621:
   925     00E1  28EF               	goto	l136
   926     00E2                     u620:
   927     00E2                     l1338:
   928                           
   929                           ;main.c: 212:         set_index0();
   930     00E2  3182  2253  3180   	fcall	_set_index0
   931                           
   932                           ;main.c: 213:         set_index1();
   933     00E5  3182  2231  3180   	fcall	_set_index1
   934                           
   935                           ;main.c: 214:         set_index2();
   936     00E8  3182  220F  3180   	fcall	_set_index2
   937                           
   938                           ;main.c: 215:         set_index3();
   939     00EB  3181  21ED  3180   	fcall	_set_index3
   940                           
   941                           ;main.c: 216:     }
   942     00EE  28EF               	goto	l1340
   943     00EF                     l136:
   944     00EF                     l1340:
   945                           
   946                           ;main.c: 225:         if (readData == 1) {
   947     00EF  0020               	movlb	0	; select bank0
   948     00F0  0334               	decf	_readData,w
   949     00F1  0435               	iorwf	_readData+1,w
   950     00F2  1D03               	btfss	3,2
   951     00F3  28F5               	goto	u631
   952     00F4  28F6               	goto	u630
   953     00F5                     u631:
   954     00F5  296C               	goto	l1376
   955     00F6                     u630:
   956     00F6                     l1342:
   957                           
   958                           ;main.c: 226:             TXSTAbits.TXEN = 1;
   959     00F6  0023               	movlb	3	; select bank3
   960     00F7  169E               	bsf	30,5	;volatile
   961     00F8                     l1344:
   962                           
   963                           ;main.c: 227:             int length = 15;
   964     00F8  300F               	movlw	15
   965     00F9  0020               	movlb	0	; select bank0
   966     00FA  00E0               	movwf	main@length
   967     00FB  3000               	movlw	0
   968     00FC  00E1               	movwf	main@length+1
   969                           
   970                           ;main.c: 228:             start_addr=index;
   971     00FD  0869               	movf	_index,w
   972     00FE  00DE               	movwf	??_main
   973     00FF  01DF               	clrf	??_main+1
   974     0100  085E               	movf	??_main,w
   975     0101  00F8               	movwf	_start_addr
   976     0102  085F               	movf	??_main+1,w
   977     0103  00F9               	movwf	_start_addr+1
   978     0104                     l1346:
   979                           
   980                           ;main.c: 229:                 for (int count=0; count<=length; count++){
   981     0104  01E7               	clrf	main@count
   982     0105  01E8               	clrf	main@count+1
   983     0106  2935               	goto	l1360
   984     0107                     l1348:
   985                           
   986                           ;main.c: 230:                     read_id(start_addr);
   987     0107  0879               	movf	_start_addr+1,w
   988     0108  00F3               	movwf	read_id@start_addr+1
   989     0109  0878               	movf	_start_addr,w
   990     010A  00F2               	movwf	read_id@start_addr
   991     010B  3182  22A7  3180   	fcall	_read_id
   992     010E                     l1350:
   993                           
   994                           ;main.c: 232:                     EUSART_Write(rxdChar[count]);
   995     010E  0020               	movlb	0	; select bank0
   996     010F  0867               	movf	main@count,w
   997     0110  3E48               	addlw	(low (_rxdChar| 0))& (0+255)
   998     0111  0086               	movwf	6
   999     0112  0187               	clrf	7
  1000     0113  0801               	movf	1,w
  1001     0114  3182  22B1  3180   	fcall	_EUSART_Write
  1002     0117                     l1352:
  1003                           
  1004                           ;main.c: 233:                     EUSART_Write(id0[count]);
  1005     0117  0020               	movlb	0	; select bank0
  1006     0118  0867               	movf	main@count,w
  1007     0119  3E38               	addlw	(low (_id0| 0))& (0+255)
  1008     011A  0086               	movwf	6
  1009     011B  0187               	clrf	7
  1010     011C  0801               	movf	1,w
  1011     011D  3182  22B1  3180   	fcall	_EUSART_Write
  1012     0120                     l1354:
  1013                           
  1014                           ;main.c: 234:                     _delay((unsigned long)((200)*(16000000/4000.0)));
  1015     0120  3005               	movlw	5
  1016     0121  0020               	movlb	0	; select bank0
  1017     0122  00DF               	movwf	??_main+1
  1018     0123  300F               	movlw	15
  1019     0124  00DE               	movwf	??_main
  1020     0125  30F1               	movlw	241
  1021     0126                     u707:
  1022     0126  0B89               	decfsz	9,f
  1023     0127  2926               	goto	u707
  1024     0128  0BDE               	decfsz	??_main,f
  1025     0129  2926               	goto	u707
  1026     012A  0BDF               	decfsz	??_main+1,f
  1027     012B  2926               	goto	u707
  1028     012C                     l1356:
  1029                           
  1030                           ;main.c: 235:                     start_addr++;
  1031     012C  3001               	movlw	1
  1032     012D  07F8               	addwf	_start_addr,f
  1033     012E  3000               	movlw	0
  1034     012F  3DF9               	addwfc	_start_addr+1,f
  1035     0130                     l1358:
  1036                           
  1037                           ;main.c: 236:                 }
  1038     0130  3001               	movlw	1
  1039     0131  0020               	movlb	0	; select bank0
  1040     0132  07E7               	addwf	main@count,f
  1041     0133  3000               	movlw	0
  1042     0134  3DE8               	addwfc	main@count+1,f
  1043     0135                     l1360:
  1044     0135  0861               	movf	main@length+1,w
  1045     0136  3A80               	xorlw	128
  1046     0137  00DE               	movwf	??_main
  1047     0138  0868               	movf	main@count+1,w
  1048     0139  3A80               	xorlw	128
  1049     013A  025E               	subwf	??_main,w
  1050     013B  1D03               	skipz
  1051     013C  293F               	goto	u645
  1052     013D  0867               	movf	main@count,w
  1053     013E  0260               	subwf	main@length,w
  1054     013F                     u645:
  1055     013F  1803               	skipnc
  1056     0140  2942               	goto	u641
  1057     0141  2943               	goto	u640
  1058     0142                     u641:
  1059     0142  2907               	goto	l1348
  1060     0143                     u640:
  1061     0143                     l1362:
  1062                           
  1063                           ;main.c: 239:             if (compareIdToRecd(id0, rxdChar,12)){
  1064     0143  3048               	movlw	(low (_rxdChar| 0))& (0+255)
  1065     0144  00F2               	movwf	compareIdToRecd@rxd
  1066     0145  300C               	movlw	12
  1067     0146  00F3               	movwf	compareIdToRecd@compareLength
  1068     0147  3000               	movlw	0
  1069     0148  00F4               	movwf	compareIdToRecd@compareLength+1
  1070     0149  3038               	movlw	(low (_id0| 0))& (0+255)
  1071     014A  3181  21B3  3180   	fcall	_compareIdToRecd
  1072     014D  3A00               	xorlw	0
  1073     014E  1903               	skipnz
  1074     014F  2951               	goto	u651
  1075     0150  2952               	goto	u650
  1076     0151                     u651:
  1077     0151  2966               	goto	l1372
  1078     0152                     u650:
  1079     0152                     l1364:
  1080                           
  1081                           ;main.c: 245:                     if (outputStatus == 0){
  1082     0152  0020               	movlb	0	; select bank0
  1083     0153  0830               	movf	_outputStatus,w
  1084     0154  0431               	iorwf	_outputStatus+1,w
  1085     0155  1D03               	btfss	3,2
  1086     0156  2958               	goto	u661
  1087     0157  2959               	goto	u660
  1088     0158                     u661:
  1089     0158  2961               	goto	l147
  1090     0159                     u660:
  1091     0159                     l1366:
  1092                           
  1093                           ;main.c: 246:                         LATAbits.LATA1 = 1;
  1094     0159  0022               	movlb	2	; select bank2
  1095     015A  148C               	bsf	12,1	;volatile
  1096     015B                     l1368:
  1097                           
  1098                           ;main.c: 247:                         outputStatus = 1;
  1099     015B  3001               	movlw	1
  1100     015C  0020               	movlb	0	; select bank0
  1101     015D  00B0               	movwf	_outputStatus
  1102     015E  3000               	movlw	0
  1103     015F  00B1               	movwf	_outputStatus+1
  1104                           
  1105                           ;main.c: 248:                     }
  1106     0160  2966               	goto	l1372
  1107     0161                     l147:	
  1108                           ;main.c: 249:                     else {
  1109                           
  1110                           
  1111                           ;main.c: 250:                         LATAbits.LATA1 = 0;
  1112     0161  0022               	movlb	2	; select bank2
  1113     0162  108C               	bcf	12,1	;volatile
  1114     0163                     l1370:
  1115                           
  1116                           ;main.c: 251:                         outputStatus = 0;
  1117     0163  0020               	movlb	0	; select bank0
  1118     0164  01B0               	clrf	_outputStatus
  1119     0165  01B1               	clrf	_outputStatus+1
  1120     0166                     l1372:
  1121                           
  1122                           ;main.c: 254:             TXSTAbits.TXEN = 0;
  1123     0166  0023               	movlb	3	; select bank3
  1124     0167  129E               	bcf	30,5	;volatile
  1125     0168                     l1374:
  1126                           
  1127                           ;main.c: 255:             RCSTAbits.CREN = 1;
  1128     0168  161D               	bsf	29,4	;volatile
  1129                           
  1130                           ;main.c: 256:             readData = 0;
  1131     0169  0020               	movlb	0	; select bank0
  1132     016A  01B4               	clrf	_readData
  1133     016B  01B5               	clrf	_readData+1
  1134     016C                     l1376:
  1135                           
  1136                           ;main.c: 260:         if (PORTBbits.RB0 == 1){
  1137     016C  1C0D               	btfss	13,0	;volatile
  1138     016D  296F               	goto	u671
  1139     016E  2970               	goto	u670
  1140     016F                     u671:
  1141     016F  28EF               	goto	l1340
  1142     0170                     u670:
  1143     0170                     l1378:
  1144                           
  1145                           ;main.c: 261:             RCSTAbits.CREN = 1;
  1146     0170  0023               	movlb	3	; select bank3
  1147     0171  161D               	bsf	29,4	;volatile
  1148                           
  1149                           ;main.c: 262:             LATAbits.LATA1 = 1;
  1150     0172  0022               	movlb	2	; select bank2
  1151     0173  148C               	bsf	12,1	;volatile
  1152     0174                     l1380:
  1153                           
  1154                           ;main.c: 283:             start_addr = index;
  1155     0174  0020               	movlb	0	; select bank0
  1156     0175  0869               	movf	_index,w
  1157     0176  00DE               	movwf	??_main
  1158     0177  01DF               	clrf	??_main+1
  1159     0178  085E               	movf	??_main,w
  1160     0179  00F8               	movwf	_start_addr
  1161     017A  085F               	movf	??_main+1,w
  1162     017B  00F9               	movwf	_start_addr+1
  1163     017C                     l1382:
  1164                           
  1165                           ;main.c: 284:             if (readData == 0) {
  1166     017C  0834               	movf	_readData,w
  1167     017D  0435               	iorwf	_readData+1,w
  1168     017E  1D03               	btfss	3,2
  1169     017F  2981               	goto	u681
  1170     0180  2982               	goto	u680
  1171     0181                     u681:
  1172     0181  28EF               	goto	l1340
  1173     0182                     u680:
  1174     0182                     l1384:
  1175                           
  1176                           ;main.c: 286:                 int length = 15;
  1177     0182  300F               	movlw	15
  1178     0183  00E2               	movwf	main@length_459
  1179     0184  3000               	movlw	0
  1180     0185  00E3               	movwf	main@length_459+1
  1181     0186                     l1386:
  1182                           
  1183                           ;main.c: 287:                 for (int count=0; count<=length; count++){
  1184     0186  01E5               	clrf	main@count_460
  1185     0187  01E6               	clrf	main@count_460+1
  1186     0188  29A2               	goto	l1396
  1187     0189                     l1388:
  1188                           
  1189                           ;main.c: 288:                     char rxdData = rxdChar[count];
  1190     0189  0020               	movlb	0	; select bank0
  1191     018A  0865               	movf	main@count_460,w
  1192     018B  3E48               	addlw	(low (_rxdChar| 0))& (0+255)
  1193     018C  0086               	movwf	6
  1194     018D  0187               	clrf	7
  1195     018E  0801               	movf	1,w
  1196     018F  00E4               	movwf	main@rxdData
  1197     0190                     l1390:
  1198                           
  1199                           ;main.c: 289:                     add_id(start_addr, rxdData);
  1200     0190  0879               	movf	_start_addr+1,w
  1201     0191  00F3               	movwf	add_id@start_addr+1
  1202     0192  0878               	movf	_start_addr,w
  1203     0193  00F2               	movwf	add_id@start_addr
  1204     0194  0864               	movf	main@rxdData,w
  1205     0195  00F4               	movwf	add_id@rxdData
  1206     0196  3182  2273  3180   	fcall	_add_id
  1207     0199                     l1392:
  1208                           
  1209                           ;main.c: 290:                     start_addr++;
  1210     0199  3001               	movlw	1
  1211     019A  07F8               	addwf	_start_addr,f
  1212     019B  3000               	movlw	0
  1213     019C  3DF9               	addwfc	_start_addr+1,f
  1214     019D                     l1394:
  1215                           
  1216                           ;main.c: 291:                 }
  1217     019D  3001               	movlw	1
  1218     019E  0020               	movlb	0	; select bank0
  1219     019F  07E5               	addwf	main@count_460,f
  1220     01A0  3000               	movlw	0
  1221     01A1  3DE6               	addwfc	main@count_460+1,f
  1222     01A2                     l1396:
  1223     01A2  0863               	movf	main@length_459+1,w
  1224     01A3  3A80               	xorlw	128
  1225     01A4  00DE               	movwf	??_main
  1226     01A5  0866               	movf	main@count_460+1,w
  1227     01A6  3A80               	xorlw	128
  1228     01A7  025E               	subwf	??_main,w
  1229     01A8  1D03               	skipz
  1230     01A9  29AC               	goto	u695
  1231     01AA  0865               	movf	main@count_460,w
  1232     01AB  0262               	subwf	main@length_459,w
  1233     01AC                     u695:
  1234     01AC  1803               	skipnc
  1235     01AD  29AF               	goto	u691
  1236     01AE  29B0               	goto	u690
  1237     01AF                     u691:
  1238     01AF  2989               	goto	l1388
  1239     01B0                     u690:
  1240     01B0  28BB               	goto	l1326
  1241     01B1  3180  2849         	ljmp	start
  1242     01B3                     __end_of_main:
  1243                           
  1244                           	psect	text1
  1245     01ED                     __ptext1:	
  1246 ;; *************** function _set_index3 *****************
  1247 ;; Defined at:
  1248 ;;		line 151 in file "main.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  id_set          1    5[COMMON] unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  2  115[None  ] int 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1266 ;;Total ram usage:        2 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; Hardware stack levels required when called: 2
  1269 ;; This function calls:
  1270 ;;		_read_id
  1271 ;; This function is called by:
  1272 ;;		_main
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276     01ED                     _set_index3:	
  1277                           ;psect for function _set_index3
  1278                           
  1279     01ED                     l1116:	
  1280                           ;incstack = 0
  1281                           ; Regs used in _set_index3: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1282                           
  1283                           
  1284                           ;main.c: 152:     start_addr = 0x30;
  1285     01ED  3030               	movlw	48
  1286     01EE  00F8               	movwf	_start_addr
  1287     01EF  3000               	movlw	0
  1288     01F0  00F9               	movwf	_start_addr+1
  1289     01F1                     l1118:
  1290                           
  1291                           ;main.c: 153:     for (uint8_t id_set=0; id_set<=16; id_set++){
  1292     01F1  01F5               	clrf	set_index3@id_set
  1293     01F2                     l1124:
  1294                           
  1295                           ;main.c: 154:         read_id(start_addr);
  1296     01F2  0879               	movf	_start_addr+1,w
  1297     01F3  00F3               	movwf	read_id@start_addr+1
  1298     01F4  0878               	movf	_start_addr,w
  1299     01F5  00F2               	movwf	read_id@start_addr
  1300     01F6  3182  22A7  3181   	fcall	_read_id
  1301     01F9                     l1126:
  1302                           
  1303                           ;main.c: 155:         id3[id_set]=EEDATA;
  1304     01F9  0875               	movf	set_index3@id_set,w
  1305     01FA  3EA0               	addlw	(low (_id3| 0))& (0+255)
  1306     01FB  0086               	movwf	6
  1307     01FC  0187               	clrf	7
  1308     01FD  0023               	movlb	3	; select bank3
  1309     01FE  0813               	movf	19,w	;volatile
  1310     01FF  0081               	movwf	1
  1311     0200                     l1128:
  1312                           
  1313                           ;main.c: 156:         start_addr++;
  1314     0200  3001               	movlw	1
  1315     0201  07F8               	addwf	_start_addr,f
  1316     0202  3000               	movlw	0
  1317     0203  3DF9               	addwfc	_start_addr+1,f
  1318     0204                     l1130:
  1319                           
  1320                           ;main.c: 157:         }
  1321     0204  3001               	movlw	1
  1322     0205  00F4               	movwf	??_set_index3
  1323     0206  0874               	movf	??_set_index3,w
  1324     0207  07F5               	addwf	set_index3@id_set,f
  1325     0208                     l1132:
  1326     0208  3011               	movlw	17
  1327     0209  0275               	subwf	set_index3@id_set,w
  1328     020A  1C03               	skipc
  1329     020B  2A0D               	goto	u321
  1330     020C  2A0E               	goto	u320
  1331     020D                     u321:
  1332     020D  29F2               	goto	l1124
  1333     020E                     u320:
  1334     020E                     l118:
  1335     020E  0008               	return
  1336     020F                     __end_of_set_index3:
  1337                           
  1338                           	psect	text2
  1339     020F                     __ptext2:	
  1340 ;; *************** function _set_index2 *****************
  1341 ;; Defined at:
  1342 ;;		line 141 in file "main.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  id_set          1    5[COMMON] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  2  110[None  ] int 
  1349 ;; Registers used:
  1350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1358 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1360 ;;Total ram usage:        2 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 2
  1363 ;; This function calls:
  1364 ;;		_read_id
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370     020F                     _set_index2:	
  1371                           ;psect for function _set_index2
  1372                           
  1373     020F                     l1098:	
  1374                           ;incstack = 0
  1375                           ; Regs used in _set_index2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1376                           
  1377                           
  1378                           ;main.c: 142:     start_addr = 0x20;
  1379     020F  3020               	movlw	32
  1380     0210  00F8               	movwf	_start_addr
  1381     0211  3000               	movlw	0
  1382     0212  00F9               	movwf	_start_addr+1
  1383     0213                     l1100:
  1384                           
  1385                           ;main.c: 143:     for (uint8_t id_set=0; id_set<=16; id_set++){
  1386     0213  01F5               	clrf	set_index2@id_set
  1387     0214                     l1106:
  1388                           
  1389                           ;main.c: 144:         read_id(start_addr);
  1390     0214  0879               	movf	_start_addr+1,w
  1391     0215  00F3               	movwf	read_id@start_addr+1
  1392     0216  0878               	movf	_start_addr,w
  1393     0217  00F2               	movwf	read_id@start_addr
  1394     0218  3182  22A7  3182   	fcall	_read_id
  1395     021B                     l1108:
  1396                           
  1397                           ;main.c: 145:         id2[id_set]=EEDATA;
  1398     021B  0875               	movf	set_index2@id_set,w
  1399     021C  3EB0               	addlw	(low (_id2| 0))& (0+255)
  1400     021D  0086               	movwf	6
  1401     021E  0187               	clrf	7
  1402     021F  0023               	movlb	3	; select bank3
  1403     0220  0813               	movf	19,w	;volatile
  1404     0221  0081               	movwf	1
  1405     0222                     l1110:
  1406                           
  1407                           ;main.c: 146:         start_addr++;
  1408     0222  3001               	movlw	1
  1409     0223  07F8               	addwf	_start_addr,f
  1410     0224  3000               	movlw	0
  1411     0225  3DF9               	addwfc	_start_addr+1,f
  1412     0226                     l1112:
  1413                           
  1414                           ;main.c: 147:         }
  1415     0226  3001               	movlw	1
  1416     0227  00F4               	movwf	??_set_index2
  1417     0228  0874               	movf	??_set_index2,w
  1418     0229  07F5               	addwf	set_index2@id_set,f
  1419     022A                     l1114:
  1420     022A  3011               	movlw	17
  1421     022B  0275               	subwf	set_index2@id_set,w
  1422     022C  1C03               	skipc
  1423     022D  2A2F               	goto	u311
  1424     022E  2A30               	goto	u310
  1425     022F                     u311:
  1426     022F  2A14               	goto	l1106
  1427     0230                     u310:
  1428     0230                     l113:
  1429     0230  0008               	return
  1430     0231                     __end_of_set_index2:
  1431                           
  1432                           	psect	text3
  1433     0231                     __ptext3:	
  1434 ;; *************** function _set_index1 *****************
  1435 ;; Defined at:
  1436 ;;		line 131 in file "main.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  id_set          1    5[COMMON] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  2  105[None  ] int 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1454 ;;Total ram usage:        2 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 2
  1457 ;; This function calls:
  1458 ;;		_read_id
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464     0231                     _set_index1:	
  1465                           ;psect for function _set_index1
  1466                           
  1467     0231                     l1080:	
  1468                           ;incstack = 0
  1469                           ; Regs used in _set_index1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1470                           
  1471                           
  1472                           ;main.c: 132:     start_addr = 0x10;
  1473     0231  3010               	movlw	16
  1474     0232  00F8               	movwf	_start_addr
  1475     0233  3000               	movlw	0
  1476     0234  00F9               	movwf	_start_addr+1
  1477     0235                     l1082:
  1478                           
  1479                           ;main.c: 133:     for (uint8_t id_set=0; id_set<=16; id_set++){
  1480     0235  01F5               	clrf	set_index1@id_set
  1481     0236                     l1088:
  1482                           
  1483                           ;main.c: 134:         read_id(start_addr);
  1484     0236  0879               	movf	_start_addr+1,w
  1485     0237  00F3               	movwf	read_id@start_addr+1
  1486     0238  0878               	movf	_start_addr,w
  1487     0239  00F2               	movwf	read_id@start_addr
  1488     023A  3182  22A7  3182   	fcall	_read_id
  1489     023D                     l1090:
  1490                           
  1491                           ;main.c: 135:         id1[id_set]=EEDATA;
  1492     023D  0875               	movf	set_index1@id_set,w
  1493     023E  3E20               	addlw	(low (_id1| 0))& (0+255)
  1494     023F  0086               	movwf	6
  1495     0240  0187               	clrf	7
  1496     0241  0023               	movlb	3	; select bank3
  1497     0242  0813               	movf	19,w	;volatile
  1498     0243  0081               	movwf	1
  1499     0244                     l1092:
  1500                           
  1501                           ;main.c: 136:         start_addr++;
  1502     0244  3001               	movlw	1
  1503     0245  07F8               	addwf	_start_addr,f
  1504     0246  3000               	movlw	0
  1505     0247  3DF9               	addwfc	_start_addr+1,f
  1506     0248                     l1094:
  1507                           
  1508                           ;main.c: 137:         }
  1509     0248  3001               	movlw	1
  1510     0249  00F4               	movwf	??_set_index1
  1511     024A  0874               	movf	??_set_index1,w
  1512     024B  07F5               	addwf	set_index1@id_set,f
  1513     024C                     l1096:
  1514     024C  3011               	movlw	17
  1515     024D  0275               	subwf	set_index1@id_set,w
  1516     024E  1C03               	skipc
  1517     024F  2A51               	goto	u301
  1518     0250  2A52               	goto	u300
  1519     0251                     u301:
  1520     0251  2A36               	goto	l1088
  1521     0252                     u300:
  1522     0252                     l108:
  1523     0252  0008               	return
  1524     0253                     __end_of_set_index1:
  1525                           
  1526                           	psect	text4
  1527     0253                     __ptext4:	
  1528 ;; *************** function _set_index0 *****************
  1529 ;; Defined at:
  1530 ;;		line 121 in file "main.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  id_set          1    5[COMMON] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  2  100[None  ] int 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1548 ;;Total ram usage:        2 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 2
  1551 ;; This function calls:
  1552 ;;		_read_id
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558     0253                     _set_index0:	
  1559                           ;psect for function _set_index0
  1560                           
  1561     0253                     l1064:	
  1562                           ;incstack = 0
  1563                           ; Regs used in _set_index0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1564                           
  1565                           
  1566                           ;main.c: 122:     start_addr = 0x0;
  1567     0253  01F8               	clrf	_start_addr
  1568     0254  01F9               	clrf	_start_addr+1
  1569                           
  1570                           ;main.c: 123:     for (uint8_t id_set=0; id_set<=12; id_set++){
  1571     0255  01F5               	clrf	set_index0@id_set
  1572     0256                     l1070:
  1573                           
  1574                           ;main.c: 124:         read_id(start_addr);
  1575     0256  0879               	movf	_start_addr+1,w
  1576     0257  00F3               	movwf	read_id@start_addr+1
  1577     0258  0878               	movf	_start_addr,w
  1578     0259  00F2               	movwf	read_id@start_addr
  1579     025A  3182  22A7  3182   	fcall	_read_id
  1580     025D                     l1072:
  1581                           
  1582                           ;main.c: 125:         id0[id_set]=EEDATA;
  1583     025D  0875               	movf	set_index0@id_set,w
  1584     025E  3E38               	addlw	(low (_id0| 0))& (0+255)
  1585     025F  0086               	movwf	6
  1586     0260  0187               	clrf	7
  1587     0261  0023               	movlb	3	; select bank3
  1588     0262  0813               	movf	19,w	;volatile
  1589     0263  0081               	movwf	1
  1590     0264                     l1074:
  1591                           
  1592                           ;main.c: 126:         start_addr++;
  1593     0264  3001               	movlw	1
  1594     0265  07F8               	addwf	_start_addr,f
  1595     0266  3000               	movlw	0
  1596     0267  3DF9               	addwfc	_start_addr+1,f
  1597     0268                     l1076:
  1598                           
  1599                           ;main.c: 127:         }
  1600     0268  3001               	movlw	1
  1601     0269  00F4               	movwf	??_set_index0
  1602     026A  0874               	movf	??_set_index0,w
  1603     026B  07F5               	addwf	set_index0@id_set,f
  1604     026C                     l1078:
  1605     026C  300D               	movlw	13
  1606     026D  0275               	subwf	set_index0@id_set,w
  1607     026E  1C03               	skipc
  1608     026F  2A71               	goto	u291
  1609     0270  2A72               	goto	u290
  1610     0271                     u291:
  1611     0271  2A56               	goto	l1070
  1612     0272                     u290:
  1613     0272                     l103:
  1614     0272  0008               	return
  1615     0273                     __end_of_set_index0:
  1616                           
  1617                           	psect	text5
  1618     02A7                     __ptext5:	
  1619 ;; *************** function _read_id *****************
  1620 ;; Defined at:
  1621 ;;		line 112 in file "main.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  start_addr      2    2[COMMON] unsigned short 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2    2[COMMON] int 
  1628 ;; Registers used:
  1629 ;;		wreg
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1639 ;;Total ram usage:        2 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_set_index0
  1646 ;;		_set_index1
  1647 ;;		_set_index2
  1648 ;;		_set_index3
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653     02A7                     _read_id:	
  1654                           ;psect for function _read_id
  1655                           
  1656     02A7                     l1020:	
  1657                           ;incstack = 0
  1658                           ; Regs used in _read_id: [wreg]
  1659                           
  1660                           
  1661                           ;main.c: 114:             EEADR = start_addr;
  1662     02A7  0873               	movf	read_id@start_addr+1,w
  1663     02A8  0023               	movlb	3	; select bank3
  1664     02A9  0092               	movwf	18	;volatile
  1665     02AA  0872               	movf	read_id@start_addr,w
  1666     02AB  0091               	movwf	17	;volatile
  1667     02AC                     l1022:
  1668                           
  1669                           ;main.c: 115:             EECON1bits.EEPGD = 0;
  1670     02AC  1395               	bcf	21,7	;volsfr
  1671     02AD                     l1024:
  1672                           
  1673                           ;main.c: 116:             EECON1bits.CFGS = 0;
  1674     02AD  1315               	bcf	21,6	;volsfr
  1675     02AE                     l1026:
  1676                           
  1677                           ;main.c: 117:             EECON1bits.RD = 1;
  1678     02AE  1415               	bsf	21,0	;volsfr
  1679                           
  1680                           ;main.c: 118:             return (EEDATA);;	Return value of _read_id is never used
  1681     02AF  0813               	movf	19,w	;volatile
  1682     02B0                     l98:
  1683     02B0  0008               	return
  1684     02B1                     __end_of_read_id:
  1685                           
  1686                           	psect	text6
  1687     01B3                     __ptext6:	
  1688 ;; *************** function _compareIdToRecd *****************
  1689 ;; Defined at:
  1690 ;;		line 161 in file "main.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  id              1    wreg     PTR int 
  1693 ;;		 -> id0(16), 
  1694 ;;  rxd             1    2[COMMON] PTR int 
  1695 ;;		 -> rxdChar(16), 
  1696 ;;  compareLengt    2    3[COMMON] int 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  id              1    5[COMMON] PTR int 
  1699 ;;		 -> id0(16), 
  1700 ;;  i               2    6[COMMON] int 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      _Bool 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1710 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1711 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Totals:         6       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;Total ram usage:       12 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 1
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724     01B3                     _compareIdToRecd:	
  1725                           ;psect for function _compareIdToRecd
  1726                           
  1727                           
  1728                           ;incstack = 0
  1729                           ; Regs used in _compareIdToRecd: [wreg+fsr1l+fsr1h+status,2+status,0]
  1730                           ;compareIdToRecd@id stored from wreg
  1731     01B3  00F5               	movwf	compareIdToRecd@id
  1732     01B4                     l1276:
  1733                           
  1734                           ;main.c: 162:         for(int i = 0; i <compareLength; i++){
  1735     01B4  01F6               	clrf	compareIdToRecd@i
  1736     01B5  01F7               	clrf	compareIdToRecd@i+1
  1737     01B6  29DC               	goto	l121
  1738     01B7                     l1278:
  1739                           
  1740                           ;main.c: 163:             if(id[i] != rxd[i]){
  1741     01B7  3576               	lslf	compareIdToRecd@i,w
  1742     01B8  0772               	addwf	compareIdToRecd@rxd,w
  1743     01B9  0020               	movlb	0	; select bank0
  1744     01BA  00D8               	movwf	??_compareIdToRecd
  1745     01BB  0858               	movf	??_compareIdToRecd,w
  1746     01BC  0086               	movwf	6
  1747     01BD  0187               	clrf	7
  1748     01BE  3F40               	moviw [0]fsr1
  1749     01BF  00D9               	movwf	??_compareIdToRecd+1
  1750     01C0  3F41               	moviw [1]fsr1
  1751     01C1  00DA               	movwf	??_compareIdToRecd+2
  1752     01C2  3576               	lslf	compareIdToRecd@i,w
  1753     01C3  0775               	addwf	compareIdToRecd@id,w
  1754     01C4  00DB               	movwf	??_compareIdToRecd+3
  1755     01C5  085B               	movf	??_compareIdToRecd+3,w
  1756     01C6  0086               	movwf	6
  1757     01C7  0187               	clrf	7
  1758     01C8  3F40               	moviw [0]fsr1
  1759     01C9  00DC               	movwf	??_compareIdToRecd+4
  1760     01CA  3F41               	moviw [1]fsr1
  1761     01CB  00DD               	movwf	??_compareIdToRecd+5
  1762     01CC  085A               	movf	??_compareIdToRecd+2,w
  1763     01CD  065D               	xorwf	??_compareIdToRecd+5,w
  1764     01CE  1D03               	skipz
  1765     01CF  29D2               	goto	u535
  1766     01D0  0859               	movf	??_compareIdToRecd+1,w
  1767     01D1  065C               	xorwf	??_compareIdToRecd+4,w
  1768     01D2                     u535:
  1769     01D2  1903               	skipnz
  1770     01D3  29D5               	goto	u531
  1771     01D4  29D6               	goto	u530
  1772     01D5                     u531:
  1773     01D5  29D8               	goto	l1284
  1774     01D6                     u530:
  1775     01D6                     l1280:
  1776                           
  1777                           ;main.c: 164:                 return 0;
  1778     01D6  3000               	movlw	0
  1779     01D7  29EC               	goto	l124
  1780     01D8                     l1284:
  1781                           
  1782                           ;main.c: 166:     }
  1783     01D8  3001               	movlw	1
  1784     01D9  07F6               	addwf	compareIdToRecd@i,f
  1785     01DA  3000               	movlw	0
  1786     01DB  3DF7               	addwfc	compareIdToRecd@i+1,f
  1787     01DC                     l121:
  1788     01DC  0877               	movf	compareIdToRecd@i+1,w
  1789     01DD  3A80               	xorlw	128
  1790     01DE  0020               	movlb	0	; select bank0
  1791     01DF  00D8               	movwf	??_compareIdToRecd
  1792     01E0  0874               	movf	compareIdToRecd@compareLength+1,w
  1793     01E1  3A80               	xorlw	128
  1794     01E2  0258               	subwf	??_compareIdToRecd,w
  1795     01E3  1D03               	skipz
  1796     01E4  29E7               	goto	u545
  1797     01E5  0873               	movf	compareIdToRecd@compareLength,w
  1798     01E6  0276               	subwf	compareIdToRecd@i,w
  1799     01E7                     u545:
  1800     01E7  1C03               	skipc
  1801     01E8  29EA               	goto	u541
  1802     01E9  29EB               	goto	u540
  1803     01EA                     u541:
  1804     01EA  29B7               	goto	l1278
  1805     01EB                     u540:
  1806     01EB                     l1286:
  1807                           
  1808                           ;main.c: 167:         return 1;
  1809     01EB  3001               	movlw	1
  1810     01EC                     l124:
  1811     01EC  0008               	return
  1812     01ED                     __end_of_compareIdToRecd:
  1813                           
  1814                           	psect	text7
  1815     0273                     __ptext7:	
  1816 ;; *************** function _add_id *****************
  1817 ;; Defined at:
  1818 ;;		line 94 in file "main.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  start_addr      2    2[COMMON] unsigned short 
  1821 ;;  rxdData         1    4[COMMON] unsigned char 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  2    2[COMMON] int 
  1826 ;; Registers used:
  1827 ;;		wreg
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1833 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1836 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;Total ram usage:        3 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847     0273                     _add_id:	
  1848                           ;psect for function _add_id
  1849                           
  1850     0273                     l1048:	
  1851                           ;incstack = 0
  1852                           ; Regs used in _add_id: [wreg]
  1853                           
  1854                           
  1855                           ;main.c: 96:             EEADR = start_addr;
  1856     0273  0873               	movf	add_id@start_addr+1,w
  1857     0274  0023               	movlb	3	; select bank3
  1858     0275  0092               	movwf	18	;volatile
  1859     0276  0872               	movf	add_id@start_addr,w
  1860     0277  0091               	movwf	17	;volatile
  1861                           
  1862                           ;main.c: 97:             EEDATA = rxdData;
  1863     0278  0874               	movf	add_id@rxdData,w
  1864     0279  0093               	movwf	19	;volatile
  1865     027A                     l1050:
  1866                           
  1867                           ;main.c: 98:             EECON1bits.CFGS = 0;
  1868     027A  1315               	bcf	21,6	;volsfr
  1869     027B                     l1052:
  1870                           
  1871                           ;main.c: 99:             EECON1bits.EEPGD = 0;
  1872     027B  1395               	bcf	21,7	;volsfr
  1873     027C                     l1054:
  1874                           
  1875                           ;main.c: 100:             EECON1bits.WREN = 1;
  1876     027C  1515               	bsf	21,2	;volsfr
  1877     027D                     l1056:
  1878                           
  1879                           ;main.c: 101:             INTCONbits.GIE = 0;
  1880     027D  138B               	bcf	11,7	;volatile
  1881                           
  1882                           ;main.c: 102:             EECON2 = 0x55;
  1883     027E  3055               	movlw	85
  1884     027F  0096               	movwf	22	;volsfr
  1885                           
  1886                           ;main.c: 103:             EECON2 = 0xAA;
  1887     0280  30AA               	movlw	170
  1888     0281  0096               	movwf	22	;volsfr
  1889     0282                     l1058:
  1890                           
  1891                           ;main.c: 104:             EECON1bits.WR = 1;
  1892     0282  1495               	bsf	21,1	;volsfr
  1893     0283                     l1060:
  1894                           
  1895                           ;main.c: 105:             INTCONbits.GIE = 1;
  1896     0283  178B               	bsf	11,7	;volatile
  1897     0284                     l1062:
  1898                           
  1899                           ;main.c: 106:             EECON1bits.WREN = 0;
  1900     0284  1115               	bcf	21,2	;volsfr
  1901     0285                     l92:	
  1902                           ;main.c: 108:             }
  1903                           
  1904                           
  1905                           ;main.c: 107:             while (EECON1bits.WR == 1){
  1906     0285  1895               	btfsc	21,1	;volsfr
  1907     0286  2A88               	goto	u281
  1908     0287  2A89               	goto	u280
  1909     0288                     u281:
  1910     0288  2A85               	goto	l92
  1911     0289                     u280:
  1912     0289                     l95:
  1913     0289  0008               	return
  1914     028A                     __end_of_add_id:
  1915                           
  1916                           	psect	text8
  1917     02B1                     __ptext8:	
  1918 ;; *************** function _EUSART_Write *****************
  1919 ;; Defined at:
  1920 ;;		line 72 in file "main.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  data            1    wreg     unsigned char 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  data            1    2[COMMON] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;Total ram usage:        1 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948     02B1                     _EUSART_Write:	
  1949                           ;psect for function _EUSART_Write
  1950                           
  1951                           
  1952                           ;incstack = 0
  1953                           ; Regs used in _EUSART_Write: [wreg]
  1954                           ;EUSART_Write@data stored from wreg
  1955     02B1  00F2               	movwf	EUSART_Write@data
  1956     02B2                     l1044:
  1957     02B2                     l78:	
  1958                           ;main.c: 73:     while (!PIR1bits.TXIF);
  1959                           
  1960     02B2  0020               	movlb	0	; select bank0
  1961     02B3  1E11               	btfss	17,4	;volatile
  1962     02B4  2AB6               	goto	u271
  1963     02B5  2AB7               	goto	u270
  1964     02B6                     u271:
  1965     02B6  2AB2               	goto	l78
  1966     02B7                     u270:
  1967     02B7                     l1046:
  1968                           
  1969                           ;main.c: 74:     TXREG = data;
  1970     02B7  0872               	movf	EUSART_Write@data,w
  1971     02B8  0023               	movlb	3	; select bank3
  1972     02B9  009A               	movwf	26	;volatile
  1973     02BA                     l81:
  1974     02BA  0008               	return
  1975     02BB                     __end_of_EUSART_Write:
  1976                           
  1977                           	psect	text9
  1978     029B                     __ptext9:	
  1979 ;; *************** function _EUSART_Init *****************
  1980 ;; Defined at:
  1981 ;;		line 55 in file "main.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;Total ram usage:        0 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; Hardware stack levels required when called: 1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_main
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009     029B                     _EUSART_Init:	
  2010                           ;psect for function _EUSART_Init
  2011                           
  2012     029B                     l1030:	
  2013                           ;incstack = 0
  2014                           ; Regs used in _EUSART_Init: [wreg]
  2015                           
  2016                           
  2017                           ;main.c: 57:     SPBRGH = 0x34;
  2018     029B  3034               	movlw	52
  2019     029C  0023               	movlb	3	; select bank3
  2020     029D  009C               	movwf	28	;volatile
  2021                           
  2022                           ;main.c: 58:     SPBRGL = 0x10;
  2023     029E  3010               	movlw	16
  2024     029F  009B               	movwf	27	;volatile
  2025     02A0                     l1032:
  2026                           
  2027                           ;main.c: 61:     TXSTAbits.SYNC = 0;
  2028     02A0  121E               	bcf	30,4	;volatile
  2029     02A1                     l1034:
  2030                           
  2031                           ;main.c: 62:     TXSTAbits.BRGH = 1;
  2032     02A1  151E               	bsf	30,2	;volatile
  2033     02A2                     l1036:
  2034                           
  2035                           ;main.c: 63:     BAUDCONbits.BRG16 = 1;
  2036     02A2  159F               	bsf	31,3	;volatile
  2037     02A3                     l1038:
  2038                           
  2039                           ;main.c: 64:     RCSTAbits.SPEN = 1;
  2040     02A3  179D               	bsf	29,7	;volatile
  2041     02A4                     l1040:
  2042                           
  2043                           ;main.c: 67:     TXSTAbits.TXEN = 1;
  2044     02A4  169E               	bsf	30,5	;volatile
  2045     02A5                     l1042:
  2046                           
  2047                           ;main.c: 68:     RCSTAbits.CREN = 1;
  2048     02A5  161D               	bsf	29,4	;volatile
  2049     02A6                     l75:
  2050     02A6  0008               	return
  2051     02A7                     __end_of_EUSART_Init:
  2052                           
  2053                           	psect	intentry
  2054     0004                     __pintentry:	
  2055 ;; *************** function _ISR *****************
  2056 ;; Defined at:
  2057 ;;		line 80 in file "main.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  2   85[None  ] int 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2074 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2075 ;;Total ram usage:        2 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		Interrupt level 1
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084     0004                     _ISR:
  2085                           
  2086                           ;incstack = 0
  2087     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2088                           
  2089                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2090     0005  3180               	pagesel	$
  2091     0006                     i1l1148:
  2092                           
  2093                           ;main.c: 82:     rxdChar[num] = RCREG;
  2094     0006  0020               	movlb	0	; select bank0
  2095     0007  0836               	movf	_num,w
  2096     0008  3E48               	addlw	(low (_rxdChar| 0))& (0+255)
  2097     0009  0086               	movwf	6
  2098     000A  0187               	clrf	7
  2099     000B  0023               	movlb	3	; select bank3
  2100     000C  0819               	movf	25,w	;volatile
  2101     000D  0081               	movwf	1
  2102     000E                     i1l1150:
  2103                           
  2104                           ;main.c: 83:     num++;
  2105     000E  3001               	movlw	1
  2106     000F  0020               	movlb	0	; select bank0
  2107     0010  07B6               	addwf	_num,f
  2108     0011  3000               	movlw	0
  2109     0012  3DB7               	addwfc	_num+1,f
  2110     0013                     i1l1152:
  2111                           
  2112                           ;main.c: 84:     if (rxdChar == '\n' || rxdChar == '\r' || num >= 16) {
  2113     0013  300A               	movlw	10
  2114     0014  00F0               	movwf	??_ISR
  2115     0015  3000               	movlw	0
  2116     0016  00F1               	movwf	??_ISR+1
  2117     0017  3000               	movlw	0
  2118     0018  0671               	xorwf	??_ISR+1,w
  2119     0019  1D03               	skipz
  2120     001A  281D               	goto	u35_25
  2121     001B  3048               	movlw	low (_rxdChar| 0)
  2122     001C  0670               	xorwf	??_ISR,w
  2123     001D                     u35_25:
  2124     001D  1903               	skipnz
  2125     001E  2820               	goto	u35_21
  2126     001F  2821               	goto	u35_20
  2127     0020                     u35_21:
  2128     0020  283C               	goto	i1l1158
  2129     0021                     u35_20:
  2130     0021                     i1l1154:
  2131     0021  300D               	movlw	13
  2132     0022  00F0               	movwf	??_ISR
  2133     0023  3000               	movlw	0
  2134     0024  00F1               	movwf	??_ISR+1
  2135     0025  3000               	movlw	0
  2136     0026  0671               	xorwf	??_ISR+1,w
  2137     0027  1D03               	skipz
  2138     0028  282B               	goto	u36_25
  2139     0029  3048               	movlw	low (_rxdChar| 0)
  2140     002A  0670               	xorwf	??_ISR,w
  2141     002B                     u36_25:
  2142     002B  1903               	skipnz
  2143     002C  282E               	goto	u36_21
  2144     002D  282F               	goto	u36_20
  2145     002E                     u36_21:
  2146     002E  283C               	goto	i1l1158
  2147     002F                     u36_20:
  2148     002F                     i1l1156:
  2149     002F  0837               	movf	_num+1,w
  2150     0030  3A80               	xorlw	128
  2151     0031  00F0               	movwf	??_ISR
  2152     0032  3080               	movlw	128
  2153     0033  0270               	subwf	??_ISR,w
  2154     0034  1D03               	skipz
  2155     0035  2838               	goto	u37_25
  2156     0036  3010               	movlw	16
  2157     0037  0236               	subwf	_num,w
  2158     0038                     u37_25:
  2159     0038  1C03               	skipc
  2160     0039  283B               	goto	u37_21
  2161     003A  283C               	goto	u37_20
  2162     003B                     u37_21:
  2163     003B  2847               	goto	i1l89
  2164     003C                     u37_20:
  2165     003C                     i1l1158:
  2166                           
  2167                           ;main.c: 85:             num = 0;
  2168     003C  0020               	movlb	0	; select bank0
  2169     003D  01B6               	clrf	_num
  2170     003E  01B7               	clrf	_num+1
  2171     003F                     i1l1160:
  2172                           
  2173                           ;main.c: 86:             readData = 1;
  2174     003F  3001               	movlw	1
  2175     0040  00B4               	movwf	_readData
  2176     0041  3000               	movlw	0
  2177     0042  00B5               	movwf	_readData+1
  2178     0043                     i1l1162:
  2179                           
  2180                           ;main.c: 87:             RCSTAbits.CREN = 0;
  2181     0043  0023               	movlb	3	; select bank3
  2182     0044  121D               	bcf	29,4	;volatile
  2183     0045                     i1l1164:
  2184                           
  2185                           ;main.c: 88:             LATAbits.LATA1 = 0;
  2186     0045  0022               	movlb	2	; select bank2
  2187     0046  108C               	bcf	12,1	;volatile
  2188     0047                     i1l89:
  2189     0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2190     0048  0009               	retfie
  2191     0049                     __end_of_ISR:
  2192     007E                     btemp	set	126	;btemp
  2193     007E                     int$flags	set	126
  2194     007E                     wtemp0	set	126
  2195                           
  2196                           	psect	config
  2197                           
  2198                           ;Config register CONFIG1 @ 0x8007
  2199                           ;	Oscillator Selection
  2200                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  2201                           ;	Watchdog Timer Enable
  2202                           ;	WDTE = OFF, WDT disabled
  2203                           ;	Power-up Timer Enable
  2204                           ;	PWRTE = OFF, PWRT disabled
  2205                           ;	MCLR Pin Function Select
  2206                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2207                           ;	Flash Program Memory Code Protection
  2208                           ;	CP = OFF, Program memory code protection is disabled
  2209                           ;	Data Memory Code Protection
  2210                           ;	CPD = 0x1, unprogrammed default
  2211                           ;	Brown-out Reset Enable
  2212                           ;	BOREN = ON, Brown-out Reset enabled
  2213                           ;	Clock Out Enable
  2214                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2215                           ;	Internal/External Switchover
  2216                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2217                           ;	Fail-Safe Clock Monitor Enable
  2218                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2219     8007                     	org	32775
  2220     8007  3FE2               	dw	16354

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         105
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     17      74
    BANK1            80      0      65
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    compareIdToRecd@id	PTR int  size(1) Largest target is 16
		 -> id0(BANK0[16]), 

    compareIdToRecd@rxd	PTR int  size(1) Largest target is 16
		 -> rxdChar(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_compareIdToRecd
    _set_index3->_read_id
    _set_index2->_read_id
    _set_index1->_read_id
    _set_index0->_read_id

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_compareIdToRecd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    3709
                                              6 BANK0     11    11      0
                        _EUSART_Init
                       _EUSART_Write
                             _add_id
                    _compareIdToRecd
                            _read_id
                         _set_index0
                         _set_index1
                         _set_index2
                         _set_index3
 ---------------------------------------------------------------------------------
 (1) _set_index3                                           2     2      0     546
                                              4 COMMON     2     2      0
                            _read_id
 ---------------------------------------------------------------------------------
 (1) _set_index2                                           2     2      0     546
                                              4 COMMON     2     2      0
                            _read_id
 ---------------------------------------------------------------------------------
 (1) _set_index1                                           2     2      0     546
                                              4 COMMON     2     2      0
                            _read_id
 ---------------------------------------------------------------------------------
 (1) _set_index0                                           2     2      0     546
                                              4 COMMON     2     2      0
                            _read_id
 ---------------------------------------------------------------------------------
 (2) _read_id                                              2     0      2     478
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _compareIdToRecd                                     12     9      3     408
                                              2 COMMON     6     3      3
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _add_id                                               3     0      3     348
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Init
   _EUSART_Write
   _add_id
   _compareIdToRecd
   _read_id
   _set_index0
     _read_id
   _set_index1
     _read_id
   _set_index2
     _read_id
   _set_index3
     _read_id

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      41       7       81.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      96      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      96      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 12 17:58:18 2025

                          l81 02BA                            l75 02A6                            l92 0285  
                          l78 02B2                            l95 0289                            l98 02B0  
                         l103 0272                           l121 01DC                           l113 0230  
                         l124 01EC                           l108 0252                           l118 020E  
                         l136 00EF                           l147 0161                           u300 0252  
                         u301 0251                           u310 0230                           u311 022F  
                         u320 020E                           u321 020D                           u270 02B7  
                         u271 02B6                           u280 0289                           u600 00C5  
                         u281 0288                           u601 00C4                           u530 01D6  
                         u290 0272                           u610 00D2                           u531 01D5  
                         u291 0271                           u611 00D1                           u540 01EB  
                         u620 00E2                           _ISR 0004                           u541 01EA  
                         u621 00E1                           u630 00F6                           u550 0096  
                         u535 01D2                           u631 00F5                           u551 0095  
                         u640 0143                           u560 009C                           u545 01E7  
                         u641 0142                           u561 009B                           u650 0152  
                         u570 00A2                           u651 0151                           u707 0126  
                         u571 00A1                           u660 0159                           u580 00A8  
                         u661 0158                           u645 013F                           u581 00A7  
                         u670 0170                           u590 00BB                           u671 016F  
                         u591 00BA                           u680 0182                           u681 0181  
                         u690 01B0                           u691 01AF                           u695 01AC  
                         _id0 0038                           _id1 0020                           _id2 00B0  
                         _id3 00A0                           _loc 0032                           _exp 00D0  
                         _val 007A                           _num 0036                           wreg 0009  
                ?_EUSART_Init 0070                          ?_ISR 0070                          l1020 02A7  
                        l1100 0213                          l1030 029B                          l1022 02AC  
                        l1110 0222                          l1040 02A4                          l1032 02A0  
                        l1024 02AD                          l1112 0226                          l1042 02A5  
                        l1034 02A1                          l1050 027A                          l1026 02AE  
                        l1114 022A                          l1106 0214                          l1130 0204  
                        l1036 02A2                          l1044 02B2                          l1060 0283  
                        l1052 027B                          l1108 021B                          l1132 0208  
                        l1124 01F2                          l1116 01ED                          l1300 007D  
                        l1038 02A3                          l1046 02B7                          l1062 0284  
                        l1054 027C                          l1070 0256                          l1126 01F9  
                        l1118 01F1                          l1310 0091                          l1302 007F  
                        l1056 027D                          l1048 0273                          l1072 025D  
                        l1064 0253                          l1080 0231                          l1128 0200  
                        l1320 00A9                          l1312 0096                          l1304 0082  
                        l1058 0282                          l1074 0264                          l1090 023D  
                        l1082 0235                          l1330 00C5                          l1322 00AD  
                        l1314 009C                          l1306 0086                          l1076 0268  
                        l1092 0244                          l1332 00CC                          l1340 00EF  
                        l1324 00B5                          l1316 00A2                          l1308 008D  
                        l1078 026C                          l1094 0248                          l1350 010E  
                        l1342 00F6                          l1334 00D2                          l1326 00BB  
                        l1318 00A8                          l1280 01D6                          l1096 024C  
                        l1088 0236                          l1352 0117                          l1360 0135  
                        l1344 00F8                          l1336 00DC                          l1328 00BF  
                        l1098 020F                          l1370 0163                          l1362 0143  
                        l1354 0120                          l1346 0104                          l1338 00E2  
                        l1290 006C                          l1284 01D8                          l1276 01B4  
                        l1380 0174                          l1364 0152                          l1372 0166  
                        l1356 012C                          l1348 0107                          l1292 0076  
                        l1286 01EB                          l1278 01B7                          l1390 0190  
                        l1382 017C                          l1374 0168                          l1366 0159  
                        l1358 0130                          l1294 0079                          l1392 0199  
                        l1384 0182                          l1368 015B                          l1376 016C  
                        l1296 007A                          l1394 019D                          l1386 0186  
                        l1378 0170                          l1298 007B                          l1388 0189  
                        l1396 01A2                          i1l89 0047                          _main 006C  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                 main@rxdData 0064                          btemp 007E                          start 0049  
                       ??_ISR 0070                 ?_EUSART_Write 0070                         ?_main 0070  
                       _EEADR 0191                         _RCREG 0199                         u35_20 0021  
                       u35_21 0020                         u35_25 001D                         u36_20 002F  
                       u36_21 002E                         u36_25 002B                         u37_20 003C  
                       u37_21 003B                         u37_25 0038                         _TXREG 019A  
                _outputStatus 0030                         _index 0069               __end_of_read_id 02B1  
                       status 0003                         wtemp0 007E              ?_compareIdToRecd 0072  
             __initialization 004B                  __end_of_main 01B3                ??_EUSART_Write 0072  
                      ??_main 005E                 main@count_460 0065                        _EEDATA 0193  
                      _EECON2 0196                        i1l1150 000E                        i1l1160 003F  
                      i1l1152 0013                        i1l1162 0043                        i1l1154 0021  
                      i1l1164 0045                        i1l1156 002F                        i1l1148 0006  
                      i1l1158 003C                        _SPBRGH 019C                        _SPBRGL 019B  
                      _add_id 0273                        _idChar 00C0                     ??_read_id 0074  
     __end_of__initialization 0068  compareIdToRecd@compareLength 0073                __pcstackCOMMON 0070  
                __pidataBANK1 028A             compareIdToRecd@id 0075                    __pbssBANK0 0020  
                  __pbssBANK1 00A0          __end_of_EUSART_Write 02BB                    __pnvCOMMON 0078  
                  __pmaintext 006C                       ?_add_id 0072                    __pintentry 0004  
                     _CPSCON0 001E                       _CPSCON1 001F                main@length_459 0062  
           read_id@start_addr 0072                       __ptext1 01ED                       __ptext2 020F  
                     __ptext3 0231                       __ptext4 0253                       __ptext5 02A7  
                     __ptext6 01B3                       __ptext7 0273                       __ptext8 02B1  
                     __ptext9 029B                       _read_id 02A7                       _rxdChar 0048  
                     clrloop0 02C2          end_of_initialization 0068                       init_ram 02BB  
                     initloop 02BC                    _set_index0 0253                    _set_index1 0231  
                  _set_index2 020F                    _set_index3 01ED                     _RCSTAbits 019D  
                   _PORTBbits 000D                     _TRISAbits 008C                     _TRISBbits 008D  
                  _start_addr 0078                     _TXSTAbits 019E                    main@length 0060  
              __end_of_add_id 028A                   _BAUDCONbits 019F                  _EUSART_Write 02B1  
          compareIdToRecd@rxd 0072           start_initialization 004B                   __end_of_ISR 0049  
               ??_EUSART_Init 0072                 add_id@rxdData 0074                   ?_set_index0 0070  
                 ?_set_index1 0070                   ?_set_index2 0070                   ?_set_index3 0070  
                    ??_add_id 0075                   __pdataBANK1 00D0             ??_compareIdToRecd 0058  
                 __pbssCOMMON 007A                     ___latbits 0002                 __pcstackBANK0 0058  
            compareIdToRecd@i 0076           __end_of_EUSART_Init 02A7                     __pnvBANK0 0069  
            add_id@start_addr 0072                      ?_read_id 0072                      _LATAbits 010C  
                   clear_ram0 02C1                      _PIE1bits 0091                      _PIR1bits 0011  
            EUSART_Write@data 0072              set_index0@id_set 0075              set_index1@id_set 0075  
            set_index2@id_set 0075              set_index3@id_set 0075                     main@count 0067  
                 _EUSART_Init 029B                    _EECON1bits 0195                    _ANSELBbits 018D  
                    _readData 0034                  ??_set_index0 0074                  ??_set_index1 0074  
                ??_set_index2 0074                  ??_set_index3 0074               _compareIdToRecd 01B3  
                    int$flags 007E                    _INTCONbits 000B            __end_of_set_index0 0273  
          __end_of_set_index1 0253            __end_of_set_index2 0231            __end_of_set_index3 020F  
                    intlevel1 0000       __end_of_compareIdToRecd 01ED  
