

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 29 20:01:25 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1847
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 07/09/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F1847 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0095                     	;# 
    94     0096                     	;# 
    95     0097                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009A                     	;# 
    99     009B                     	;# 
   100     009B                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     0111                     	;# 
   107     0112                     	;# 
   108     0113                     	;# 
   109     0114                     	;# 
   110     0115                     	;# 
   111     0116                     	;# 
   112     0117                     	;# 
   113     0118                     	;# 
   114     0119                     	;# 
   115     011A                     	;# 
   116     011B                     	;# 
   117     011D                     	;# 
   118     011E                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0191                     	;# 
   122     0191                     	;# 
   123     0192                     	;# 
   124     0193                     	;# 
   125     0193                     	;# 
   126     0193                     	;# 
   127     0194                     	;# 
   128     0195                     	;# 
   129     0196                     	;# 
   130     0199                     	;# 
   131     019A                     	;# 
   132     019B                     	;# 
   133     019B                     	;# 
   134     019B                     	;# 
   135     019B                     	;# 
   136     019C                     	;# 
   137     019C                     	;# 
   138     019D                     	;# 
   139     019E                     	;# 
   140     019F                     	;# 
   141     020C                     	;# 
   142     020D                     	;# 
   143     0211                     	;# 
   144     0211                     	;# 
   145     0212                     	;# 
   146     0212                     	;# 
   147     0213                     	;# 
   148     0213                     	;# 
   149     0214                     	;# 
   150     0214                     	;# 
   151     0215                     	;# 
   152     0215                     	;# 
   153     0215                     	;# 
   154     0216                     	;# 
   155     0216                     	;# 
   156     0217                     	;# 
   157     0217                     	;# 
   158     0219                     	;# 
   159     021A                     	;# 
   160     021B                     	;# 
   161     021C                     	;# 
   162     021D                     	;# 
   163     021E                     	;# 
   164     021F                     	;# 
   165     0291                     	;# 
   166     0291                     	;# 
   167     0292                     	;# 
   168     0293                     	;# 
   169     0294                     	;# 
   170     0295                     	;# 
   171     0295                     	;# 
   172     0296                     	;# 
   173     0298                     	;# 
   174     0298                     	;# 
   175     0299                     	;# 
   176     029A                     	;# 
   177     029B                     	;# 
   178     029C                     	;# 
   179     029C                     	;# 
   180     029D                     	;# 
   181     029E                     	;# 
   182     029E                     	;# 
   183     0311                     	;# 
   184     0311                     	;# 
   185     0312                     	;# 
   186     0313                     	;# 
   187     0318                     	;# 
   188     0318                     	;# 
   189     0319                     	;# 
   190     031A                     	;# 
   191     0394                     	;# 
   192     0395                     	;# 
   193     0396                     	;# 
   194     039A                     	;# 
   195     039C                     	;# 
   196     039D                     	;# 
   197     039E                     	;# 
   198     039F                     	;# 
   199     0415                     	;# 
   200     0416                     	;# 
   201     0417                     	;# 
   202     041C                     	;# 
   203     041D                     	;# 
   204     041E                     	;# 
   205     0FE4                     	;# 
   206     0FE5                     	;# 
   207     0FE6                     	;# 
   208     0FE7                     	;# 
   209     0FE8                     	;# 
   210     0FE9                     	;# 
   211     0FEA                     	;# 
   212     0FEB                     	;# 
   213     0FED                     	;# 
   214     0FEE                     	;# 
   215     0FEF                     	;# 
   216     0000                     	;# 
   217     0001                     	;# 
   218     0002                     	;# 
   219     0003                     	;# 
   220     0004                     	;# 
   221     0005                     	;# 
   222     0006                     	;# 
   223     0007                     	;# 
   224     0008                     	;# 
   225     0009                     	;# 
   226     000A                     	;# 
   227     000B                     	;# 
   228     000C                     	;# 
   229     000D                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001E                     	;# 
   244     001F                     	;# 
   245     008C                     	;# 
   246     008D                     	;# 
   247     0091                     	;# 
   248     0092                     	;# 
   249     0093                     	;# 
   250     0094                     	;# 
   251     0095                     	;# 
   252     0096                     	;# 
   253     0097                     	;# 
   254     0098                     	;# 
   255     0099                     	;# 
   256     009A                     	;# 
   257     009B                     	;# 
   258     009B                     	;# 
   259     009C                     	;# 
   260     009D                     	;# 
   261     009E                     	;# 
   262     010C                     	;# 
   263     010D                     	;# 
   264     0111                     	;# 
   265     0112                     	;# 
   266     0113                     	;# 
   267     0114                     	;# 
   268     0115                     	;# 
   269     0116                     	;# 
   270     0117                     	;# 
   271     0118                     	;# 
   272     0119                     	;# 
   273     011A                     	;# 
   274     011B                     	;# 
   275     011D                     	;# 
   276     011E                     	;# 
   277     018C                     	;# 
   278     018D                     	;# 
   279     0191                     	;# 
   280     0191                     	;# 
   281     0192                     	;# 
   282     0193                     	;# 
   283     0193                     	;# 
   284     0193                     	;# 
   285     0194                     	;# 
   286     0195                     	;# 
   287     0196                     	;# 
   288     0199                     	;# 
   289     019A                     	;# 
   290     019B                     	;# 
   291     019B                     	;# 
   292     019B                     	;# 
   293     019B                     	;# 
   294     019C                     	;# 
   295     019C                     	;# 
   296     019D                     	;# 
   297     019E                     	;# 
   298     019F                     	;# 
   299     020C                     	;# 
   300     020D                     	;# 
   301     0211                     	;# 
   302     0211                     	;# 
   303     0212                     	;# 
   304     0212                     	;# 
   305     0213                     	;# 
   306     0213                     	;# 
   307     0214                     	;# 
   308     0214                     	;# 
   309     0215                     	;# 
   310     0215                     	;# 
   311     0215                     	;# 
   312     0216                     	;# 
   313     0216                     	;# 
   314     0217                     	;# 
   315     0217                     	;# 
   316     0219                     	;# 
   317     021A                     	;# 
   318     021B                     	;# 
   319     021C                     	;# 
   320     021D                     	;# 
   321     021E                     	;# 
   322     021F                     	;# 
   323     0291                     	;# 
   324     0291                     	;# 
   325     0292                     	;# 
   326     0293                     	;# 
   327     0294                     	;# 
   328     0295                     	;# 
   329     0295                     	;# 
   330     0296                     	;# 
   331     0298                     	;# 
   332     0298                     	;# 
   333     0299                     	;# 
   334     029A                     	;# 
   335     029B                     	;# 
   336     029C                     	;# 
   337     029C                     	;# 
   338     029D                     	;# 
   339     029E                     	;# 
   340     029E                     	;# 
   341     0311                     	;# 
   342     0311                     	;# 
   343     0312                     	;# 
   344     0313                     	;# 
   345     0318                     	;# 
   346     0318                     	;# 
   347     0319                     	;# 
   348     031A                     	;# 
   349     0394                     	;# 
   350     0395                     	;# 
   351     0396                     	;# 
   352     039A                     	;# 
   353     039C                     	;# 
   354     039D                     	;# 
   355     039E                     	;# 
   356     039F                     	;# 
   357     0415                     	;# 
   358     0416                     	;# 
   359     0417                     	;# 
   360     041C                     	;# 
   361     041D                     	;# 
   362     041E                     	;# 
   363     0FE4                     	;# 
   364     0FE5                     	;# 
   365     0FE6                     	;# 
   366     0FE7                     	;# 
   367     0FE8                     	;# 
   368     0FE9                     	;# 
   369     0FEA                     	;# 
   370     0FEB                     	;# 
   371     0FED                     	;# 
   372     0FEE                     	;# 
   373     0FEF                     	;# 
   374                           
   375                           	psect	idataBANK1
   376     0176                     __pidataBANK1:
   377                           
   378                           ;initializer for _exp
   379     0176  344C               	retlw	76
   380     0177  3461               	retlw	97
   381     0178  346E               	retlw	110
   382     0179  3465               	retlw	101
   383     017A  344C               	retlw	76
   384     017B  3469               	retlw	105
   385     017C  3467               	retlw	103
   386     017D  3468               	retlw	104
   387     017E  3474               	retlw	116
   388     017F  3473               	retlw	115
   389     0180  3430               	retlw	48
   390     0181  3431               	retlw	49
   391     0182  340A               	retlw	10
   392     0183  340D               	retlw	13
   393     0184  3420               	retlw	32
   394     0185  3420               	retlw	32
   395     0186  3400               	retlw	0
   396     000D                     _PORTBbits	set	13
   397     001F                     _CPSCON1	set	31
   398     001E                     _CPSCON0	set	30
   399     000B                     _INTCONbits	set	11
   400     0011                     _PIR1bits	set	17
   401     0091                     _PIE1bits	set	145
   402     008D                     _TRISBbits	set	141
   403     008C                     _TRISAbits	set	140
   404     010C                     _LATAbits	set	268
   405     0191                     _EEADR	set	401
   406     018D                     _ANSELBbits	set	397
   407     0196                     _EECON2	set	406
   408     0195                     _EECON1bits	set	405
   409     0193                     _EEDATA	set	403
   410     0199                     _RCREG	set	409
   411     019A                     _TXREG	set	410
   412     019D                     _RCSTAbits	set	413
   413     019F                     _BAUDCONbits	set	415
   414     019E                     _TXSTAbits	set	414
   415     019B                     _SPBRGL	set	411
   416     019C                     _SPBRGH	set	412
   417                           
   418                           	psect	cinit
   419     0047                     start_initialization:	
   420                           ; #config settings
   421                           
   422     0047                     __initialization:
   423                           
   424                           ; Initialize objects allocated to BANK1
   425     0047  3076               	movlw	low __pidataBANK1
   426     0048  0084               	movwf	4
   427     0049  3081               	movlw	(high __pidataBANK1)| (0+128)
   428     004A  0085               	movwf	5
   429     004B  30C0               	movlw	low __pdataBANK1
   430     004C  0086               	movwf	6
   431     004D  3000               	movlw	high __pdataBANK1
   432     004E  0087               	movwf	7
   433     004F  3011               	movlw	17
   434     0050  3181  21A7  3180   	fcall	init_ram
   435                           
   436                           ; Clear objects allocated to COMMON
   437     0053  01F7               	clrf	__pbssCOMMON& (0+127)
   438     0054  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   439     0055  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   440     0056  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   441     0057  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   442                           
   443                           ; Clear objects allocated to BANK0
   444     0058  3020               	movlw	low __pbssBANK0
   445     0059  0084               	movwf	4
   446     005A  3000               	movlw	high __pbssBANK0
   447     005B  0085               	movwf	5
   448     005C  3040               	movlw	64
   449     005D  3181  21AD  3180   	fcall	clear_ram0
   450                           
   451                           ; Clear objects allocated to BANK1
   452     0060  30A0               	movlw	low __pbssBANK1
   453     0061  0084               	movwf	4
   454     0062  3000               	movlw	high __pbssBANK1
   455     0063  0085               	movwf	5
   456     0064  3020               	movlw	32
   457     0065  3181  21AD  3180   	fcall	clear_ram0
   458     0068                     end_of_initialization:	
   459                           ;End of C runtime variable initialization code
   460                           
   461     0068                     __end_of__initialization:
   462     0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   463     0069  0020               	movlb	0
   464     006A  3180  286C         	ljmp	_main	;jump to C main() function
   465                           
   466                           	psect	bssCOMMON
   467     0077                     __pbssCOMMON:
   468     0077                     _loc:
   469     0077                     	ds	2
   470     0079                     _num:
   471     0079                     	ds	2
   472     007B                     _val:
   473     007B                     	ds	1
   474                           
   475                           	psect	bssBANK0
   476     0020                     __pbssBANK0:
   477     0020                     _id2:
   478     0020                     	ds	16
   479     0030                     _id1:
   480     0030                     	ds	16
   481     0040                     _outputStatus:
   482     0040                     	ds	2
   483     0042                     _start_addr:
   484     0042                     	ds	2
   485     0044                     _readData:
   486     0044                     	ds	2
   487     0046                     _rxdData:
   488     0046                     	ds	1
   489     0047                     _rxdChar:
   490     0047                     	ds	25
   491                           
   492                           	psect	bssBANK1
   493     00A0                     __pbssBANK1:
   494     00A0                     _id4:
   495     00A0                     	ds	16
   496     00B0                     _id3:
   497     00B0                     	ds	16
   498                           
   499                           	psect	dataBANK1
   500     00C0                     __pdataBANK1:
   501     00C0                     _exp:
   502     00C0                     	ds	17
   503                           
   504                           	psect	inittext
   505     01A7                     init_ram:
   506     01A7  00FE               	movwf	btemp
   507     01A8                     initloop:
   508     01A8  0012               	moviw fsr0++
   509     01A9  001E               	movwi fsr1++
   510     01AA  0BFE               	decfsz	btemp,f
   511     01AB  29A8               	goto	initloop
   512     01AC  3400               	retlw	0
   513                           
   514                           	psect	clrtext
   515     01AD                     clear_ram0:	
   516                           ;	Called with FSR0 containing the base address, and
   517                           ;	WREG with the size to clear
   518                           
   519     01AD  0064               	clrwdt	;clear the watchdog before getting into this loop
   520     01AE                     clrloop0:
   521     01AE  0180               	clrf	0	;clear RAM location pointed to by FSR
   522     01AF  3101               	addfsr 0,1
   523     01B0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   524     01B1  29AE               	goto	clrloop0	;have we reached the end yet?
   525     01B2  3400               	retlw	0	;all done for this memory range, return
   526                           
   527                           	psect	cstackCOMMON
   528     0070                     __pcstackCOMMON:
   529     0070                     ?_EUSART_Init:
   530     0070                     ?_EUSART_Write:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ??_ISR:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_ISR:	
   540                           ; 1 bytes @ 0x0
   541                           
   542                           
   543                           ; 2 bytes @ 0x0
   544     0070                     	ds	2
   545     0072                     ??_EUSART_Init:
   546     0072                     ??_EUSART_Write:	
   547                           ; 1 bytes @ 0x2
   548                           
   549     0072                     ?_strlen:	
   550                           ; 1 bytes @ 0x2
   551                           
   552     0072                     ?_add_id:	
   553                           ; 2 bytes @ 0x2
   554                           
   555     0072                     ?_read_id:	
   556                           ; 2 bytes @ 0x2
   557                           
   558     0072                     EUSART_Write@data:	
   559                           ; 2 bytes @ 0x2
   560                           
   561     0072                     add_id@start_addr:	
   562                           ; 1 bytes @ 0x2
   563                           
   564     0072                     read_id@start_addr:	
   565                           ; 2 bytes @ 0x2
   566                           
   567                           
   568                           ; 2 bytes @ 0x2
   569     0072                     	ds	2
   570     0074                     ??_strlen:
   571     0074                     ??_read_id:	
   572                           ; 1 bytes @ 0x4
   573                           
   574     0074                     add_id@rxdData:	
   575                           ; 1 bytes @ 0x4
   576                           
   577                           
   578                           ; 1 bytes @ 0x4
   579     0074                     	ds	1
   580     0075                     ??_add_id:
   581     0075                     strlen@a:	
   582                           ; 1 bytes @ 0x5
   583                           
   584                           
   585                           ; 1 bytes @ 0x5
   586     0075                     	ds	1
   587     0076                     strlen@s:
   588                           
   589                           ; 1 bytes @ 0x6
   590     0076                     	ds	1
   591                           
   592                           	psect	cstackBANK0
   593     0060                     __pcstackBANK0:
   594     0060                     ??_main:
   595                           
   596                           ; 1 bytes @ 0x0
   597     0060                     	ds	2
   598     0062                     main@length_445:
   599                           
   600                           ; 2 bytes @ 0x2
   601     0062                     	ds	2
   602     0064                     main@length:
   603                           
   604                           ; 1 bytes @ 0x4
   605     0064                     	ds	1
   606     0065                     main@count:
   607                           
   608                           ; 2 bytes @ 0x5
   609     0065                     	ds	2
   610     0067                     main@count_446:
   611                           
   612                           ; 2 bytes @ 0x7
   613     0067                     	ds	2
   614     0069                     main@id_set:
   615                           
   616                           ; 1 bytes @ 0x9
   617     0069                     	ds	1
   618                           
   619                           	psect	maintext
   620     006C                     __pmaintext:	
   621 ;;
   622 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   623 ;;
   624 ;; *************** function _main *****************
   625 ;; Defined at:
   626 ;;		line 117 in file "main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  count           2    7[BANK0 ] int 
   631 ;;  count           2    5[BANK0 ] int 
   632 ;;  length          2    2[BANK0 ] int 
   633 ;;  length          1    4[BANK0 ] unsigned char 
   634 ;;  id_set          1    9[BANK0 ] unsigned char 
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : B1F/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   645 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
   646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   647 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   648 ;;Total ram usage:       10 bytes
   649 ;; Hardware stack levels required when called: 2
   650 ;; This function calls:
   651 ;;		_EUSART_Init
   652 ;;		_EUSART_Write
   653 ;;		_add_id
   654 ;;		_read_id
   655 ;;		_strlen
   656 ;; This function is called by:
   657 ;;		Startup code after reset
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661     006C                     _main:	
   662                           ;psect for function _main
   663                           
   664     006C                     l1049:	
   665                           ;incstack = 0
   666                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   667                           
   668                           
   669                           ;main.c: 118:     TRISAbits.TRISA1 = 0;
   670     006C  0021               	movlb	1	; select bank1
   671     006D  108C               	bcf	12,1	;volatile
   672                           
   673                           ;main.c: 119:     TRISBbits.TRISB1 = 1;
   674     006E  148D               	bsf	13,1	;volatile
   675                           
   676                           ;main.c: 120:     TRISBbits.TRISB2 = 0;
   677     006F  110D               	bcf	13,2	;volatile
   678                           
   679                           ;main.c: 121:     TRISBbits.TRISB0 = 1;
   680     0070  140D               	bsf	13,0	;volatile
   681                           
   682                           ;main.c: 122:     LATAbits.LATA1 = 0;
   683     0071  0022               	movlb	2	; select bank2
   684     0072  108C               	bcf	12,1	;volatile
   685                           
   686                           ;main.c: 123:     ANSELBbits.ANSB2 = 0;
   687     0073  0023               	movlb	3	; select bank3
   688     0074  110D               	bcf	13,2	;volatile
   689                           
   690                           ;main.c: 124:     ANSELBbits.ANSB1 = 0;
   691     0075  108D               	bcf	13,1	;volatile
   692     0076                     l1051:
   693                           
   694                           ;main.c: 125:     CPSCON0 = 0x00;
   695     0076  0020               	movlb	0	; select bank0
   696     0077  019E               	clrf	30	;volatile
   697                           
   698                           ;main.c: 126:     CPSCON1 = 0x00;
   699     0078  019F               	clrf	31	;volatile
   700     0079                     l1053:
   701                           
   702                           ;main.c: 128:     INTCONbits.GIE = 1;
   703     0079  178B               	bsf	11,7	;volatile
   704     007A                     l1055:
   705                           
   706                           ;main.c: 129:     INTCONbits.PEIE = 1;
   707     007A  170B               	bsf	11,6	;volatile
   708     007B                     l1057:
   709                           
   710                           ;main.c: 130:     PIE1bits.RCIE = 1;
   711     007B  0021               	movlb	1	; select bank1
   712     007C  1691               	bsf	17,5	;volatile
   713     007D                     l1059:
   714                           
   715                           ;main.c: 131:     RCSTAbits.CREN = 1;
   716     007D  0023               	movlb	3	; select bank3
   717     007E  161D               	bsf	29,4	;volatile
   718     007F                     l1061:
   719                           
   720                           ;main.c: 134:     EUSART_Init();
   721     007F  3181  2187  3180   	fcall	_EUSART_Init
   722     0082                     l1063:
   723                           
   724                           ;main.c: 136:     start_addr = 0x00;
   725     0082  0020               	movlb	0	; select bank0
   726     0083  01C2               	clrf	_start_addr
   727     0084  01C3               	clrf	_start_addr+1
   728     0085                     l1065:
   729                           
   730                           ;main.c: 137:     for (uint8_t id_set=0; id_set<=16; id_set++){
   731     0085  01E9               	clrf	main@id_set
   732     0086                     l1071:
   733                           
   734                           ;main.c: 138:     read_id(start_addr);
   735     0086  0843               	movf	_start_addr+1,w
   736     0087  00F3               	movwf	read_id@start_addr+1
   737     0088  0842               	movf	_start_addr,w
   738     0089  00F2               	movwf	read_id@start_addr
   739     008A  3181  2193  3180   	fcall	_read_id
   740     008D                     l1073:
   741                           
   742                           ;main.c: 139:     id1[id_set]=EEDATA;
   743     008D  0020               	movlb	0	; select bank0
   744     008E  0869               	movf	main@id_set,w
   745     008F  3E30               	addlw	(low (_id1| 0))& (0+255)
   746     0090  0086               	movwf	6
   747     0091  0187               	clrf	7
   748     0092  0023               	movlb	3	; select bank3
   749     0093  0813               	movf	19,w	;volatile
   750     0094  0081               	movwf	1
   751     0095                     l1075:
   752                           
   753                           ;main.c: 141:     start_addr++;
   754     0095  3001               	movlw	1
   755     0096  0020               	movlb	0	; select bank0
   756     0097  07C2               	addwf	_start_addr,f
   757     0098  3000               	movlw	0
   758     0099  3DC3               	addwfc	_start_addr+1,f
   759     009A                     l1077:
   760                           
   761                           ;main.c: 142:     }
   762     009A  3001               	movlw	1
   763     009B  00E0               	movwf	??_main
   764     009C  0860               	movf	??_main,w
   765     009D  07E9               	addwf	main@id_set,f
   766     009E                     l1079:
   767     009E  3011               	movlw	17
   768     009F  0269               	subwf	main@id_set,w
   769     00A0  1C03               	skipc
   770     00A1  28A3               	goto	u271
   771     00A2  28A4               	goto	u270
   772     00A3                     u271:
   773     00A3  2886               	goto	l1071
   774     00A4                     u270:
   775     00A4                     l1081:
   776                           
   777                           ;main.c: 147:         if (readData == 1) {
   778     00A4  0344               	decf	_readData,w
   779     00A5  0445               	iorwf	_readData+1,w
   780     00A6  1D03               	btfss	3,2
   781     00A7  28A9               	goto	u281
   782     00A8  28AA               	goto	u280
   783     00A9                     u281:
   784     00A9  2905               	goto	l1115
   785     00AA                     u280:
   786     00AA                     l1083:
   787                           
   788                           ;main.c: 148:         TXSTAbits.TXEN = 1;
   789     00AA  0023               	movlb	3	; select bank3
   790     00AB  169E               	bsf	30,5	;volatile
   791     00AC                     l1085:
   792                           
   793                           ;main.c: 149:         uint8_t length = strlen(rxdChar);
   794     00AC  3047               	movlw	(low (_rxdChar| 0))& (0+255)
   795     00AD  3181  2148  3180   	fcall	_strlen
   796     00B0  0872               	movf	?_strlen,w
   797     00B1  0020               	movlb	0	; select bank0
   798     00B2  00E4               	movwf	main@length
   799     00B3                     l1087:
   800                           
   801                           ;main.c: 150:         start_addr=0x00;
   802     00B3  01C2               	clrf	_start_addr
   803     00B4  01C3               	clrf	_start_addr+1
   804     00B5                     l1089:
   805                           
   806                           ;main.c: 151:         for (int count=0; count<=length; count++){
   807     00B5  01E5               	clrf	main@count
   808     00B6  01E6               	clrf	main@count+1
   809     00B7  28DA               	goto	l1099
   810     00B8                     l1091:
   811                           
   812                           ;main.c: 152:             read_id(start_addr);
   813     00B8  0020               	movlb	0	; select bank0
   814     00B9  0843               	movf	_start_addr+1,w
   815     00BA  00F3               	movwf	read_id@start_addr+1
   816     00BB  0842               	movf	_start_addr,w
   817     00BC  00F2               	movwf	read_id@start_addr
   818     00BD  3181  2193  3180   	fcall	_read_id
   819                           
   820                           ;main.c: 153:             EUSART_Write(EEDATA);
   821     00C0  0023               	movlb	3	; select bank3
   822     00C1  0813               	movf	19,w	;volatile
   823     00C2  3181  219D  3180   	fcall	_EUSART_Write
   824     00C5                     l1093:
   825                           
   826                           ;main.c: 155:             _delay((unsigned long)((200)*(16000000/4000.0)));
   827     00C5  3005               	movlw	5
   828     00C6  0020               	movlb	0	; select bank0
   829     00C7  00E1               	movwf	??_main+1
   830     00C8  300F               	movlw	15
   831     00C9  00E0               	movwf	??_main
   832     00CA  30F1               	movlw	241
   833     00CB                     u347:
   834     00CB  0B89               	decfsz	9,f
   835     00CC  28CB               	goto	u347
   836     00CD  0BE0               	decfsz	??_main,f
   837     00CE  28CB               	goto	u347
   838     00CF  0BE1               	decfsz	??_main+1,f
   839     00D0  28CB               	goto	u347
   840     00D1                     l1095:
   841                           
   842                           ;main.c: 156:                 start_addr++;
   843     00D1  3001               	movlw	1
   844     00D2  0020               	movlb	0	; select bank0
   845     00D3  07C2               	addwf	_start_addr,f
   846     00D4  3000               	movlw	0
   847     00D5  3DC3               	addwfc	_start_addr+1,f
   848     00D6                     l1097:
   849                           
   850                           ;main.c: 157:         }
   851     00D6  3001               	movlw	1
   852     00D7  07E5               	addwf	main@count,f
   853     00D8  3000               	movlw	0
   854     00D9  3DE6               	addwfc	main@count+1,f
   855     00DA                     l1099:
   856     00DA  0866               	movf	main@count+1,w
   857     00DB  3A80               	xorlw	128
   858     00DC  3C80               	sublw	128
   859     00DD  1D03               	skipz
   860     00DE  28E1               	goto	u295
   861     00DF  0865               	movf	main@count,w
   862     00E0  0264               	subwf	main@length,w
   863     00E1                     u295:
   864     00E1  1803               	skipnc
   865     00E2  28E4               	goto	u291
   866     00E3  28E5               	goto	u290
   867     00E4                     u291:
   868     00E4  28B8               	goto	l1091
   869     00E5                     u290:
   870     00E5                     l1101:
   871                           
   872                           ;main.c: 158:         if (rxdChar[0,1,2,3,4,5,6,7,8,9,10,11,12] == id1[0,1,2,3,4,5,6,7,8
      +                          ,9,10,11,12]){
   873     00E5  0020               	movlb	0	; select bank0
   874     00E6  0853               	movf	_rxdChar+12,w
   875     00E7  063C               	xorwf	_id1+12,w
   876     00E8  1D03               	skipz
   877     00E9  28EB               	goto	u301
   878     00EA  28EC               	goto	u300
   879     00EB                     u301:
   880     00EB  28FF               	goto	l1111
   881     00EC                     u300:
   882     00EC                     l1103:
   883                           
   884                           ;main.c: 159:             if (outputStatus == 0){
   885     00EC  0840               	movf	_outputStatus,w
   886     00ED  0441               	iorwf	_outputStatus+1,w
   887     00EE  1D03               	btfss	3,2
   888     00EF  28F1               	goto	u311
   889     00F0  28F2               	goto	u310
   890     00F1                     u311:
   891     00F1  28FA               	goto	l111
   892     00F2                     u310:
   893     00F2                     l1105:
   894                           
   895                           ;main.c: 160:             LATAbits.LATA1 = 1;
   896     00F2  0022               	movlb	2	; select bank2
   897     00F3  148C               	bsf	12,1	;volatile
   898     00F4                     l1107:
   899                           
   900                           ;main.c: 161:             outputStatus = 1;
   901     00F4  3001               	movlw	1
   902     00F5  0020               	movlb	0	; select bank0
   903     00F6  00C0               	movwf	_outputStatus
   904     00F7  3000               	movlw	0
   905     00F8  00C1               	movwf	_outputStatus+1
   906                           
   907                           ;main.c: 162:         }
   908     00F9  28FF               	goto	l1111
   909     00FA                     l111:	
   910                           ;main.c: 163:             else {
   911                           
   912                           
   913                           ;main.c: 164:                 LATAbits.LATA1 = 0;
   914     00FA  0022               	movlb	2	; select bank2
   915     00FB  108C               	bcf	12,1	;volatile
   916     00FC                     l1109:
   917                           
   918                           ;main.c: 165:                 outputStatus = 0;
   919     00FC  0020               	movlb	0	; select bank0
   920     00FD  01C0               	clrf	_outputStatus
   921     00FE  01C1               	clrf	_outputStatus+1
   922     00FF                     l1111:
   923                           
   924                           ;main.c: 168:         TXSTAbits.TXEN = 0;
   925     00FF  0023               	movlb	3	; select bank3
   926     0100  129E               	bcf	30,5	;volatile
   927     0101                     l1113:
   928                           
   929                           ;main.c: 169:         RCSTAbits.CREN = 1;
   930     0101  161D               	bsf	29,4	;volatile
   931                           
   932                           ;main.c: 170:         readData = 0;
   933     0102  0020               	movlb	0	; select bank0
   934     0103  01C4               	clrf	_readData
   935     0104  01C5               	clrf	_readData+1
   936     0105                     l1115:
   937                           
   938                           ;main.c: 174:         if (PORTBbits.RB0 == 1){
   939     0105  1C0D               	btfss	13,0	;volatile
   940     0106  2908               	goto	u321
   941     0107  2909               	goto	u320
   942     0108                     u321:
   943     0108  28A4               	goto	l1081
   944     0109                     u320:
   945     0109                     l1117:
   946                           
   947                           ;main.c: 175:             LATAbits.LATA1 = 1;
   948     0109  0022               	movlb	2	; select bank2
   949     010A  148C               	bsf	12,1	;volatile
   950     010B                     l1119:
   951                           
   952                           ;main.c: 177:                 int length = strlen(rxdChar);
   953     010B  3047               	movlw	(low (_rxdChar| 0))& (0+255)
   954     010C  3181  2148  3180   	fcall	_strlen
   955     010F  0873               	movf	?_strlen+1,w
   956     0110  0020               	movlb	0	; select bank0
   957     0111  00E3               	movwf	main@length_445+1
   958     0112  0872               	movf	?_strlen,w
   959     0113  00E2               	movwf	main@length_445
   960     0114                     l1121:
   961                           
   962                           ;main.c: 178:                 start_addr=0x00;
   963     0114  01C2               	clrf	_start_addr
   964     0115  01C3               	clrf	_start_addr+1
   965     0116                     l1123:
   966                           
   967                           ;main.c: 179:                 for (int count=0; count<=length; count++){
   968     0116  01E7               	clrf	main@count_446
   969     0117  01E8               	clrf	main@count_446+1
   970     0118  2932               	goto	l1133
   971     0119                     l1125:
   972                           
   973                           ;main.c: 180:                     rxdData = rxdChar[count];
   974     0119  0020               	movlb	0	; select bank0
   975     011A  0867               	movf	main@count_446,w
   976     011B  3E47               	addlw	(low (_rxdChar| 0))& (0+255)
   977     011C  0086               	movwf	6
   978     011D  0187               	clrf	7
   979     011E  0801               	movf	1,w
   980     011F  00C6               	movwf	_rxdData
   981     0120                     l1127:
   982                           
   983                           ;main.c: 181:                     add_id(start_addr, rxdData);
   984     0120  0843               	movf	_start_addr+1,w
   985     0121  00F3               	movwf	add_id@start_addr+1
   986     0122  0842               	movf	_start_addr,w
   987     0123  00F2               	movwf	add_id@start_addr
   988     0124  0846               	movf	_rxdData,w
   989     0125  00F4               	movwf	add_id@rxdData
   990     0126  3181  215F  3180   	fcall	_add_id
   991     0129                     l1129:
   992                           
   993                           ;main.c: 182:                     start_addr++;
   994     0129  3001               	movlw	1
   995     012A  0020               	movlb	0	; select bank0
   996     012B  07C2               	addwf	_start_addr,f
   997     012C  3000               	movlw	0
   998     012D  3DC3               	addwfc	_start_addr+1,f
   999     012E                     l1131:
  1000                           
  1001                           ;main.c: 183:                 }
  1002     012E  3001               	movlw	1
  1003     012F  07E7               	addwf	main@count_446,f
  1004     0130  3000               	movlw	0
  1005     0131  3DE8               	addwfc	main@count_446+1,f
  1006     0132                     l1133:
  1007     0132  0863               	movf	main@length_445+1,w
  1008     0133  3A80               	xorlw	128
  1009     0134  00E0               	movwf	??_main
  1010     0135  0868               	movf	main@count_446+1,w
  1011     0136  3A80               	xorlw	128
  1012     0137  0260               	subwf	??_main,w
  1013     0138  1D03               	skipz
  1014     0139  293C               	goto	u335
  1015     013A  0867               	movf	main@count_446,w
  1016     013B  0262               	subwf	main@length_445,w
  1017     013C                     u335:
  1018     013C  1803               	skipnc
  1019     013D  293F               	goto	u331
  1020     013E  2940               	goto	u330
  1021     013F                     u331:
  1022     013F  2919               	goto	l1125
  1023     0140                     u330:
  1024     0140                     l116:
  1025                           
  1026                           ;main.c: 184:                 LATAbits.LATA1 = 0;
  1027     0140  0022               	movlb	2	; select bank2
  1028     0141  108C               	bcf	12,1	;volatile
  1029     0142                     l1135:
  1030                           
  1031                           ;main.c: 185:                 readData = 0;
  1032     0142  0020               	movlb	0	; select bank0
  1033     0143  01C4               	clrf	_readData
  1034     0144  01C5               	clrf	_readData+1
  1035     0145  28A4               	goto	l1081
  1036     0146  3180  2845         	ljmp	start
  1037     0148                     __end_of_main:
  1038                           
  1039                           	psect	text1
  1040     0148                     __ptext1:	
  1041 ;; *************** function _strlen *****************
  1042 ;; Defined at:
  1043 ;;		line 5 in file "/home/stuart/microchip/xc8/v2.46/pic/sources/c99/common/strlen.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  s               1    wreg     PTR const unsigned char 
  1046 ;;		 -> rxdChar(25), 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  s               1    6[COMMON] PTR const unsigned char 
  1049 ;;		 -> rxdChar(25), 
  1050 ;;  a               1    5[COMMON] PTR const unsigned char 
  1051 ;;		 -> rxdChar(25), 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  2    2[COMMON] unsigned int 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1063 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1064 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1065 ;;Total ram usage:        5 bytes
  1066 ;; Hardware stack levels used: 1
  1067 ;; Hardware stack levels required when called: 1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075     0148                     _strlen:	
  1076                           ;psect for function _strlen
  1077                           
  1078                           
  1079                           ;incstack = 0
  1080                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  1081                           ;strlen@s stored from wreg
  1082     0148  00F6               	movwf	strlen@s
  1083     0149                     l935:
  1084     0149  0876               	movf	strlen@s,w
  1085     014A  00F5               	movwf	strlen@a
  1086     014B  2950               	goto	l939
  1087     014C                     l937:
  1088     014C  3001               	movlw	1
  1089     014D  00F4               	movwf	??_strlen
  1090     014E  0874               	movf	??_strlen,w
  1091     014F  07F6               	addwf	strlen@s,f
  1092     0150                     l939:
  1093     0150  0876               	movf	strlen@s,w
  1094     0151  0086               	movwf	6
  1095     0152  0187               	clrf	7
  1096     0153  0801               	movf	1,w
  1097     0154  1D03               	btfss	3,2
  1098     0155  2957               	goto	u161
  1099     0156  2958               	goto	u160
  1100     0157                     u161:
  1101     0157  294C               	goto	l937
  1102     0158                     u160:
  1103     0158                     l941:
  1104     0158  0875               	movf	strlen@a,w
  1105     0159  0276               	subwf	strlen@s,w
  1106     015A  00F2               	movwf	?_strlen
  1107     015B  01F3               	clrf	?_strlen+1
  1108     015C  1BF2               	btfsc	?_strlen,7
  1109     015D  03F3               	decf	?_strlen+1,f
  1110     015E                     l731:
  1111     015E  0008               	return
  1112     015F                     __end_of_strlen:
  1113                           
  1114                           	psect	text2
  1115     0193                     __ptext2:	
  1116 ;; *************** function _read_id *****************
  1117 ;; Defined at:
  1118 ;;		line 107 in file "main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  start_addr      2    2[COMMON] unsigned short 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2    2[COMMON] int 
  1125 ;; Registers used:
  1126 ;;		wreg
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1136 ;;Total ram usage:        2 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146     0193                     _read_id:	
  1147                           ;psect for function _read_id
  1148                           
  1149     0193                     l925:	
  1150                           ;incstack = 0
  1151                           ; Regs used in _read_id: [wreg]
  1152                           
  1153                           
  1154                           ;main.c: 109:             EEADR = start_addr;
  1155     0193  0873               	movf	read_id@start_addr+1,w
  1156     0194  0023               	movlb	3	; select bank3
  1157     0195  0092               	movwf	18	;volatile
  1158     0196  0872               	movf	read_id@start_addr,w
  1159     0197  0091               	movwf	17	;volatile
  1160     0198                     l927:
  1161                           
  1162                           ;main.c: 110:             EECON1bits.EEPGD = 0;
  1163     0198  1395               	bcf	21,7	;volsfr
  1164     0199                     l929:
  1165                           
  1166                           ;main.c: 111:             EECON1bits.CFGS = 0;
  1167     0199  1315               	bcf	21,6	;volsfr
  1168     019A                     l931:
  1169                           
  1170                           ;main.c: 112:             EECON1bits.RD = 1;
  1171     019A  1415               	bsf	21,0	;volsfr
  1172                           
  1173                           ;main.c: 113:             return (EEDATA);;	Return value of _read_id is never used
  1174     019B  0813               	movf	19,w	;volatile
  1175     019C                     l98:
  1176     019C  0008               	return
  1177     019D                     __end_of_read_id:
  1178                           
  1179                           	psect	text3
  1180     015F                     __ptext3:	
  1181 ;; *************** function _add_id *****************
  1182 ;; Defined at:
  1183 ;;		line 89 in file "main.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  start_addr      2    2[COMMON] unsigned short 
  1186 ;;  rxdData         1    4[COMMON] unsigned char 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  2    2[COMMON] int 
  1191 ;; Registers used:
  1192 ;;		wreg
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1198 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1201 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1202 ;;Total ram usage:        3 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212     015F                     _add_id:	
  1213                           ;psect for function _add_id
  1214                           
  1215     015F                     l909:	
  1216                           ;incstack = 0
  1217                           ; Regs used in _add_id: [wreg]
  1218                           
  1219                           
  1220                           ;main.c: 91:             EEADR = start_addr;
  1221     015F  0873               	movf	add_id@start_addr+1,w
  1222     0160  0023               	movlb	3	; select bank3
  1223     0161  0092               	movwf	18	;volatile
  1224     0162  0872               	movf	add_id@start_addr,w
  1225     0163  0091               	movwf	17	;volatile
  1226                           
  1227                           ;main.c: 92:             EEDATA = rxdData;
  1228     0164  0874               	movf	add_id@rxdData,w
  1229     0165  0093               	movwf	19	;volatile
  1230     0166                     l911:
  1231                           
  1232                           ;main.c: 93:             EECON1bits.CFGS = 0;
  1233     0166  1315               	bcf	21,6	;volsfr
  1234     0167                     l913:
  1235                           
  1236                           ;main.c: 94:             EECON1bits.EEPGD = 0;
  1237     0167  1395               	bcf	21,7	;volsfr
  1238     0168                     l915:
  1239                           
  1240                           ;main.c: 95:             EECON1bits.WREN = 1;
  1241     0168  1515               	bsf	21,2	;volsfr
  1242     0169                     l917:
  1243                           
  1244                           ;main.c: 96:             INTCONbits.GIE = 0;
  1245     0169  138B               	bcf	11,7	;volatile
  1246                           
  1247                           ;main.c: 97:             EECON2 = 0x55;
  1248     016A  3055               	movlw	85
  1249     016B  0096               	movwf	22	;volsfr
  1250                           
  1251                           ;main.c: 98:             EECON2 = 0xAA;
  1252     016C  30AA               	movlw	170
  1253     016D  0096               	movwf	22	;volsfr
  1254     016E                     l919:
  1255                           
  1256                           ;main.c: 99:             EECON1bits.WR = 1;
  1257     016E  1495               	bsf	21,1	;volsfr
  1258     016F                     l921:
  1259                           
  1260                           ;main.c: 100:             INTCONbits.GIE = 1;
  1261     016F  178B               	bsf	11,7	;volatile
  1262     0170                     l923:
  1263                           
  1264                           ;main.c: 101:             EECON1bits.WREN = 0;
  1265     0170  1115               	bcf	21,2	;volsfr
  1266     0171                     l92:	
  1267                           ;main.c: 103:             }
  1268                           
  1269                           
  1270                           ;main.c: 102:             while (EECON1bits.WR == 1){
  1271     0171  1895               	btfsc	21,1	;volsfr
  1272     0172  2974               	goto	u151
  1273     0173  2975               	goto	u150
  1274     0174                     u151:
  1275     0174  2971               	goto	l92
  1276     0175                     u150:
  1277     0175                     l95:
  1278     0175  0008               	return
  1279     0176                     __end_of_add_id:
  1280                           
  1281                           	psect	text4
  1282     019D                     __ptext4:	
  1283 ;; *************** function _EUSART_Write *****************
  1284 ;; Defined at:
  1285 ;;		line 69 in file "main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  data            1    wreg     unsigned char 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  data            1    2[COMMON] unsigned char 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1303 ;;Total ram usage:        1 bytes
  1304 ;; Hardware stack levels used: 1
  1305 ;; Hardware stack levels required when called: 1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313     019D                     _EUSART_Write:	
  1314                           ;psect for function _EUSART_Write
  1315                           
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _EUSART_Write: [wreg]
  1319                           ;EUSART_Write@data stored from wreg
  1320     019D  00F2               	movwf	EUSART_Write@data
  1321     019E                     l905:
  1322     019E                     l78:	
  1323                           ;main.c: 70:     while (!PIR1bits.TXIF);
  1324                           
  1325     019E  0020               	movlb	0	; select bank0
  1326     019F  1E11               	btfss	17,4	;volatile
  1327     01A0  29A2               	goto	u141
  1328     01A1  29A3               	goto	u140
  1329     01A2                     u141:
  1330     01A2  299E               	goto	l78
  1331     01A3                     u140:
  1332     01A3                     l907:
  1333                           
  1334                           ;main.c: 71:     TXREG = data;
  1335     01A3  0872               	movf	EUSART_Write@data,w
  1336     01A4  0023               	movlb	3	; select bank3
  1337     01A5  009A               	movwf	26	;volatile
  1338     01A6                     l81:
  1339     01A6  0008               	return
  1340     01A7                     __end_of_EUSART_Write:
  1341                           
  1342                           	psect	text5
  1343     0187                     __ptext5:	
  1344 ;; *************** function _EUSART_Init *****************
  1345 ;; Defined at:
  1346 ;;		line 52 in file "main.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1364 ;;Total ram usage:        0 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; Hardware stack levels required when called: 1
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374     0187                     _EUSART_Init:	
  1375                           ;psect for function _EUSART_Init
  1376                           
  1377     0187                     l891:	
  1378                           ;incstack = 0
  1379                           ; Regs used in _EUSART_Init: [wreg]
  1380                           
  1381                           
  1382                           ;main.c: 54:     SPBRGH = 0x34;
  1383     0187  3034               	movlw	52
  1384     0188  0023               	movlb	3	; select bank3
  1385     0189  009C               	movwf	28	;volatile
  1386                           
  1387                           ;main.c: 55:     SPBRGL = 0x10;
  1388     018A  3010               	movlw	16
  1389     018B  009B               	movwf	27	;volatile
  1390     018C                     l893:
  1391                           
  1392                           ;main.c: 58:     TXSTAbits.SYNC = 0;
  1393     018C  121E               	bcf	30,4	;volatile
  1394     018D                     l895:
  1395                           
  1396                           ;main.c: 59:     TXSTAbits.BRGH = 1;
  1397     018D  151E               	bsf	30,2	;volatile
  1398     018E                     l897:
  1399                           
  1400                           ;main.c: 60:     BAUDCONbits.BRG16 = 1;
  1401     018E  159F               	bsf	31,3	;volatile
  1402     018F                     l899:
  1403                           
  1404                           ;main.c: 61:     RCSTAbits.SPEN = 1;
  1405     018F  179D               	bsf	29,7	;volatile
  1406     0190                     l901:
  1407                           
  1408                           ;main.c: 64:     TXSTAbits.TXEN = 1;
  1409     0190  169E               	bsf	30,5	;volatile
  1410     0191                     l903:
  1411                           
  1412                           ;main.c: 65:     RCSTAbits.CREN = 1;
  1413     0191  161D               	bsf	29,4	;volatile
  1414     0192                     l75:
  1415     0192  0008               	return
  1416     0193                     __end_of_EUSART_Init:
  1417                           
  1418                           	psect	intentry
  1419     0004                     __pintentry:	
  1420 ;; *************** function _ISR *****************
  1421 ;; Defined at:
  1422 ;;		line 77 in file "main.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  2   85[None  ] int 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1438 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1440 ;;Total ram usage:        2 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		Interrupt level 1
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449     0004                     _ISR:
  1450                           
  1451                           ;incstack = 0
  1452     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1453                           
  1454                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  1455     0005  3180               	pagesel	$
  1456     0006                     i1l945:
  1457                           
  1458                           ;main.c: 78:     rxdChar[num] = RCREG;
  1459     0006  0879               	movf	_num,w
  1460     0007  3E47               	addlw	(low (_rxdChar| 0))& (0+255)
  1461     0008  0086               	movwf	6
  1462     0009  0187               	clrf	7
  1463     000A  0023               	movlb	3	; select bank3
  1464     000B  0819               	movf	25,w	;volatile
  1465     000C  0081               	movwf	1
  1466     000D                     i1l947:
  1467                           
  1468                           ;main.c: 79:     num++;
  1469     000D  3001               	movlw	1
  1470     000E  07F9               	addwf	_num,f
  1471     000F  3000               	movlw	0
  1472     0010  3DFA               	addwfc	_num+1,f
  1473     0011                     i1l949:
  1474                           
  1475                           ;main.c: 80:     if (rxdChar == '\n' || rxdChar == '\r' || num >= 16) {
  1476     0011  300A               	movlw	10
  1477     0012  00F0               	movwf	??_ISR
  1478     0013  3000               	movlw	0
  1479     0014  00F1               	movwf	??_ISR+1
  1480     0015  3000               	movlw	0
  1481     0016  0671               	xorwf	??_ISR+1,w
  1482     0017  1D03               	skipz
  1483     0018  281B               	goto	u17_25
  1484     0019  3047               	movlw	low (_rxdChar| 0)
  1485     001A  0670               	xorwf	??_ISR,w
  1486     001B                     u17_25:
  1487     001B  1903               	skipnz
  1488     001C  281E               	goto	u17_21
  1489     001D  281F               	goto	u17_20
  1490     001E                     u17_21:
  1491     001E  283A               	goto	i1l955
  1492     001F                     u17_20:
  1493     001F                     i1l951:
  1494     001F  300D               	movlw	13
  1495     0020  00F0               	movwf	??_ISR
  1496     0021  3000               	movlw	0
  1497     0022  00F1               	movwf	??_ISR+1
  1498     0023  3000               	movlw	0
  1499     0024  0671               	xorwf	??_ISR+1,w
  1500     0025  1D03               	skipz
  1501     0026  2829               	goto	u18_25
  1502     0027  3047               	movlw	low (_rxdChar| 0)
  1503     0028  0670               	xorwf	??_ISR,w
  1504     0029                     u18_25:
  1505     0029  1903               	skipnz
  1506     002A  282C               	goto	u18_21
  1507     002B  282D               	goto	u18_20
  1508     002C                     u18_21:
  1509     002C  283A               	goto	i1l955
  1510     002D                     u18_20:
  1511     002D                     i1l953:
  1512     002D  087A               	movf	_num+1,w
  1513     002E  3A80               	xorlw	128
  1514     002F  00F0               	movwf	??_ISR
  1515     0030  3080               	movlw	128
  1516     0031  0270               	subwf	??_ISR,w
  1517     0032  1D03               	skipz
  1518     0033  2836               	goto	u19_25
  1519     0034  3010               	movlw	16
  1520     0035  0279               	subwf	_num,w
  1521     0036                     u19_25:
  1522     0036  1C03               	skipc
  1523     0037  2839               	goto	u19_21
  1524     0038  283A               	goto	u19_20
  1525     0039                     u19_21:
  1526     0039  2843               	goto	i1l89
  1527     003A                     u19_20:
  1528     003A                     i1l955:
  1529                           
  1530                           ;main.c: 81:             num = 0;
  1531     003A  01F9               	clrf	_num
  1532     003B  01FA               	clrf	_num+1
  1533     003C                     i1l957:
  1534                           
  1535                           ;main.c: 82:             readData = 1;
  1536     003C  3001               	movlw	1
  1537     003D  0020               	movlb	0	; select bank0
  1538     003E  00C4               	movwf	_readData
  1539     003F  3000               	movlw	0
  1540     0040  00C5               	movwf	_readData+1
  1541     0041                     i1l959:
  1542                           
  1543                           ;main.c: 83:             RCSTAbits.CREN = 0;
  1544     0041  0023               	movlb	3	; select bank3
  1545     0042  121D               	bcf	29,4	;volatile
  1546     0043                     i1l89:
  1547     0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1548     0044  0009               	retfie
  1549     0045                     __end_of_ISR:
  1550     007E                     btemp	set	126	;btemp
  1551     007E                     int$flags	set	126
  1552     007E                     wtemp0	set	126
  1553                           
  1554                           	psect	config
  1555                           
  1556                           ;Config register CONFIG1 @ 0x8007
  1557                           ;	Oscillator Selection
  1558                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  1559                           ;	Watchdog Timer Enable
  1560                           ;	WDTE = OFF, WDT disabled
  1561                           ;	Power-up Timer Enable
  1562                           ;	PWRTE = OFF, PWRT disabled
  1563                           ;	MCLR Pin Function Select
  1564                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1565                           ;	Flash Program Memory Code Protection
  1566                           ;	CP = OFF, Program memory code protection is disabled
  1567                           ;	Data Memory Code Protection
  1568                           ;	CPD = 0x1, unprogrammed default
  1569                           ;	Brown-out Reset Enable
  1570                           ;	BOREN = ON, Brown-out Reset enabled
  1571                           ;	Clock Out Enable
  1572                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1573                           ;	Internal/External Switchover
  1574                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1575                           ;	Fail-Safe Clock Monitor Enable
  1576                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1577     8007                     	org	32775
  1578     8007  3FE2               	dw	16354

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         101
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80     10      74
    BANK1            80      0      49
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@a	PTR const unsigned char  size(1) Largest target is 25
		 -> rxdChar(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 25
		 -> rxdChar(BANK0[25]), 


Critical Paths under _main in COMMON

    _main->_strlen

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     820
                                              0 BANK0     10    10      0
                        _EUSART_Init
                       _EUSART_Write
                             _add_id
                            _read_id
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     156
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _read_id                                              2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _add_id                                               3     0      3     196
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Init
   _EUSART_Write
   _add_id
   _read_id
   _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      31       7       61.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      87      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      87      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 29 20:01:25 2025

                     l81 01A6                       l75 0192                       l92 0171  
                     l78 019E                       l95 0175                       l98 019C  
                    l111 00FA                      l116 0140                      l731 015E  
                    l901 0190                      l903 0191                      l911 0166  
                    l905 019E                      l921 016F                      l913 0167  
                    l907 01A3                      l923 0170                      l915 0168  
                    l931 019A                      l917 0169                      l909 015F  
                    l925 0193                      l941 0158                      l919 016E  
                    l927 0198                      l935 0149                      l929 0199  
                    l937 014C                      l891 0187                      l939 0150  
                    l893 018C                      l895 018D                      l897 018E  
                    l899 018F                      u140 01A3                      u300 00EC  
                    u141 01A2                      u301 00EB                      u150 0175  
                    u310 00F2                      u151 0174                      u311 00F1  
                    u160 0158                      u320 0109                      u161 0157  
                    u321 0108                      u330 0140                      u331 013F  
                    u270 00A4                      u335 013C                      u271 00A3  
                    u280 00AA                      u281 00A9                      u290 00E5  
                    u291 00E4                      u347 00CB                      _ISR 0004  
                    u295 00E1                      _id1 0030                      _id2 0020  
                    _id3 00B0                      _id4 00A0                      _loc 0077  
                    _exp 00C0                      _val 007B                      _num 0079  
                    wreg 0009             ?_EUSART_Init 0070                     ?_ISR 0070  
                   l1101 00E5                     l1103 00EC                     l1111 00FF  
                   l1121 0114                     l1113 0101                     l1105 00F2  
                   l1131 012E                     l1123 0116                     l1107 00F4  
                   l1115 0105                     l1051 0076                     l1125 0119  
                   l1133 0132                     l1117 0109                     l1109 00FC  
                   l1061 007F                     l1053 0079                     l1135 0142  
                   l1127 0120                     l1119 010B                     l1071 0086  
                   l1063 0082                     l1055 007A                     l1129 0129  
                   l1081 00A4                     l1073 008D                     l1065 0085  
                   l1057 007B                     l1049 006C                     l1091 00B8  
                   l1083 00AA                     l1075 0095                     l1059 007D  
                   l1093 00C5                     l1085 00AC                     l1077 009A  
                   l1095 00D1                     l1087 00B3                     l1079 009E  
                   l1097 00D6                     l1089 00B5                     l1099 00DA  
                   i1l89 0043                     _main 006C                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 0045                    ??_ISR 0070            ?_EUSART_Write 0070  
                  ?_main 0070                    _EEADR 0191                    i1l951 001F  
                  i1l953 002D                    i1l945 0006                    i1l955 003A  
                  i1l947 000D                    i1l957 003C                    i1l949 0011  
                  i1l959 0041                    _RCREG 0199                    u17_20 001F  
                  u17_21 001E                    u17_25 001B                    u18_20 002D  
                  u18_21 002C                    u18_25 0029                    u19_20 003A  
                  u19_21 0039                    u19_25 0036                    _TXREG 019A  
           _outputStatus 0040          __end_of_read_id 019D                    status 0003  
                  wtemp0 007E          __initialization 0047             __end_of_main 0148  
         ??_EUSART_Write 0072                   ??_main 0060            main@count_446 0067  
                 _EEDATA 0193                   _EECON2 0196                   _SPBRGH 019C  
                 _SPBRGL 019B                   _add_id 015F                   _strlen 0148  
              ??_read_id 0074  __end_of__initialization 0068           __pcstackCOMMON 0070  
           __pidataBANK1 0176               __pbssBANK0 0020               __pbssBANK1 00A0  
   __end_of_EUSART_Write 01A7               __pmaintext 006C                  ?_add_id 0072  
             __pintentry 0004                  ?_strlen 0072                  _CPSCON0 001E  
                _CPSCON1 001F           main@length_445 0062        read_id@start_addr 0072  
                __ptext1 0148                  __ptext2 0193                  __ptext3 015F  
                __ptext4 019D                  __ptext5 0187                  _read_id 0193  
                _rxdChar 0047                  _rxdData 0046                  clrloop0 01AE  
   end_of_initialization 0068                  init_ram 01A7                  initloop 01A8  
              _RCSTAbits 019D                  strlen@a 0075                  strlen@s 0076  
              _PORTBbits 000D                _TRISAbits 008C                _TRISBbits 008D  
             _start_addr 0042               main@id_set 0069                _TXSTAbits 019E  
             main@length 0064           __end_of_add_id 0176              _BAUDCONbits 019F  
           _EUSART_Write 019D           __end_of_strlen 015F      start_initialization 0047  
            __end_of_ISR 0045            ??_EUSART_Init 0072            add_id@rxdData 0074  
               ??_add_id 0075              __pdataBANK1 00C0                 ??_strlen 0074  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0060  
    __end_of_EUSART_Init 0193         add_id@start_addr 0072                 ?_read_id 0072  
               _LATAbits 010C                clear_ram0 01AD                 _PIE1bits 0091  
               _PIR1bits 0011         EUSART_Write@data 0072                main@count 0065  
            _EUSART_Init 0187               _EECON1bits 0195               _ANSELBbits 018D  
               _readData 0044                 int$flags 007E               _INTCONbits 000B  
               intlevel1 0000  
