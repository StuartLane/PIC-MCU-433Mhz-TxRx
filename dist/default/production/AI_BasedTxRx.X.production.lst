

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jul 24 21:44:14 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1847
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 07/09/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F1847 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     0091                     	;# 
    88     0092                     	;# 
    89     0093                     	;# 
    90     0094                     	;# 
    91     0095                     	;# 
    92     0096                     	;# 
    93     0097                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009A                     	;# 
    97     009B                     	;# 
    98     009B                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     0111                     	;# 
   105     0112                     	;# 
   106     0113                     	;# 
   107     0114                     	;# 
   108     0115                     	;# 
   109     0116                     	;# 
   110     0117                     	;# 
   111     0118                     	;# 
   112     0119                     	;# 
   113     011A                     	;# 
   114     011B                     	;# 
   115     011D                     	;# 
   116     011E                     	;# 
   117     018C                     	;# 
   118     018D                     	;# 
   119     0191                     	;# 
   120     0191                     	;# 
   121     0192                     	;# 
   122     0193                     	;# 
   123     0193                     	;# 
   124     0193                     	;# 
   125     0194                     	;# 
   126     0195                     	;# 
   127     0196                     	;# 
   128     0199                     	;# 
   129     019A                     	;# 
   130     019B                     	;# 
   131     019B                     	;# 
   132     019B                     	;# 
   133     019B                     	;# 
   134     019C                     	;# 
   135     019C                     	;# 
   136     019D                     	;# 
   137     019E                     	;# 
   138     019F                     	;# 
   139     020C                     	;# 
   140     020D                     	;# 
   141     0211                     	;# 
   142     0211                     	;# 
   143     0212                     	;# 
   144     0212                     	;# 
   145     0213                     	;# 
   146     0213                     	;# 
   147     0214                     	;# 
   148     0214                     	;# 
   149     0215                     	;# 
   150     0215                     	;# 
   151     0215                     	;# 
   152     0216                     	;# 
   153     0216                     	;# 
   154     0217                     	;# 
   155     0217                     	;# 
   156     0219                     	;# 
   157     021A                     	;# 
   158     021B                     	;# 
   159     021C                     	;# 
   160     021D                     	;# 
   161     021E                     	;# 
   162     021F                     	;# 
   163     0291                     	;# 
   164     0291                     	;# 
   165     0292                     	;# 
   166     0293                     	;# 
   167     0294                     	;# 
   168     0295                     	;# 
   169     0295                     	;# 
   170     0296                     	;# 
   171     0298                     	;# 
   172     0298                     	;# 
   173     0299                     	;# 
   174     029A                     	;# 
   175     029B                     	;# 
   176     029C                     	;# 
   177     029C                     	;# 
   178     029D                     	;# 
   179     029E                     	;# 
   180     029E                     	;# 
   181     0311                     	;# 
   182     0311                     	;# 
   183     0312                     	;# 
   184     0313                     	;# 
   185     0318                     	;# 
   186     0318                     	;# 
   187     0319                     	;# 
   188     031A                     	;# 
   189     0394                     	;# 
   190     0395                     	;# 
   191     0396                     	;# 
   192     039A                     	;# 
   193     039C                     	;# 
   194     039D                     	;# 
   195     039E                     	;# 
   196     039F                     	;# 
   197     0415                     	;# 
   198     0416                     	;# 
   199     0417                     	;# 
   200     041C                     	;# 
   201     041D                     	;# 
   202     041E                     	;# 
   203     0FE4                     	;# 
   204     0FE5                     	;# 
   205     0FE6                     	;# 
   206     0FE7                     	;# 
   207     0FE8                     	;# 
   208     0FE9                     	;# 
   209     0FEA                     	;# 
   210     0FEB                     	;# 
   211     0FED                     	;# 
   212     0FEE                     	;# 
   213     0FEF                     	;# 
   214     0000                     	;# 
   215     0001                     	;# 
   216     0002                     	;# 
   217     0003                     	;# 
   218     0004                     	;# 
   219     0005                     	;# 
   220     0006                     	;# 
   221     0007                     	;# 
   222     0008                     	;# 
   223     0009                     	;# 
   224     000A                     	;# 
   225     000B                     	;# 
   226     000C                     	;# 
   227     000D                     	;# 
   228     0011                     	;# 
   229     0012                     	;# 
   230     0013                     	;# 
   231     0014                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0016                     	;# 
   235     0017                     	;# 
   236     0018                     	;# 
   237     0019                     	;# 
   238     001A                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     008C                     	;# 
   244     008D                     	;# 
   245     0091                     	;# 
   246     0092                     	;# 
   247     0093                     	;# 
   248     0094                     	;# 
   249     0095                     	;# 
   250     0096                     	;# 
   251     0097                     	;# 
   252     0098                     	;# 
   253     0099                     	;# 
   254     009A                     	;# 
   255     009B                     	;# 
   256     009B                     	;# 
   257     009C                     	;# 
   258     009D                     	;# 
   259     009E                     	;# 
   260     010C                     	;# 
   261     010D                     	;# 
   262     0111                     	;# 
   263     0112                     	;# 
   264     0113                     	;# 
   265     0114                     	;# 
   266     0115                     	;# 
   267     0116                     	;# 
   268     0117                     	;# 
   269     0118                     	;# 
   270     0119                     	;# 
   271     011A                     	;# 
   272     011B                     	;# 
   273     011D                     	;# 
   274     011E                     	;# 
   275     018C                     	;# 
   276     018D                     	;# 
   277     0191                     	;# 
   278     0191                     	;# 
   279     0192                     	;# 
   280     0193                     	;# 
   281     0193                     	;# 
   282     0193                     	;# 
   283     0194                     	;# 
   284     0195                     	;# 
   285     0196                     	;# 
   286     0199                     	;# 
   287     019A                     	;# 
   288     019B                     	;# 
   289     019B                     	;# 
   290     019B                     	;# 
   291     019B                     	;# 
   292     019C                     	;# 
   293     019C                     	;# 
   294     019D                     	;# 
   295     019E                     	;# 
   296     019F                     	;# 
   297     020C                     	;# 
   298     020D                     	;# 
   299     0211                     	;# 
   300     0211                     	;# 
   301     0212                     	;# 
   302     0212                     	;# 
   303     0213                     	;# 
   304     0213                     	;# 
   305     0214                     	;# 
   306     0214                     	;# 
   307     0215                     	;# 
   308     0215                     	;# 
   309     0215                     	;# 
   310     0216                     	;# 
   311     0216                     	;# 
   312     0217                     	;# 
   313     0217                     	;# 
   314     0219                     	;# 
   315     021A                     	;# 
   316     021B                     	;# 
   317     021C                     	;# 
   318     021D                     	;# 
   319     021E                     	;# 
   320     021F                     	;# 
   321     0291                     	;# 
   322     0291                     	;# 
   323     0292                     	;# 
   324     0293                     	;# 
   325     0294                     	;# 
   326     0295                     	;# 
   327     0295                     	;# 
   328     0296                     	;# 
   329     0298                     	;# 
   330     0298                     	;# 
   331     0299                     	;# 
   332     029A                     	;# 
   333     029B                     	;# 
   334     029C                     	;# 
   335     029C                     	;# 
   336     029D                     	;# 
   337     029E                     	;# 
   338     029E                     	;# 
   339     0311                     	;# 
   340     0311                     	;# 
   341     0312                     	;# 
   342     0313                     	;# 
   343     0318                     	;# 
   344     0318                     	;# 
   345     0319                     	;# 
   346     031A                     	;# 
   347     0394                     	;# 
   348     0395                     	;# 
   349     0396                     	;# 
   350     039A                     	;# 
   351     039C                     	;# 
   352     039D                     	;# 
   353     039E                     	;# 
   354     039F                     	;# 
   355     0415                     	;# 
   356     0416                     	;# 
   357     0417                     	;# 
   358     041C                     	;# 
   359     041D                     	;# 
   360     041E                     	;# 
   361     0FE4                     	;# 
   362     0FE5                     	;# 
   363     0FE6                     	;# 
   364     0FE7                     	;# 
   365     0FE8                     	;# 
   366     0FE9                     	;# 
   367     0FEA                     	;# 
   368     0FEB                     	;# 
   369     0FED                     	;# 
   370     0FEE                     	;# 
   371     0FEF                     	;# 
   372                           
   373                           	psect	idataBANK0
   374     0174                     __pidataBANK0:
   375                           
   376                           ;initializer for _start_addr
   377     0174  3400               	retlw	0
   378     0175  3421               	retlw	33
   379                           
   380                           ;initializer for _exp
   381     0176  344C               	retlw	76
   382     0177  3461               	retlw	97
   383     0178  346E               	retlw	110
   384     0179  3465               	retlw	101
   385     017A  344C               	retlw	76
   386     017B  3469               	retlw	105
   387     017C  3467               	retlw	103
   388     017D  3468               	retlw	104
   389     017E  3474               	retlw	116
   390     017F  3473               	retlw	115
   391     0180  3430               	retlw	48
   392     0181  3431               	retlw	49
   393     0182  340A               	retlw	10
   394     0183  340D               	retlw	13
   395     0184  3420               	retlw	32
   396     0185  3420               	retlw	32
   397     0186  3400               	retlw	0
   398     0003                     _STATUSbits	set	3
   399     000B                     _INTCONbits	set	11
   400     001F                     _CPSCON1	set	31
   401     001E                     _CPSCON0	set	30
   402     0011                     _PIR1bits	set	17
   403     0091                     _PIE1bits	set	145
   404     008D                     _TRISBbits	set	141
   405     008C                     _TRISAbits	set	140
   406     010C                     _LATAbits	set	268
   407     0191                     _EEADR	set	401
   408     0196                     _EECON2	set	406
   409     0195                     _EECON1	set	405
   410     0193                     _EEDATA	set	403
   411     0195                     _EECON1bits	set	405
   412     018D                     _ANSELBbits	set	397
   413     0199                     _RCREG	set	409
   414     019A                     _TXREG	set	410
   415     019D                     _RCSTAbits	set	413
   416     019F                     _BAUDCONbits	set	415
   417     019E                     _TXSTAbits	set	414
   418     019B                     _SPBRGL	set	411
   419     019C                     _SPBRGH	set	412
   420                           
   421                           	psect	cinit
   422     0049                     start_initialization:	
   423                           ; #config settings
   424                           
   425     0049                     __initialization:
   426                           
   427                           ; Initialize objects allocated to BANK0
   428     0049  3074               	movlw	low __pidataBANK0
   429     004A  0084               	movwf	4
   430     004B  3081               	movlw	(high __pidataBANK0)| (0+128)
   431     004C  0085               	movwf	5
   432     004D  303D               	movlw	low __pdataBANK0
   433     004E  0086               	movwf	6
   434     004F  3000               	movlw	high __pdataBANK0
   435     0050  0087               	movwf	7
   436     0051  3013               	movlw	19
   437     0052  3181  219D  3180   	fcall	init_ram
   438                           
   439                           ; Clear objects allocated to COMMON
   440     0055  01F9               	clrf	__pbssCOMMON& (0+127)
   441     0056  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   442     0057  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   443                           
   444                           ; Clear objects allocated to BANK0
   445     0058  3020               	movlw	low __pbssBANK0
   446     0059  0084               	movwf	4
   447     005A  3000               	movlw	high __pbssBANK0
   448     005B  0085               	movwf	5
   449     005C  301D               	movlw	29
   450     005D  3181  21A3  3180   	fcall	clear_ram0
   451     0060                     end_of_initialization:	
   452                           ;End of C runtime variable initialization code
   453                           
   454     0060                     __end_of__initialization:
   455     0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   456     0061  0020               	movlb	0
   457     0062  3180  2864         	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bssCOMMON
   460     0079                     __pbssCOMMON:
   461     0079                     _num:
   462     0079                     	ds	2
   463     007B                     _val:
   464     007B                     	ds	1
   465                           
   466                           	psect	bssBANK0
   467     0020                     __pbssBANK0:
   468     0020                     _loc:
   469     0020                     	ds	2
   470     0022                     _readData:
   471     0022                     	ds	2
   472     0024                     _rxdChar:
   473     0024                     	ds	25
   474                           
   475                           	psect	dataBANK0
   476     003D                     __pdataBANK0:
   477     003D                     _start_addr:
   478     003D                     	ds	2
   479     003F                     _exp:
   480     003F                     	ds	17
   481                           
   482                           	psect	inittext
   483     019D                     init_ram:
   484     019D  00FE               	movwf	btemp
   485     019E                     initloop:
   486     019E  0012               	moviw fsr0++
   487     019F  001E               	movwi fsr1++
   488     01A0  0BFE               	decfsz	btemp,f
   489     01A1  299E               	goto	initloop
   490     01A2  3400               	retlw	0
   491                           
   492                           	psect	clrtext
   493     01A3                     clear_ram0:	
   494                           ;	Called with FSR0 containing the base address, and
   495                           ;	WREG with the size to clear
   496                           
   497     01A3  0064               	clrwdt	;clear the watchdog before getting into this loop
   498     01A4                     clrloop0:
   499     01A4  0180               	clrf	0	;clear RAM location pointed to by FSR
   500     01A5  3101               	addfsr 0,1
   501     01A6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   502     01A7  29A4               	goto	clrloop0	;have we reached the end yet?
   503     01A8  3400               	retlw	0	;all done for this memory range, return
   504                           
   505                           	psect	cstackCOMMON
   506     0070                     __pcstackCOMMON:
   507     0070                     ?_EUSART_Init:
   508     0070                     ?_EUSART_Write:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ??_ISR:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_main:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_ISR:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 2 bytes @ 0x0
   522     0070                     	ds	2
   523     0072                     ??_EUSART_Init:
   524     0072                     ??_EUSART_Write:	
   525                           ; 1 bytes @ 0x2
   526                           
   527     0072                     ?_strlen:	
   528                           ; 1 bytes @ 0x2
   529                           
   530     0072                     ?_strcmp:	
   531                           ; 2 bytes @ 0x2
   532                           
   533     0072                     EUSART_Write@data:	
   534                           ; 2 bytes @ 0x2
   535                           
   536     0072                     strcmp@r:	
   537                           ; 1 bytes @ 0x2
   538                           
   539                           
   540                           ; 1 bytes @ 0x2
   541     0072                     	ds	2
   542     0074                     ??_strlen:
   543     0074                     ??_strcmp:	
   544                           ; 1 bytes @ 0x4
   545                           
   546                           
   547                           ; 1 bytes @ 0x4
   548     0074                     	ds	1
   549     0075                     strcmp@l:
   550     0075                     strlen@a:	
   551                           ; 1 bytes @ 0x5
   552                           
   553                           
   554                           ; 1 bytes @ 0x5
   555     0075                     	ds	1
   556     0076                     strlen@s:
   557                           
   558                           ; 1 bytes @ 0x6
   559     0076                     	ds	1
   560     0077                     ??_main:
   561                           
   562                           ; 1 bytes @ 0x7
   563     0077                     	ds	2
   564                           
   565                           	psect	cstackBANK0
   566     0050                     __pcstackBANK0:
   567     0050                     main@cmp:
   568                           
   569                           ; 2 bytes @ 0x0
   570     0050                     	ds	2
   571     0052                     main@count:
   572                           
   573                           ; 2 bytes @ 0x2
   574     0052                     	ds	2
   575     0054                     main@length:
   576                           
   577                           ; 2 bytes @ 0x4
   578     0054                     	ds	2
   579                           
   580                           	psect	maintext
   581     0064                     __pmaintext:	
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 83 in file "main.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  count           2    2[BANK0 ] int 
   592 ;;  length          2    4[BANK0 ] int 
   593 ;;  cmp             2    0[BANK0 ] int 
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : B1F/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   604 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   606 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   607 ;;Total ram usage:        8 bytes
   608 ;; Hardware stack levels required when called: 2
   609 ;; This function calls:
   610 ;;		_EUSART_Init
   611 ;;		_EUSART_Write
   612 ;;		_strcmp
   613 ;;		_strlen
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619     0064                     _main:	
   620                           ;psect for function _main
   621                           
   622     0064                     l920:	
   623                           ;incstack = 0
   624                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   625                           
   626                           
   627                           ;main.c: 84:     TRISAbits.TRISA1 = 0;
   628     0064  0021               	movlb	1	; select bank1
   629     0065  108C               	bcf	12,1	;volatile
   630                           
   631                           ;main.c: 85:     TRISBbits.TRISB1 = 1;
   632     0066  148D               	bsf	13,1	;volatile
   633                           
   634                           ;main.c: 86:     TRISBbits.TRISB2 = 0;
   635     0067  110D               	bcf	13,2	;volatile
   636                           
   637                           ;main.c: 87:     LATAbits.LATA1 = 0;
   638     0068  0022               	movlb	2	; select bank2
   639     0069  108C               	bcf	12,1	;volatile
   640                           
   641                           ;main.c: 88:     ANSELBbits.ANSB2 = 0;
   642     006A  0023               	movlb	3	; select bank3
   643     006B  110D               	bcf	13,2	;volatile
   644                           
   645                           ;main.c: 89:     ANSELBbits.ANSB1 = 0;
   646     006C  108D               	bcf	13,1	;volatile
   647     006D                     l922:
   648                           
   649                           ;main.c: 90:     CPSCON0 = 0x00;
   650     006D  0020               	movlb	0	; select bank0
   651     006E  019E               	clrf	30	;volatile
   652                           
   653                           ;main.c: 91:     CPSCON1 = 0x00;
   654     006F  019F               	clrf	31	;volatile
   655     0070                     l924:
   656                           
   657                           ;main.c: 93:     INTCONbits.GIE = 1;
   658     0070  178B               	bsf	11,7	;volatile
   659     0071                     l926:
   660                           
   661                           ;main.c: 94:     INTCONbits.PEIE = 1;
   662     0071  170B               	bsf	11,6	;volatile
   663     0072                     l928:
   664                           
   665                           ;main.c: 95:     PIE1bits.RCIE = 1;
   666     0072  0021               	movlb	1	; select bank1
   667     0073  1691               	bsf	17,5	;volatile
   668     0074                     l930:
   669                           
   670                           ;main.c: 96:     RCSTAbits.CREN = 1;
   671     0074  0023               	movlb	3	; select bank3
   672     0075  161D               	bsf	29,4	;volatile
   673     0076                     l932:
   674                           
   675                           ;main.c: 99:     EUSART_Init();
   676     0076  3181  2187  3180   	fcall	_EUSART_Init
   677     0079                     l934:
   678                           
   679                           ;main.c: 103:         if (readData == 1) {
   680     0079  0020               	movlb	0	; select bank0
   681     007A  0322               	decf	_readData,w
   682     007B  0423               	iorwf	_readData+1,w
   683     007C  1D03               	btfss	3,2
   684     007D  287F               	goto	u221
   685     007E  2880               	goto	u220
   686     007F                     u221:
   687     007F  2879               	goto	l934
   688     0080                     u220:
   689     0080                     l936:
   690                           
   691                           ;main.c: 104:             int length = strlen(rxdChar);
   692     0080  3024               	movlw	(low (_rxdChar| 0))& (0+255)
   693     0081  3181  215D  3180   	fcall	_strlen
   694     0084  0873               	movf	?_strlen+1,w
   695     0085  0020               	movlb	0	; select bank0
   696     0086  00D5               	movwf	main@length+1
   697     0087  0872               	movf	?_strlen,w
   698     0088  00D4               	movwf	main@length
   699     0089                     l938:
   700                           
   701                           ;main.c: 105:             start_addr=0x2100;
   702     0089  3000               	movlw	0
   703     008A  00BD               	movwf	_start_addr
   704     008B  3021               	movlw	33
   705     008C  00BE               	movwf	_start_addr+1
   706     008D                     l940:
   707                           
   708                           ;main.c: 106:             for (loc=-1; loc<=length; loc++){
   709     008D  30FF               	movlw	255
   710     008E  00A0               	movwf	_loc
   711     008F  30FF               	movlw	255
   712     0090  00A1               	movwf	_loc+1
   713     0091  28C9               	goto	l88
   714     0092                     l91:
   715     0092  0023               	movlb	3	; select bank3
   716     0093  1895               	btfsc	21,1	;volsfr
   717     0094  2896               	goto	u231
   718     0095  2897               	goto	u230
   719     0096                     u231:
   720     0096  2892               	goto	l91
   721     0097                     u230:
   722     0097                     l942:
   723     0097  0020               	movlb	0	; select bank0
   724     0098  083E               	movf	_start_addr+1,w
   725     0099  0023               	movlb	3	; select bank3
   726     009A  0092               	movwf	18	;volatile
   727     009B  0020               	movlb	0	; select bank0
   728     009C  083D               	movf	_start_addr,w
   729     009D  0023               	movlb	3	; select bank3
   730     009E  0091               	movwf	17	;volatile
   731     009F                     l944:
   732     009F  0020               	movlb	0	; select bank0
   733     00A0  0820               	movf	_loc,w
   734     00A1  3E24               	addlw	(low (_rxdChar| 0))& (0+255)
   735     00A2  0086               	movwf	6
   736     00A3  0187               	clrf	7
   737     00A4  0801               	movf	1,w
   738     00A5  0023               	movlb	3	; select bank3
   739     00A6  0093               	movwf	19	;volatile
   740     00A7                     l946:
   741     00A7  303F               	movlw	63
   742     00A8  00F7               	movwf	??_main
   743     00A9  0877               	movf	??_main,w
   744     00AA  0595               	andwf	21,f	;volsfr
   745     00AB                     l948:
   746     00AB  0020               	movlb	0	; select bank0
   747     00AC  1003               	bcf	3,0	;volatile
   748     00AD                     l950:
   749     00AD  1F8B               	btfss	11,7	;volatile
   750     00AE  28B0               	goto	u241
   751     00AF  28B1               	goto	u240
   752     00B0                     u241:
   753     00B0  28B2               	goto	l94
   754     00B1                     u240:
   755     00B1                     l952:
   756     00B1  1403               	bsf	3,0	;volatile
   757     00B2                     l94:
   758     00B2  138B               	bcf	11,7	;volatile
   759     00B3  0023               	movlb	3	; select bank3
   760     00B4  1515               	bsf	21,2	;volsfr
   761     00B5                     l954:
   762     00B5  3055               	movlw	85
   763     00B6  0096               	movwf	22	;volsfr
   764     00B7  30AA               	movlw	170
   765     00B8  0096               	movwf	22	;volsfr
   766     00B9                     l956:
   767     00B9  1495               	bsf	21,1	;volsfr
   768     00BA                     l958:
   769     00BA  1115               	bcf	21,2	;volsfr
   770     00BB                     l960:
   771     00BB  0020               	movlb	0	; select bank0
   772     00BC  1C03               	btfss	3,0	;volatile
   773     00BD  28BF               	goto	u251
   774     00BE  28C0               	goto	u250
   775     00BF                     u251:
   776     00BF  28C1               	goto	l964
   777     00C0                     u250:
   778     00C0                     l962:
   779     00C0  178B               	bsf	11,7	;volatile
   780     00C1                     l964:
   781                           
   782                           ;main.c: 108:             start_addr++;
   783     00C1  3001               	movlw	1
   784     00C2  07BD               	addwf	_start_addr,f
   785     00C3  3000               	movlw	0
   786     00C4  3DBE               	addwfc	_start_addr+1,f
   787                           
   788                           ;main.c: 109:             }
   789     00C5  3001               	movlw	1
   790     00C6  07A0               	addwf	_loc,f
   791     00C7  3000               	movlw	0
   792     00C8  3DA1               	addwfc	_loc+1,f
   793     00C9                     l88:
   794     00C9  0855               	movf	main@length+1,w
   795     00CA  3A80               	xorlw	128
   796     00CB  00F7               	movwf	??_main
   797     00CC  0821               	movf	_loc+1,w
   798     00CD  3A80               	xorlw	128
   799     00CE  0277               	subwf	??_main,w
   800     00CF  1D03               	skipz
   801     00D0  28D3               	goto	u265
   802     00D1  0820               	movf	_loc,w
   803     00D2  0254               	subwf	main@length,w
   804     00D3                     u265:
   805     00D3  1803               	skipnc
   806     00D4  28D6               	goto	u261
   807     00D5  28D7               	goto	u260
   808     00D6                     u261:
   809     00D6  2892               	goto	l91
   810     00D7                     u260:
   811     00D7                     l97:
   812                           
   813                           ;main.c: 110:         TXSTAbits.TXEN = 1;
   814     00D7  0023               	movlb	3	; select bank3
   815     00D8  169E               	bsf	30,5	;volatile
   816     00D9                     l966:
   817                           
   818                           ;main.c: 111:         start_addr=0x2100;
   819     00D9  3000               	movlw	0
   820     00DA  0020               	movlb	0	; select bank0
   821     00DB  00BD               	movwf	_start_addr
   822     00DC  3021               	movlw	33
   823     00DD  00BE               	movwf	_start_addr+1
   824     00DE                     l968:
   825                           
   826                           ;main.c: 112:         for (int count=0; count<=length; count++){
   827     00DE  01D2               	clrf	main@count
   828     00DF  01D3               	clrf	main@count+1
   829     00E0  2907               	goto	l984
   830     00E1                     l970:
   831                           
   832                           ;main.c: 114:             EUSART_Write(( EEADR = start_addr, EECON1 &= 0x3F, EECON1bits.
      +                          RD = 1, EEDATA));
   833     00E1  0020               	movlb	0	; select bank0
   834     00E2  083E               	movf	_start_addr+1,w
   835     00E3  0023               	movlb	3	; select bank3
   836     00E4  0092               	movwf	18	;volatile
   837     00E5  0020               	movlb	0	; select bank0
   838     00E6  083D               	movf	_start_addr,w
   839     00E7  0023               	movlb	3	; select bank3
   840     00E8  0091               	movwf	17	;volatile
   841     00E9                     l972:
   842     00E9  303F               	movlw	63
   843     00EA  00F7               	movwf	??_main
   844     00EB  0877               	movf	??_main,w
   845     00EC  0595               	andwf	21,f	;volsfr
   846     00ED                     l974:
   847     00ED  1415               	bsf	21,0	;volsfr
   848     00EE                     l976:
   849     00EE  0813               	movf	19,w	;volatile
   850     00EF  3181  2193  3180   	fcall	_EUSART_Write
   851     00F2                     l978:
   852                           
   853                           ;main.c: 115:                 _delay((unsigned long)((200)*(16000000/4000.0)));
   854     00F2  3005               	movlw	5
   855     00F3  00F8               	movwf	??_main+1
   856     00F4  300F               	movlw	15
   857     00F5  00F7               	movwf	??_main
   858     00F6  30F1               	movlw	241
   859     00F7                     u297:
   860     00F7  0B89               	decfsz	9,f
   861     00F8  28F7               	goto	u297
   862     00F9  0BF7               	decfsz	??_main,f
   863     00FA  28F7               	goto	u297
   864     00FB  0BF8               	decfsz	??_main+1,f
   865     00FC  28F7               	goto	u297
   866     00FD  0000               	nop
   867     00FE                     l980:
   868                           
   869                           ;main.c: 116:                 start_addr++;
   870     00FE  3001               	movlw	1
   871     00FF  0020               	movlb	0	; select bank0
   872     0100  07BD               	addwf	_start_addr,f
   873     0101  3000               	movlw	0
   874     0102  3DBE               	addwfc	_start_addr+1,f
   875     0103                     l982:
   876                           
   877                           ;main.c: 117:         }
   878     0103  3001               	movlw	1
   879     0104  07D2               	addwf	main@count,f
   880     0105  3000               	movlw	0
   881     0106  3DD3               	addwfc	main@count+1,f
   882     0107                     l984:
   883     0107  0855               	movf	main@length+1,w
   884     0108  3A80               	xorlw	128
   885     0109  00F7               	movwf	??_main
   886     010A  0853               	movf	main@count+1,w
   887     010B  3A80               	xorlw	128
   888     010C  0277               	subwf	??_main,w
   889     010D  1D03               	skipz
   890     010E  2911               	goto	u275
   891     010F  0852               	movf	main@count,w
   892     0110  0254               	subwf	main@length,w
   893     0111                     u275:
   894     0111  1803               	skipnc
   895     0112  2914               	goto	u271
   896     0113  2915               	goto	u270
   897     0114                     u271:
   898     0114  28E1               	goto	l970
   899     0115                     u270:
   900     0115                     l100:
   901                           
   902                           ;main.c: 118:         TXSTAbits.TXEN = 0;
   903     0115  0023               	movlb	3	; select bank3
   904     0116  129E               	bcf	30,5	;volatile
   905     0117                     l986:
   906                           
   907                           ;main.c: 120:         int cmp = strcmp(exp, rxdChar);
   908     0117  3024               	movlw	(low (_rxdChar| 0))& (0+255)
   909     0118  00F2               	movwf	strcmp@r
   910     0119  303F               	movlw	(low (_exp| 0))& (0+255)
   911     011A  3181  2132  3180   	fcall	_strcmp
   912     011D  0873               	movf	?_strcmp+1,w
   913     011E  0020               	movlb	0	; select bank0
   914     011F  00D1               	movwf	main@cmp+1
   915     0120  0872               	movf	?_strcmp,w
   916     0121  00D0               	movwf	main@cmp
   917     0122                     l988:
   918                           
   919                           ;main.c: 121:         if(cmp == 0){
   920     0122  0850               	movf	main@cmp,w
   921     0123  0451               	iorwf	main@cmp+1,w
   922     0124  1D03               	btfss	3,2
   923     0125  2927               	goto	u281
   924     0126  2928               	goto	u280
   925     0127                     u281:
   926     0127  292A               	goto	l101
   927     0128                     u280:
   928     0128                     l990:
   929                           
   930                           ;main.c: 122:             LATAbits.LATA1 = 1;
   931     0128  0022               	movlb	2	; select bank2
   932     0129  148C               	bsf	12,1	;volatile
   933     012A                     l101:	
   934                           ;main.c: 123:         }
   935                           
   936                           
   937                           ;main.c: 124:         RCSTAbits.CREN = 1;
   938     012A  0023               	movlb	3	; select bank3
   939     012B  161D               	bsf	29,4	;volatile
   940     012C                     l992:
   941                           
   942                           ;main.c: 125:         readData = 0;
   943     012C  0020               	movlb	0	; select bank0
   944     012D  01A2               	clrf	_readData
   945     012E  01A3               	clrf	_readData+1
   946     012F  2879               	goto	l934
   947     0130  3180  2847         	ljmp	start
   948     0132                     __end_of_main:
   949                           
   950                           	psect	text1
   951     015D                     __ptext1:	
   952 ;; *************** function _strlen *****************
   953 ;; Defined at:
   954 ;;		line 5 in file "/home/stuart/microchip/xc8/v2.46/pic/sources/c99/common/strlen.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  s               1    wreg     PTR const unsigned char 
   957 ;;		 -> rxdChar(25), 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  s               1    6[COMMON] PTR const unsigned char 
   960 ;;		 -> rxdChar(25), 
   961 ;;  a               1    5[COMMON] PTR const unsigned char 
   962 ;;		 -> rxdChar(25), 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  2    2[COMMON] unsigned int 
   965 ;; Registers used:
   966 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   976 ;;Total ram usage:        5 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; Hardware stack levels required when called: 1
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_main
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986     015D                     _strlen:	
   987                           ;psect for function _strlen
   988                           
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
   992                           ;strlen@s stored from wreg
   993     015D  00F6               	movwf	strlen@s
   994     015E                     l878:
   995     015E  0876               	movf	strlen@s,w
   996     015F  00F5               	movwf	strlen@a
   997     0160  2965               	goto	l882
   998     0161                     l880:
   999     0161  3001               	movlw	1
  1000     0162  00F4               	movwf	??_strlen
  1001     0163  0874               	movf	??_strlen,w
  1002     0164  07F6               	addwf	strlen@s,f
  1003     0165                     l882:
  1004     0165  0876               	movf	strlen@s,w
  1005     0166  0086               	movwf	6
  1006     0167  0187               	clrf	7
  1007     0168  0801               	movf	1,w
  1008     0169  1D03               	btfss	3,2
  1009     016A  296C               	goto	u161
  1010     016B  296D               	goto	u160
  1011     016C                     u161:
  1012     016C  2961               	goto	l880
  1013     016D                     u160:
  1014     016D                     l884:
  1015     016D  0875               	movf	strlen@a,w
  1016     016E  0276               	subwf	strlen@s,w
  1017     016F  00F2               	movwf	?_strlen
  1018     0170  01F3               	clrf	?_strlen+1
  1019     0171  1BF2               	btfsc	?_strlen,7
  1020     0172  03F3               	decf	?_strlen+1,f
  1021     0173                     l724:
  1022     0173  0008               	return
  1023     0174                     __end_of_strlen:
  1024                           
  1025                           	psect	text2
  1026     0132                     __ptext2:	
  1027 ;; *************** function _strcmp *****************
  1028 ;; Defined at:
  1029 ;;		line 3 in file "/home/stuart/microchip/xc8/v2.46/pic/sources/c99/common/strcmp.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  l               1    wreg     PTR const unsigned char 
  1032 ;;		 -> exp(17), 
  1033 ;;  r               1    2[COMMON] PTR const unsigned char 
  1034 ;;		 -> rxdChar(25), 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  l               1    5[COMMON] PTR const unsigned char 
  1037 ;;		 -> exp(17), 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  2    2[COMMON] int 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1050 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1051 ;;Total ram usage:        4 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; Hardware stack levels required when called: 1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061     0132                     _strcmp:	
  1062                           ;psect for function _strcmp
  1063                           
  1064                           
  1065                           ;incstack = 0
  1066                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0]
  1067                           ;strcmp@l stored from wreg
  1068     0132  00F5               	movwf	strcmp@l
  1069     0133                     l888:
  1070     0133  293C               	goto	l894
  1071     0134                     l890:
  1072     0134  3001               	movlw	1
  1073     0135  00F4               	movwf	??_strcmp
  1074     0136  0874               	movf	??_strcmp,w
  1075     0137  07F5               	addwf	strcmp@l,f
  1076     0138                     l892:
  1077     0138  3001               	movlw	1
  1078     0139  00F4               	movwf	??_strcmp
  1079     013A  0874               	movf	??_strcmp,w
  1080     013B  07F2               	addwf	strcmp@r,f
  1081     013C                     l894:
  1082     013C  0872               	movf	strcmp@r,w
  1083     013D  0086               	movwf	6
  1084     013E  0187               	clrf	7
  1085     013F  0875               	movf	strcmp@l,w
  1086     0140  0084               	movwf	4
  1087     0141  0185               	clrf	5
  1088     0142  0800               	movf	0,w
  1089     0143  0601               	xorwf	1,w
  1090     0144  1D03               	skipz
  1091     0145  2947               	goto	u171
  1092     0146  2948               	goto	u170
  1093     0147                     u171:
  1094     0147  2950               	goto	l898
  1095     0148                     u170:
  1096     0148                     l896:
  1097     0148  0875               	movf	strcmp@l,w
  1098     0149  0086               	movwf	6
  1099     014A  0187               	clrf	7
  1100     014B  0801               	movf	1,w
  1101     014C  1D03               	btfss	3,2
  1102     014D  294F               	goto	u181
  1103     014E  2950               	goto	u180
  1104     014F                     u181:
  1105     014F  2934               	goto	l890
  1106     0150                     u180:
  1107     0150                     l898:
  1108     0150  0875               	movf	strcmp@l,w
  1109     0151  0086               	movwf	6
  1110     0152  0187               	clrf	7
  1111     0153  0872               	movf	strcmp@r,w
  1112     0154  0084               	movwf	4
  1113     0155  0185               	clrf	5
  1114     0156  0800               	movf	0,w
  1115     0157  0201               	subwf	1,w
  1116     0158  00F2               	movwf	?_strcmp
  1117     0159  01F3               	clrf	?_strcmp+1
  1118     015A  1C03               	skipc
  1119     015B  03F3               	decf	?_strcmp+1,f
  1120     015C                     l718:
  1121     015C  0008               	return
  1122     015D                     __end_of_strcmp:
  1123                           
  1124                           	psect	text3
  1125     0193                     __ptext3:	
  1126 ;; *************** function _EUSART_Write *****************
  1127 ;; Defined at:
  1128 ;;		line 62 in file "main.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  data            1    wreg     unsigned char 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  data            1    2[COMMON] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1145 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1146 ;;Total ram usage:        1 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 1
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156     0193                     _EUSART_Write:	
  1157                           ;psect for function _EUSART_Write
  1158                           
  1159                           
  1160                           ;incstack = 0
  1161                           ; Regs used in _EUSART_Write: [wreg]
  1162                           ;EUSART_Write@data stored from wreg
  1163     0193  00F2               	movwf	EUSART_Write@data
  1164     0194                     l874:
  1165     0194                     l70:	
  1166                           ;main.c: 63:     while (!PIR1bits.TXIF);
  1167                           
  1168     0194  0020               	movlb	0	; select bank0
  1169     0195  1E11               	btfss	17,4	;volatile
  1170     0196  2998               	goto	u151
  1171     0197  2999               	goto	u150
  1172     0198                     u151:
  1173     0198  2994               	goto	l70
  1174     0199                     u150:
  1175     0199                     l876:
  1176                           
  1177                           ;main.c: 64:     TXREG = data;
  1178     0199  0872               	movf	EUSART_Write@data,w
  1179     019A  0023               	movlb	3	; select bank3
  1180     019B  009A               	movwf	26	;volatile
  1181     019C                     l73:
  1182     019C  0008               	return
  1183     019D                     __end_of_EUSART_Write:
  1184                           
  1185                           	psect	text4
  1186     0187                     __ptext4:	
  1187 ;; *************** function _EUSART_Init *****************
  1188 ;; Defined at:
  1189 ;;		line 45 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1207 ;;Total ram usage:        0 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217     0187                     _EUSART_Init:	
  1218                           ;psect for function _EUSART_Init
  1219                           
  1220     0187                     l860:	
  1221                           ;incstack = 0
  1222                           ; Regs used in _EUSART_Init: [wreg]
  1223                           
  1224                           
  1225                           ;main.c: 47:     SPBRGH = 0x34;
  1226     0187  3034               	movlw	52
  1227     0188  0023               	movlb	3	; select bank3
  1228     0189  009C               	movwf	28	;volatile
  1229                           
  1230                           ;main.c: 48:     SPBRGL = 0x10;
  1231     018A  3010               	movlw	16
  1232     018B  009B               	movwf	27	;volatile
  1233     018C                     l862:
  1234                           
  1235                           ;main.c: 51:     TXSTAbits.SYNC = 0;
  1236     018C  121E               	bcf	30,4	;volatile
  1237     018D                     l864:
  1238                           
  1239                           ;main.c: 52:     TXSTAbits.BRGH = 1;
  1240     018D  151E               	bsf	30,2	;volatile
  1241     018E                     l866:
  1242                           
  1243                           ;main.c: 53:     BAUDCONbits.BRG16 = 1;
  1244     018E  159F               	bsf	31,3	;volatile
  1245     018F                     l868:
  1246                           
  1247                           ;main.c: 54:     RCSTAbits.SPEN = 1;
  1248     018F  179D               	bsf	29,7	;volatile
  1249     0190                     l870:
  1250                           
  1251                           ;main.c: 57:     TXSTAbits.TXEN = 1;
  1252     0190  169E               	bsf	30,5	;volatile
  1253     0191                     l872:
  1254                           
  1255                           ;main.c: 58:     RCSTAbits.CREN = 1;
  1256     0191  161D               	bsf	29,4	;volatile
  1257     0192                     l67:
  1258     0192  0008               	return
  1259     0193                     __end_of_EUSART_Init:
  1260                           
  1261                           	psect	intentry
  1262     0004                     __pintentry:	
  1263 ;; *************** function _ISR *****************
  1264 ;; Defined at:
  1265 ;;		line 70 in file "main.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  2   77[None  ] int 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1283 ;;Total ram usage:        2 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		Interrupt level 1
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292     0004                     _ISR:
  1293                           
  1294                           ;incstack = 0
  1295     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1296                           
  1297                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  1298     0005  3180               	pagesel	$
  1299     0006                     i1l902:
  1300                           
  1301                           ;main.c: 71:     LATAbits.LATA1 = 0;
  1302     0006  0022               	movlb	2	; select bank2
  1303     0007  108C               	bcf	12,1	;volatile
  1304     0008                     i1l904:
  1305                           
  1306                           ;main.c: 72:     rxdChar[num] = RCREG;
  1307     0008  0879               	movf	_num,w
  1308     0009  3E24               	addlw	(low (_rxdChar| 0))& (0+255)
  1309     000A  0086               	movwf	6
  1310     000B  0187               	clrf	7
  1311     000C  0023               	movlb	3	; select bank3
  1312     000D  0819               	movf	25,w	;volatile
  1313     000E  0081               	movwf	1
  1314     000F                     i1l906:
  1315                           
  1316                           ;main.c: 73:     num++;
  1317     000F  3001               	movlw	1
  1318     0010  07F9               	addwf	_num,f
  1319     0011  3000               	movlw	0
  1320     0012  3DFA               	addwfc	_num+1,f
  1321     0013                     i1l908:
  1322                           
  1323                           ;main.c: 74:     if (rxdChar == '\n' || rxdChar == '\r' || num >= 16) {
  1324     0013  300A               	movlw	10
  1325     0014  00F0               	movwf	??_ISR
  1326     0015  3000               	movlw	0
  1327     0016  00F1               	movwf	??_ISR+1
  1328     0017  3000               	movlw	0
  1329     0018  0671               	xorwf	??_ISR+1,w
  1330     0019  1D03               	skipz
  1331     001A  281D               	goto	u19_25
  1332     001B  3024               	movlw	low (_rxdChar| 0)
  1333     001C  0670               	xorwf	??_ISR,w
  1334     001D                     u19_25:
  1335     001D  1903               	skipnz
  1336     001E  2820               	goto	u19_21
  1337     001F  2821               	goto	u19_20
  1338     0020                     u19_21:
  1339     0020  283C               	goto	i1l914
  1340     0021                     u19_20:
  1341     0021                     i1l910:
  1342     0021  300D               	movlw	13
  1343     0022  00F0               	movwf	??_ISR
  1344     0023  3000               	movlw	0
  1345     0024  00F1               	movwf	??_ISR+1
  1346     0025  3000               	movlw	0
  1347     0026  0671               	xorwf	??_ISR+1,w
  1348     0027  1D03               	skipz
  1349     0028  282B               	goto	u20_25
  1350     0029  3024               	movlw	low (_rxdChar| 0)
  1351     002A  0670               	xorwf	??_ISR,w
  1352     002B                     u20_25:
  1353     002B  1903               	skipnz
  1354     002C  282E               	goto	u20_21
  1355     002D  282F               	goto	u20_20
  1356     002E                     u20_21:
  1357     002E  283C               	goto	i1l914
  1358     002F                     u20_20:
  1359     002F                     i1l912:
  1360     002F  087A               	movf	_num+1,w
  1361     0030  3A80               	xorlw	128
  1362     0031  00F0               	movwf	??_ISR
  1363     0032  3080               	movlw	128
  1364     0033  0270               	subwf	??_ISR,w
  1365     0034  1D03               	skipz
  1366     0035  2838               	goto	u21_25
  1367     0036  3010               	movlw	16
  1368     0037  0279               	subwf	_num,w
  1369     0038                     u21_25:
  1370     0038  1C03               	skipc
  1371     0039  283B               	goto	u21_21
  1372     003A  283C               	goto	u21_20
  1373     003B                     u21_21:
  1374     003B  2845               	goto	i1l81
  1375     003C                     u21_20:
  1376     003C                     i1l914:
  1377                           
  1378                           ;main.c: 75:             num = 0;
  1379     003C  01F9               	clrf	_num
  1380     003D  01FA               	clrf	_num+1
  1381     003E                     i1l916:
  1382                           
  1383                           ;main.c: 76:             readData=1;
  1384     003E  3001               	movlw	1
  1385     003F  0020               	movlb	0	; select bank0
  1386     0040  00A2               	movwf	_readData
  1387     0041  3000               	movlw	0
  1388     0042  00A3               	movwf	_readData+1
  1389     0043                     i1l918:
  1390                           
  1391                           ;main.c: 77:             RCSTAbits.CREN = 0;
  1392     0043  0023               	movlb	3	; select bank3
  1393     0044  121D               	bcf	29,4	;volatile
  1394     0045                     i1l81:
  1395     0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1396     0046  0009               	retfie
  1397     0047                     __end_of_ISR:
  1398     007E                     btemp	set	126	;btemp
  1399     007E                     int$flags	set	126
  1400     007E                     wtemp0	set	126
  1401                           
  1402                           	psect	config
  1403                           
  1404                           ;Config register CONFIG1 @ 0x8007
  1405                           ;	Oscillator Selection
  1406                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  1407                           ;	Watchdog Timer Enable
  1408                           ;	WDTE = OFF, WDT disabled
  1409                           ;	Power-up Timer Enable
  1410                           ;	PWRTE = OFF, PWRT disabled
  1411                           ;	MCLR Pin Function Select
  1412                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1413                           ;	Flash Program Memory Code Protection
  1414                           ;	CP = OFF, Program memory code protection is disabled
  1415                           ;	Data Memory Code Protection
  1416                           ;	CPD = 0x1, unprogrammed default
  1417                           ;	Brown-out Reset Enable
  1418                           ;	BOREN = ON, Brown-out Reset enabled
  1419                           ;	Clock Out Enable
  1420                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1421                           ;	Internal/External Switchover
  1422                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1423                           ;	Fail-Safe Clock Monitor Enable
  1424                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1425     8007                     	org	32775
  1426     8007  3FE2               	dw	16354

Data Sizes:
    Strings     0
    Constant    0
    Data        19
    BSS         32
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      6      54
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strcmp@l	PTR const unsigned char  size(1) Largest target is 17
		 -> exp(BANK0[17]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 25
		 -> rxdChar(BANK0[25]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 25
		 -> rxdChar(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 25
		 -> rxdChar(BANK0[25]), 


Critical Paths under _main in COMMON

    _main->_strlen

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     458
                                              7 COMMON     2     2      0
                                              0 BANK0      6     6      0
                        _EUSART_Init
                       _EUSART_Write
                             _strcmp
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     123
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               4     2      2     221
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Init
   _EUSART_Write
   _strcmp
   _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      36       5       67.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      42      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      42      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jul 24 21:44:14 2025

                     l70 0194                       l73 019C                       l67 0192  
                     l91 0092                       l94 00B2                       l88 00C9  
                     l97 00D7                      l100 0115                      l101 012A  
                    l724 0173                      l718 015C                      l920 0064  
                    l930 0074                      l922 006D                      l860 0187  
                    l940 008D                      l932 0076                      l924 0070  
                    l870 0190                      l862 018C                      l950 00AD  
                    l942 0097                      l934 0079                      l926 0071  
                    l872 0191                      l864 018D                      l880 0161  
                    l960 00BB                      l952 00B1                      l944 009F  
                    l936 0080                      l928 0072                      l866 018E  
                    l874 0194                      l890 0134                      l882 0165  
                    l970 00E1                      l962 00C0                      l954 00B5  
                    l946 00A7                      l938 0089                      l868 018F  
                    l876 0199                      l892 0138                      l884 016D  
                    l980 00FE                      l972 00E9                      l964 00C1  
                    l956 00B9                      l948 00AB                      l894 013C  
                    l878 015E                      l990 0128                      l982 0103  
                    l974 00ED                      l966 00D9                      l958 00BA  
                    l896 0148                      l888 0133                      l992 012C  
                    l976 00EE                      l984 0107                      l968 00DE  
                    l898 0150                      l986 0117                      l978 00F2  
                    l988 0122                      u220 0080                      u221 007F  
                    u150 0199                      u230 0097                      u151 0198  
                    u231 0096                      u160 016D                      u240 00B1  
                    u161 016C                      u241 00B0                      u170 0148  
                    u250 00C0                      u171 0147                      u251 00BF  
                    u180 0150                      u260 00D7                      u181 014F  
                    u261 00D6                      u270 0115                      u271 0114  
                    u280 0128                      u281 0127                      u265 00D3  
                    u275 0111                      _ISR 0004                      u297 00F7  
                    _loc 0020                      _exp 003F                      _val 007B  
                    _num 0079                      wreg 0009             ?_EUSART_Init 0070  
                   ?_ISR 0070                     i1l81 0045                     _main 0064  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0047                    ??_ISR 0070  
          ?_EUSART_Write 0070                    ?_main 0070                    _EEADR 0191  
                  i1l910 0021                    i1l902 0006                    i1l912 002F  
                  i1l904 0008                    i1l914 003C                    i1l906 000F  
                  i1l916 003E                    i1l908 0013                    i1l918 0043  
                  _RCREG 0199                    u20_20 002F                    u20_21 002E  
                  u20_25 002B                    u21_20 003C                    u21_21 003B  
                  u21_25 0038                    u19_20 0021                    u19_21 0020  
                  u19_25 001D                    _TXREG 019A                    status 0003  
                  wtemp0 007E          __initialization 0049             __end_of_main 0132  
         ??_EUSART_Write 0072                   ??_main 0077                   _EEDATA 0193  
                 _EECON1 0195                   _EECON2 0196                   _SPBRGH 019C  
                 _SPBRGL 019B                   _strcmp 0132                   _strlen 015D  
__end_of__initialization 0060           __pcstackCOMMON 0070             __pidataBANK0 0174  
             __pbssBANK0 0020     __end_of_EUSART_Write 019D               __pmaintext 0064  
             __pintentry 0004                  ?_strcmp 0072                  ?_strlen 0072  
                _CPSCON0 001E                  _CPSCON1 001F                  __ptext1 015D  
                __ptext2 0132                  __ptext3 0193                  __ptext4 0187  
                _rxdChar 0024                  main@cmp 0050                  clrloop0 01A4  
   end_of_initialization 0060                  init_ram 019D                  initloop 019E  
              _RCSTAbits 019D                  strcmp@l 0075                  strcmp@r 0072  
                strlen@a 0075                  strlen@s 0076                _TRISAbits 008C  
              _TRISBbits 008D               _start_addr 003D                _TXSTAbits 019E  
             main@length 0054              _BAUDCONbits 019F             _EUSART_Write 0193  
         __end_of_strcmp 015D           __end_of_strlen 0174      start_initialization 0049  
            __end_of_ISR 0047            ??_EUSART_Init 0072              __pdataBANK0 003D  
               ??_strcmp 0074                 ??_strlen 0074              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0050      __end_of_EUSART_Init 0193  
               _LATAbits 010C                clear_ram0 01A3                 _PIE1bits 0091  
               _PIR1bits 0011         EUSART_Write@data 0072                main@count 0052  
            _EUSART_Init 0187               _EECON1bits 0195               _ANSELBbits 018D  
               _readData 0022                 int$flags 007E               _INTCONbits 000B  
               intlevel1 0000               _STATUSbits 0003  
