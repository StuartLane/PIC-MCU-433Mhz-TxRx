

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Aug  2 08:12:59 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1847
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Generated 07/09/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1847 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     0111                     	;# 
   113     0112                     	;# 
   114     0113                     	;# 
   115     0114                     	;# 
   116     0115                     	;# 
   117     0116                     	;# 
   118     0117                     	;# 
   119     0118                     	;# 
   120     0119                     	;# 
   121     011A                     	;# 
   122     011B                     	;# 
   123     011D                     	;# 
   124     011E                     	;# 
   125     018C                     	;# 
   126     018D                     	;# 
   127     0191                     	;# 
   128     0191                     	;# 
   129     0192                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0194                     	;# 
   134     0195                     	;# 
   135     0196                     	;# 
   136     0199                     	;# 
   137     019A                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019B                     	;# 
   142     019C                     	;# 
   143     019C                     	;# 
   144     019D                     	;# 
   145     019E                     	;# 
   146     019F                     	;# 
   147     020C                     	;# 
   148     020D                     	;# 
   149     0211                     	;# 
   150     0211                     	;# 
   151     0212                     	;# 
   152     0212                     	;# 
   153     0213                     	;# 
   154     0213                     	;# 
   155     0214                     	;# 
   156     0214                     	;# 
   157     0215                     	;# 
   158     0215                     	;# 
   159     0215                     	;# 
   160     0216                     	;# 
   161     0216                     	;# 
   162     0217                     	;# 
   163     0217                     	;# 
   164     0219                     	;# 
   165     021A                     	;# 
   166     021B                     	;# 
   167     021C                     	;# 
   168     021D                     	;# 
   169     021E                     	;# 
   170     021F                     	;# 
   171     0291                     	;# 
   172     0291                     	;# 
   173     0292                     	;# 
   174     0293                     	;# 
   175     0294                     	;# 
   176     0295                     	;# 
   177     0295                     	;# 
   178     0296                     	;# 
   179     0298                     	;# 
   180     0298                     	;# 
   181     0299                     	;# 
   182     029A                     	;# 
   183     029B                     	;# 
   184     029C                     	;# 
   185     029C                     	;# 
   186     029D                     	;# 
   187     029E                     	;# 
   188     029E                     	;# 
   189     0311                     	;# 
   190     0311                     	;# 
   191     0312                     	;# 
   192     0313                     	;# 
   193     0318                     	;# 
   194     0318                     	;# 
   195     0319                     	;# 
   196     031A                     	;# 
   197     0394                     	;# 
   198     0395                     	;# 
   199     0396                     	;# 
   200     039A                     	;# 
   201     039C                     	;# 
   202     039D                     	;# 
   203     039E                     	;# 
   204     039F                     	;# 
   205     0415                     	;# 
   206     0416                     	;# 
   207     0417                     	;# 
   208     041C                     	;# 
   209     041D                     	;# 
   210     041E                     	;# 
   211     0FE4                     	;# 
   212     0FE5                     	;# 
   213     0FE6                     	;# 
   214     0FE7                     	;# 
   215     0FE8                     	;# 
   216     0FE9                     	;# 
   217     0FEA                     	;# 
   218     0FEB                     	;# 
   219     0FED                     	;# 
   220     0FEE                     	;# 
   221     0FEF                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0014                     	;# 
   240     0015                     	;# 
   241     0016                     	;# 
   242     0016                     	;# 
   243     0017                     	;# 
   244     0018                     	;# 
   245     0019                     	;# 
   246     001A                     	;# 
   247     001B                     	;# 
   248     001C                     	;# 
   249     001E                     	;# 
   250     001F                     	;# 
   251     008C                     	;# 
   252     008D                     	;# 
   253     0091                     	;# 
   254     0092                     	;# 
   255     0093                     	;# 
   256     0094                     	;# 
   257     0095                     	;# 
   258     0096                     	;# 
   259     0097                     	;# 
   260     0098                     	;# 
   261     0099                     	;# 
   262     009A                     	;# 
   263     009B                     	;# 
   264     009B                     	;# 
   265     009C                     	;# 
   266     009D                     	;# 
   267     009E                     	;# 
   268     010C                     	;# 
   269     010D                     	;# 
   270     0111                     	;# 
   271     0112                     	;# 
   272     0113                     	;# 
   273     0114                     	;# 
   274     0115                     	;# 
   275     0116                     	;# 
   276     0117                     	;# 
   277     0118                     	;# 
   278     0119                     	;# 
   279     011A                     	;# 
   280     011B                     	;# 
   281     011D                     	;# 
   282     011E                     	;# 
   283     018C                     	;# 
   284     018D                     	;# 
   285     0191                     	;# 
   286     0191                     	;# 
   287     0192                     	;# 
   288     0193                     	;# 
   289     0193                     	;# 
   290     0193                     	;# 
   291     0194                     	;# 
   292     0195                     	;# 
   293     0196                     	;# 
   294     0199                     	;# 
   295     019A                     	;# 
   296     019B                     	;# 
   297     019B                     	;# 
   298     019B                     	;# 
   299     019B                     	;# 
   300     019C                     	;# 
   301     019C                     	;# 
   302     019D                     	;# 
   303     019E                     	;# 
   304     019F                     	;# 
   305     020C                     	;# 
   306     020D                     	;# 
   307     0211                     	;# 
   308     0211                     	;# 
   309     0212                     	;# 
   310     0212                     	;# 
   311     0213                     	;# 
   312     0213                     	;# 
   313     0214                     	;# 
   314     0214                     	;# 
   315     0215                     	;# 
   316     0215                     	;# 
   317     0215                     	;# 
   318     0216                     	;# 
   319     0216                     	;# 
   320     0217                     	;# 
   321     0217                     	;# 
   322     0219                     	;# 
   323     021A                     	;# 
   324     021B                     	;# 
   325     021C                     	;# 
   326     021D                     	;# 
   327     021E                     	;# 
   328     021F                     	;# 
   329     0291                     	;# 
   330     0291                     	;# 
   331     0292                     	;# 
   332     0293                     	;# 
   333     0294                     	;# 
   334     0295                     	;# 
   335     0295                     	;# 
   336     0296                     	;# 
   337     0298                     	;# 
   338     0298                     	;# 
   339     0299                     	;# 
   340     029A                     	;# 
   341     029B                     	;# 
   342     029C                     	;# 
   343     029C                     	;# 
   344     029D                     	;# 
   345     029E                     	;# 
   346     029E                     	;# 
   347     0311                     	;# 
   348     0311                     	;# 
   349     0312                     	;# 
   350     0313                     	;# 
   351     0318                     	;# 
   352     0318                     	;# 
   353     0319                     	;# 
   354     031A                     	;# 
   355     0394                     	;# 
   356     0395                     	;# 
   357     0396                     	;# 
   358     039A                     	;# 
   359     039C                     	;# 
   360     039D                     	;# 
   361     039E                     	;# 
   362     039F                     	;# 
   363     0415                     	;# 
   364     0416                     	;# 
   365     0417                     	;# 
   366     041C                     	;# 
   367     041D                     	;# 
   368     041E                     	;# 
   369     0FE4                     	;# 
   370     0FE5                     	;# 
   371     0FE6                     	;# 
   372     0FE7                     	;# 
   373     0FE8                     	;# 
   374     0FE9                     	;# 
   375     0FEA                     	;# 
   376     0FEB                     	;# 
   377     0FED                     	;# 
   378     0FEE                     	;# 
   379     0FEF                     	;# 
   380                           
   381                           	psect	idataBANK1
   382     0220                     __pidataBANK1:
   383                           
   384                           ;initializer for _exp
   385     0220  344C               	retlw	76
   386     0221  3461               	retlw	97
   387     0222  346E               	retlw	110
   388     0223  3465               	retlw	101
   389     0224  344C               	retlw	76
   390     0225  3469               	retlw	105
   391     0226  3467               	retlw	103
   392     0227  3468               	retlw	104
   393     0228  3474               	retlw	116
   394     0229  3473               	retlw	115
   395     022A  3430               	retlw	48
   396     022B  3431               	retlw	49
   397     022C  340A               	retlw	10
   398     022D  340D               	retlw	13
   399     022E  3420               	retlw	32
   400     022F  3420               	retlw	32
   401     0230  3400               	retlw	0
   402                           
   403                           	psect	nvCOMMON
   404     007A                     __pnvCOMMON:
   405     007A                     _start_addr:
   406     007A                     	ds	2
   407                           
   408                           	psect	nvBANK0
   409     0069                     __pnvBANK0:
   410     0069                     _index:
   411     0069                     	ds	1
   412     000D                     _PORTBbits	set	13
   413     001F                     _CPSCON1	set	31
   414     001E                     _CPSCON0	set	30
   415     000B                     _INTCONbits	set	11
   416     0011                     _PIR1bits	set	17
   417     0091                     _PIE1bits	set	145
   418     008D                     _TRISBbits	set	141
   419     008C                     _TRISAbits	set	140
   420     010C                     _LATAbits	set	268
   421     0191                     _EEADR	set	401
   422     018D                     _ANSELBbits	set	397
   423     0196                     _EECON2	set	406
   424     0195                     _EECON1bits	set	405
   425     0193                     _EEDATA	set	403
   426     0199                     _RCREG	set	409
   427     019A                     _TXREG	set	410
   428     019D                     _RCSTAbits	set	413
   429     019F                     _BAUDCONbits	set	415
   430     019E                     _TXSTAbits	set	414
   431     019B                     _SPBRGL	set	411
   432     019C                     _SPBRGH	set	412
   433                           
   434                           	psect	cinit
   435     0048                     start_initialization:	
   436                           ; #config settings
   437                           
   438     0048                     __initialization:
   439                           
   440                           ; Initialize objects allocated to BANK1
   441     0048  3020               	movlw	low __pidataBANK1
   442     0049  0084               	movwf	4
   443     004A  3082               	movlw	(high __pidataBANK1)| (0+128)
   444     004B  0085               	movwf	5
   445     004C  30D0               	movlw	low __pdataBANK1
   446     004D  0086               	movwf	6
   447     004E  3000               	movlw	high __pdataBANK1
   448     004F  0087               	movwf	7
   449     0050  3011               	movlw	17
   450     0051  3182  2251  3180   	fcall	init_ram
   451                           
   452                           ; Clear objects allocated to COMMON
   453     0054  01F7               	clrf	__pbssCOMMON& (0+127)
   454     0055  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   455     0056  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   456                           
   457                           ; Clear objects allocated to BANK0
   458     0057  3020               	movlw	low __pbssBANK0
   459     0058  0084               	movwf	4
   460     0059  3000               	movlw	high __pbssBANK0
   461     005A  0085               	movwf	5
   462     005B  303F               	movlw	63
   463     005C  3182  2257  3180   	fcall	clear_ram0
   464                           
   465                           ; Clear objects allocated to BANK1
   466     005F  30A0               	movlw	low __pbssBANK1
   467     0060  0084               	movwf	4
   468     0061  3000               	movlw	high __pbssBANK1
   469     0062  0085               	movwf	5
   470     0063  3030               	movlw	48
   471     0064  3182  2257  3180   	fcall	clear_ram0
   472     0067                     end_of_initialization:	
   473                           ;End of C runtime variable initialization code
   474                           
   475     0067                     __end_of__initialization:
   476     0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   477     0068  0020               	movlb	0
   478     0069  3180  286B         	ljmp	_main	;jump to C main() function
   479                           
   480                           	psect	bssCOMMON
   481     0077                     __pbssCOMMON:
   482     0077                     _num:
   483     0077                     	ds	2
   484     0079                     _val:
   485     0079                     	ds	1
   486                           
   487                           	psect	bssBANK0
   488     0020                     __pbssBANK0:
   489     0020                     _id1:
   490     0020                     	ds	16
   491     0030                     _id0:
   492     0030                     	ds	16
   493     0040                     _outputStatus:
   494     0040                     	ds	2
   495     0042                     _loc:
   496     0042                     	ds	2
   497     0044                     _readData:
   498     0044                     	ds	2
   499     0046                     _rxdChar:
   500     0046                     	ds	25
   501                           
   502                           	psect	bssBANK1
   503     00A0                     __pbssBANK1:
   504     00A0                     _id3:
   505     00A0                     	ds	16
   506     00B0                     _id2:
   507     00B0                     	ds	16
   508     00C0                     _idChar:
   509     00C0                     	ds	16
   510                           
   511                           	psect	dataBANK1
   512     00D0                     __pdataBANK1:
   513     00D0                     _exp:
   514     00D0                     	ds	17
   515                           
   516                           	psect	inittext
   517     0251                     init_ram:
   518     0251  00FE               	movwf	btemp
   519     0252                     initloop:
   520     0252  0012               	moviw fsr0++
   521     0253  001E               	movwi fsr1++
   522     0254  0BFE               	decfsz	btemp,f
   523     0255  2A52               	goto	initloop
   524     0256  3400               	retlw	0
   525                           
   526                           	psect	clrtext
   527     0257                     clear_ram0:	
   528                           ;	Called with FSR0 containing the base address, and
   529                           ;	WREG with the size to clear
   530                           
   531     0257  0064               	clrwdt	;clear the watchdog before getting into this loop
   532     0258                     clrloop0:
   533     0258  0180               	clrf	0	;clear RAM location pointed to by FSR
   534     0259  3101               	addfsr 0,1
   535     025A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   536     025B  2A58               	goto	clrloop0	;have we reached the end yet?
   537     025C  3400               	retlw	0	;all done for this memory range, return
   538                           
   539                           	psect	cstackCOMMON
   540     0070                     __pcstackCOMMON:
   541     0070                     ??_read_d:
   542     0070                     ?_EUSART_Init:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_EUSART_Write:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ??_ISR:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_main:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_read_d:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_ISR:	
   558                           ; 2 bytes @ 0x0
   559                           
   560     0070                     ?_set_index0:	
   561                           ; 2 bytes @ 0x0
   562                           
   563     0070                     ?_set_index1:	
   564                           ; 2 bytes @ 0x0
   565                           
   566     0070                     ?_set_index2:	
   567                           ; 2 bytes @ 0x0
   568                           
   569     0070                     ?_set_index3:	
   570                           ; 2 bytes @ 0x0
   571                           
   572                           
   573                           ; 2 bytes @ 0x0
   574     0070                     	ds	2
   575     0072                     ??_EUSART_Init:
   576     0072                     ??_EUSART_Write:	
   577                           ; 1 bytes @ 0x2
   578                           
   579     0072                     ?_strlen:	
   580                           ; 1 bytes @ 0x2
   581                           
   582     0072                     ?_add_id:	
   583                           ; 2 bytes @ 0x2
   584                           
   585     0072                     ?_read_id:	
   586                           ; 2 bytes @ 0x2
   587                           
   588     0072                     EUSART_Write@data:	
   589                           ; 2 bytes @ 0x2
   590                           
   591     0072                     add_id@start_addr:	
   592                           ; 1 bytes @ 0x2
   593                           
   594     0072                     read_id@start_addr:	
   595                           ; 2 bytes @ 0x2
   596                           
   597                           
   598                           ; 2 bytes @ 0x2
   599     0072                     	ds	2
   600     0074                     ??_strlen:
   601     0074                     ??_read_id:	
   602                           ; 1 bytes @ 0x4
   603                           
   604     0074                     ??_set_index0:	
   605                           ; 1 bytes @ 0x4
   606                           
   607     0074                     ??_set_index1:	
   608                           ; 1 bytes @ 0x4
   609                           
   610     0074                     ??_set_index2:	
   611                           ; 1 bytes @ 0x4
   612                           
   613     0074                     ??_set_index3:	
   614                           ; 1 bytes @ 0x4
   615                           
   616     0074                     add_id@rxdData:	
   617                           ; 1 bytes @ 0x4
   618                           
   619                           
   620                           ; 1 bytes @ 0x4
   621     0074                     	ds	1
   622     0075                     ??_add_id:
   623     0075                     set_index0@id_set:	
   624                           ; 1 bytes @ 0x5
   625                           
   626     0075                     set_index1@id_set:	
   627                           ; 1 bytes @ 0x5
   628                           
   629     0075                     set_index2@id_set:	
   630                           ; 1 bytes @ 0x5
   631                           
   632     0075                     set_index3@id_set:	
   633                           ; 1 bytes @ 0x5
   634                           
   635     0075                     strlen@a:	
   636                           ; 1 bytes @ 0x5
   637                           
   638                           
   639                           ; 1 bytes @ 0x5
   640     0075                     	ds	1
   641     0076                     strlen@s:
   642                           
   643                           ; 1 bytes @ 0x6
   644     0076                     	ds	1
   645                           
   646                           	psect	cstackBANK0
   647     005F                     __pcstackBANK0:
   648     005F                     ??_main:
   649                           
   650                           ; 1 bytes @ 0x0
   651     005F                     	ds	2
   652     0061                     main@length_461:
   653                           
   654                           ; 2 bytes @ 0x2
   655     0061                     	ds	2
   656     0063                     main@length:
   657                           
   658                           ; 1 bytes @ 0x4
   659     0063                     	ds	1
   660     0064                     main@rxdData:
   661                           
   662                           ; 1 bytes @ 0x5
   663     0064                     	ds	1
   664     0065                     main@count:
   665                           
   666                           ; 2 bytes @ 0x6
   667     0065                     	ds	2
   668     0067                     main@count_462:
   669                           
   670                           ; 2 bytes @ 0x8
   671     0067                     	ds	2
   672                           
   673                           	psect	maintext
   674     006B                     __pmaintext:	
   675 ;;
   676 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   677 ;;
   678 ;; *************** function _main *****************
   679 ;; Defined at:
   680 ;;		line 157 in file "main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  rxdData         1    5[BANK0 ] unsigned char 
   685 ;;  count           2    8[BANK0 ] int 
   686 ;;  count           2    6[BANK0 ] int 
   687 ;;  length          2    2[BANK0 ] int 
   688 ;;  length          1    4[BANK0 ] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : B1F/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   699 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
   700 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   701 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   702 ;;Total ram usage:       10 bytes
   703 ;; Hardware stack levels required when called: 3
   704 ;; This function calls:
   705 ;;		_EUSART_Init
   706 ;;		_EUSART_Write
   707 ;;		_add_id
   708 ;;		_read_d
   709 ;;		_read_id
   710 ;;		_set_index0
   711 ;;		_set_index1
   712 ;;		_set_index2
   713 ;;		_set_index3
   714 ;;		_strlen
   715 ;; This function is called by:
   716 ;;		Startup code after reset
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720     006B                     _main:	
   721                           ;psect for function _main
   722                           
   723     006B                     l1226:	
   724                           ;incstack = 0
   725                           ; Regs used in _main: [allreg]
   726                           
   727                           
   728                           ;main.c: 158:     TRISAbits.TRISA1 = 0;
   729     006B  0021               	movlb	1	; select bank1
   730     006C  108C               	bcf	12,1	;volatile
   731                           
   732                           ;main.c: 159:     TRISBbits.TRISB1 = 1;
   733     006D  148D               	bsf	13,1	;volatile
   734                           
   735                           ;main.c: 160:     TRISBbits.TRISB2 = 0;
   736     006E  110D               	bcf	13,2	;volatile
   737                           
   738                           ;main.c: 161:     TRISBbits.TRISB0 = 1;
   739     006F  140D               	bsf	13,0	;volatile
   740                           
   741                           ;main.c: 162:     LATAbits.LATA1 = 0;
   742     0070  0022               	movlb	2	; select bank2
   743     0071  108C               	bcf	12,1	;volatile
   744                           
   745                           ;main.c: 163:     ANSELBbits.ANSB2 = 0;
   746     0072  0023               	movlb	3	; select bank3
   747     0073  110D               	bcf	13,2	;volatile
   748                           
   749                           ;main.c: 164:     ANSELBbits.ANSB1 = 0;
   750     0074  108D               	bcf	13,1	;volatile
   751     0075                     l1228:
   752                           
   753                           ;main.c: 165:     CPSCON0 = 0x00;
   754     0075  0020               	movlb	0	; select bank0
   755     0076  019E               	clrf	30	;volatile
   756                           
   757                           ;main.c: 166:     CPSCON1 = 0x00;
   758     0077  019F               	clrf	31	;volatile
   759     0078                     l1230:
   760                           
   761                           ;main.c: 168:     INTCONbits.GIE = 1;
   762     0078  178B               	bsf	11,7	;volatile
   763     0079                     l1232:
   764                           
   765                           ;main.c: 169:     INTCONbits.PEIE = 1;
   766     0079  170B               	bsf	11,6	;volatile
   767     007A                     l1234:
   768                           
   769                           ;main.c: 170:     PIE1bits.RCIE = 1;
   770     007A  0021               	movlb	1	; select bank1
   771     007B  1691               	bsf	17,5	;volatile
   772     007C                     l1236:
   773                           
   774                           ;main.c: 171:     RCSTAbits.CREN = 1;
   775     007C  0023               	movlb	3	; select bank3
   776     007D  161D               	bsf	29,4	;volatile
   777     007E                     l1238:
   778                           
   779                           ;main.c: 174:     EUSART_Init();
   780     007E  3182  2231  3180   	fcall	_EUSART_Init
   781     0081                     l1240:
   782                           
   783                           ;main.c: 176:     start_addr = 0x41;
   784     0081  3041               	movlw	65
   785     0082  00FA               	movwf	_start_addr
   786     0083  3000               	movlw	0
   787     0084  00FB               	movwf	_start_addr+1
   788     0085                     l1242:
   789                           
   790                           ;main.c: 177:     read_d(start_addr);
   791     0085  087B               	movf	_start_addr+1,w
   792     0086  00F1               	movwf	?_read_d+1
   793     0087  087A               	movf	_start_addr,w
   794     0088  00F0               	movwf	?_read_d
   795     0089  3180  2000  3180   	fcall	_read_d
   796     008C                     l1244:
   797                           
   798                           ;main.c: 178:     index=EEDATA;
   799     008C  0023               	movlb	3	; select bank3
   800     008D  0813               	movf	19,w	;volatile
   801     008E  0020               	movlb	0	; select bank0
   802     008F  00E9               	movwf	_index
   803     0090                     l1246:
   804                           
   805                           ;main.c: 180:     if (index == 0){
   806     0090  0869               	movf	_index,w
   807     0091  1D03               	btfss	3,2
   808     0092  2894               	goto	u411
   809     0093  2895               	goto	u410
   810     0094                     u411:
   811     0094  2899               	goto	l1250
   812     0095                     u410:
   813     0095                     l1248:
   814                           
   815                           ;main.c: 181:         set_index0();
   816     0095  3181  21D2  3180   	fcall	_set_index0
   817                           
   818                           ;main.c: 182:     }
   819     0098  28C8               	goto	l1262
   820     0099                     l1250:
   821     0099  0369               	decf	_index,w
   822     009A  1D03               	btfss	3,2
   823     009B  289D               	goto	u421
   824     009C  289E               	goto	u420
   825     009D                     u421:
   826     009D  28A5               	goto	l1254
   827     009E                     u420:
   828     009E                     l1252:
   829                           
   830                           ;main.c: 184:         set_index0();
   831     009E  3181  21D2  3180   	fcall	_set_index0
   832                           
   833                           ;main.c: 185:         set_index1();
   834     00A1  3181  21B0  3180   	fcall	_set_index1
   835                           
   836                           ;main.c: 186:     }
   837     00A4  28C8               	goto	l1262
   838     00A5                     l1254:
   839     00A5  3002               	movlw	2
   840     00A6  0669               	xorwf	_index,w
   841     00A7  1D03               	btfss	3,2
   842     00A8  28AA               	goto	u431
   843     00A9  28AB               	goto	u430
   844     00AA                     u431:
   845     00AA  28B5               	goto	l1258
   846     00AB                     u430:
   847     00AB                     l1256:
   848                           
   849                           ;main.c: 188:         set_index0();
   850     00AB  3181  21D2  3180   	fcall	_set_index0
   851                           
   852                           ;main.c: 189:         set_index1();
   853     00AE  3181  21B0  3180   	fcall	_set_index1
   854                           
   855                           ;main.c: 190:         set_index2();
   856     00B1  3181  218E  3180   	fcall	_set_index2
   857                           
   858                           ;main.c: 191:     }
   859     00B4  28C8               	goto	l1262
   860     00B5                     l1258:
   861     00B5  3003               	movlw	3
   862     00B6  0669               	xorwf	_index,w
   863     00B7  1D03               	btfss	3,2
   864     00B8  28BA               	goto	u441
   865     00B9  28BB               	goto	u440
   866     00BA                     u441:
   867     00BA  28C8               	goto	l128
   868     00BB                     u440:
   869     00BB                     l1260:
   870                           
   871                           ;main.c: 193:         set_index0();
   872     00BB  3181  21D2  3180   	fcall	_set_index0
   873                           
   874                           ;main.c: 194:         set_index1();
   875     00BE  3181  21B0  3180   	fcall	_set_index1
   876                           
   877                           ;main.c: 195:         set_index2();
   878     00C1  3181  218E  3180   	fcall	_set_index2
   879                           
   880                           ;main.c: 196:         set_index3();
   881     00C4  3181  216C  3180   	fcall	_set_index3
   882     00C7  28C8               	goto	l1262
   883     00C8                     l128:
   884     00C8                     l1262:
   885                           
   886                           ;main.c: 203:         if (readData == 1) {
   887     00C8  0020               	movlb	0	; select bank0
   888     00C9  0344               	decf	_readData,w
   889     00CA  0445               	iorwf	_readData+1,w
   890     00CB  1D03               	btfss	3,2
   891     00CC  28CE               	goto	u451
   892     00CD  28CF               	goto	u450
   893     00CE                     u451:
   894     00CE  2929               	goto	l1296
   895     00CF                     u450:
   896     00CF                     l1264:
   897                           
   898                           ;main.c: 204:             TXSTAbits.TXEN = 1;
   899     00CF  0023               	movlb	3	; select bank3
   900     00D0  169E               	bsf	30,5	;volatile
   901     00D1                     l1266:
   902                           
   903                           ;main.c: 205:             uint8_t length = strlen(rxdChar);
   904     00D1  3046               	movlw	(low (_rxdChar| 0))& (0+255)
   905     00D2  3181  21F2  3180   	fcall	_strlen
   906     00D5  0872               	movf	?_strlen,w
   907     00D6  0020               	movlb	0	; select bank0
   908     00D7  00E3               	movwf	main@length
   909     00D8                     l1268:
   910                           
   911                           ;main.c: 206:             start_addr=0x00;
   912     00D8  01FA               	clrf	_start_addr
   913     00D9  01FB               	clrf	_start_addr+1
   914     00DA                     l1270:
   915                           
   916                           ;main.c: 207:                 for (int count=0; count<=length; count++){
   917     00DA  01E5               	clrf	main@count
   918     00DB  01E6               	clrf	main@count+1
   919     00DC  28FE               	goto	l1280
   920     00DD                     l1272:
   921                           
   922                           ;main.c: 208:                     read_id(start_addr);
   923     00DD  087B               	movf	_start_addr+1,w
   924     00DE  00F3               	movwf	read_id@start_addr+1
   925     00DF  087A               	movf	_start_addr,w
   926     00E0  00F2               	movwf	read_id@start_addr
   927     00E1  3182  223D  3180   	fcall	_read_id
   928                           
   929                           ;main.c: 209:                     EUSART_Write(EEDATA);
   930     00E4  0023               	movlb	3	; select bank3
   931     00E5  0813               	movf	19,w	;volatile
   932     00E6  3182  2247  3180   	fcall	_EUSART_Write
   933     00E9                     l1274:
   934                           
   935                           ;main.c: 211:                     _delay((unsigned long)((200)*(16000000/4000.0)));
   936     00E9  3005               	movlw	5
   937     00EA  0020               	movlb	0	; select bank0
   938     00EB  00E0               	movwf	??_main+1
   939     00EC  300F               	movlw	15
   940     00ED  00DF               	movwf	??_main
   941     00EE  30F1               	movlw	241
   942     00EF                     u517:
   943     00EF  0B89               	decfsz	9,f
   944     00F0  28EF               	goto	u517
   945     00F1  0BDF               	decfsz	??_main,f
   946     00F2  28EF               	goto	u517
   947     00F3  0BE0               	decfsz	??_main+1,f
   948     00F4  28EF               	goto	u517
   949     00F5                     l1276:
   950                           
   951                           ;main.c: 212:                     start_addr++;
   952     00F5  3001               	movlw	1
   953     00F6  07FA               	addwf	_start_addr,f
   954     00F7  3000               	movlw	0
   955     00F8  3DFB               	addwfc	_start_addr+1,f
   956     00F9                     l1278:
   957                           
   958                           ;main.c: 213:                 }
   959     00F9  3001               	movlw	1
   960     00FA  0020               	movlb	0	; select bank0
   961     00FB  07E5               	addwf	main@count,f
   962     00FC  3000               	movlw	0
   963     00FD  3DE6               	addwfc	main@count+1,f
   964     00FE                     l1280:
   965     00FE  0866               	movf	main@count+1,w
   966     00FF  3A80               	xorlw	128
   967     0100  3C80               	sublw	128
   968     0101  1D03               	skipz
   969     0102  2905               	goto	u465
   970     0103  0865               	movf	main@count,w
   971     0104  0263               	subwf	main@length,w
   972     0105                     u465:
   973     0105  1803               	skipnc
   974     0106  2908               	goto	u461
   975     0107  2909               	goto	u460
   976     0108                     u461:
   977     0108  28DD               	goto	l1272
   978     0109                     u460:
   979     0109                     l1282:
   980                           
   981                           ;main.c: 214:                 if (rxdChar[0,1,2,3,4,5,6,7,8,9,10,11,12] == id1[0,1,2,3,4
      +                          ,5,6,7,8,9,10,11,12]){
   982     0109  0020               	movlb	0	; select bank0
   983     010A  0852               	movf	_rxdChar+12,w
   984     010B  062C               	xorwf	_id1+12,w
   985     010C  1D03               	skipz
   986     010D  290F               	goto	u471
   987     010E  2910               	goto	u470
   988     010F                     u471:
   989     010F  2923               	goto	l1292
   990     0110                     u470:
   991     0110                     l1284:
   992                           
   993                           ;main.c: 215:                     if (outputStatus == 0){
   994     0110  0840               	movf	_outputStatus,w
   995     0111  0441               	iorwf	_outputStatus+1,w
   996     0112  1D03               	btfss	3,2
   997     0113  2915               	goto	u481
   998     0114  2916               	goto	u480
   999     0115                     u481:
  1000     0115  291E               	goto	l140
  1001     0116                     u480:
  1002     0116                     l1286:
  1003                           
  1004                           ;main.c: 216:                         LATAbits.LATA1 = 1;
  1005     0116  0022               	movlb	2	; select bank2
  1006     0117  148C               	bsf	12,1	;volatile
  1007     0118                     l1288:
  1008                           
  1009                           ;main.c: 217:                         outputStatus = 1;
  1010     0118  3001               	movlw	1
  1011     0119  0020               	movlb	0	; select bank0
  1012     011A  00C0               	movwf	_outputStatus
  1013     011B  3000               	movlw	0
  1014     011C  00C1               	movwf	_outputStatus+1
  1015                           
  1016                           ;main.c: 218:                     }
  1017     011D  2923               	goto	l1292
  1018     011E                     l140:	
  1019                           ;main.c: 219:                     else {
  1020                           
  1021                           
  1022                           ;main.c: 220:                         LATAbits.LATA1 = 0;
  1023     011E  0022               	movlb	2	; select bank2
  1024     011F  108C               	bcf	12,1	;volatile
  1025     0120                     l1290:
  1026                           
  1027                           ;main.c: 221:                         outputStatus = 0;
  1028     0120  0020               	movlb	0	; select bank0
  1029     0121  01C0               	clrf	_outputStatus
  1030     0122  01C1               	clrf	_outputStatus+1
  1031     0123                     l1292:
  1032                           
  1033                           ;main.c: 224:             TXSTAbits.TXEN = 0;
  1034     0123  0023               	movlb	3	; select bank3
  1035     0124  129E               	bcf	30,5	;volatile
  1036     0125                     l1294:
  1037                           
  1038                           ;main.c: 225:             RCSTAbits.CREN = 1;
  1039     0125  161D               	bsf	29,4	;volatile
  1040                           
  1041                           ;main.c: 226:             readData = 0;
  1042     0126  0020               	movlb	0	; select bank0
  1043     0127  01C4               	clrf	_readData
  1044     0128  01C5               	clrf	_readData+1
  1045     0129                     l1296:
  1046                           
  1047                           ;main.c: 230:         if (PORTBbits.RB0 == 1){
  1048     0129  1C0D               	btfss	13,0	;volatile
  1049     012A  292C               	goto	u491
  1050     012B  292D               	goto	u490
  1051     012C                     u491:
  1052     012C  28C8               	goto	l1262
  1053     012D                     u490:
  1054     012D                     l1298:
  1055                           
  1056                           ;main.c: 231:             LATAbits.LATA1 = 1;
  1057     012D  0022               	movlb	2	; select bank2
  1058     012E  148C               	bsf	12,1	;volatile
  1059     012F                     l1300:
  1060                           
  1061                           ;main.c: 233:                 int length = strlen(rxdChar);
  1062     012F  3046               	movlw	(low (_rxdChar| 0))& (0+255)
  1063     0130  3181  21F2  3180   	fcall	_strlen
  1064     0133  0873               	movf	?_strlen+1,w
  1065     0134  0020               	movlb	0	; select bank0
  1066     0135  00E2               	movwf	main@length_461+1
  1067     0136  0872               	movf	?_strlen,w
  1068     0137  00E1               	movwf	main@length_461
  1069     0138                     l1302:
  1070                           
  1071                           ;main.c: 234:                 start_addr=0x00;
  1072     0138  01FA               	clrf	_start_addr
  1073     0139  01FB               	clrf	_start_addr+1
  1074     013A                     l1304:
  1075                           
  1076                           ;main.c: 235:                 for (int count=0; count<=length; count++){
  1077     013A  01E7               	clrf	main@count_462
  1078     013B  01E8               	clrf	main@count_462+1
  1079     013C  2956               	goto	l1314
  1080     013D                     l1306:
  1081                           
  1082                           ;main.c: 236:                     char rxdData = rxdChar[count];
  1083     013D  0020               	movlb	0	; select bank0
  1084     013E  0867               	movf	main@count_462,w
  1085     013F  3E46               	addlw	(low (_rxdChar| 0))& (0+255)
  1086     0140  0086               	movwf	6
  1087     0141  0187               	clrf	7
  1088     0142  0801               	movf	1,w
  1089     0143  00E4               	movwf	main@rxdData
  1090     0144                     l1308:
  1091                           
  1092                           ;main.c: 237:                     add_id(start_addr, rxdData);
  1093     0144  087B               	movf	_start_addr+1,w
  1094     0145  00F3               	movwf	add_id@start_addr+1
  1095     0146  087A               	movf	_start_addr,w
  1096     0147  00F2               	movwf	add_id@start_addr
  1097     0148  0864               	movf	main@rxdData,w
  1098     0149  00F4               	movwf	add_id@rxdData
  1099     014A  3182  2209  3180   	fcall	_add_id
  1100     014D                     l1310:
  1101                           
  1102                           ;main.c: 238:                     start_addr++;
  1103     014D  3001               	movlw	1
  1104     014E  07FA               	addwf	_start_addr,f
  1105     014F  3000               	movlw	0
  1106     0150  3DFB               	addwfc	_start_addr+1,f
  1107     0151                     l1312:
  1108                           
  1109                           ;main.c: 239:                 }
  1110     0151  3001               	movlw	1
  1111     0152  0020               	movlb	0	; select bank0
  1112     0153  07E7               	addwf	main@count_462,f
  1113     0154  3000               	movlw	0
  1114     0155  3DE8               	addwfc	main@count_462+1,f
  1115     0156                     l1314:
  1116     0156  0862               	movf	main@length_461+1,w
  1117     0157  3A80               	xorlw	128
  1118     0158  00DF               	movwf	??_main
  1119     0159  0868               	movf	main@count_462+1,w
  1120     015A  3A80               	xorlw	128
  1121     015B  025F               	subwf	??_main,w
  1122     015C  1D03               	skipz
  1123     015D  2960               	goto	u505
  1124     015E  0867               	movf	main@count_462,w
  1125     015F  0261               	subwf	main@length_461,w
  1126     0160                     u505:
  1127     0160  1803               	skipnc
  1128     0161  2963               	goto	u501
  1129     0162  2964               	goto	u500
  1130     0163                     u501:
  1131     0163  293D               	goto	l1306
  1132     0164                     u500:
  1133     0164                     l145:
  1134                           
  1135                           ;main.c: 240:                 LATAbits.LATA1 = 0;
  1136     0164  0022               	movlb	2	; select bank2
  1137     0165  108C               	bcf	12,1	;volatile
  1138     0166                     l1316:
  1139                           
  1140                           ;main.c: 241:                 readData = 0;
  1141     0166  0020               	movlb	0	; select bank0
  1142     0167  01C4               	clrf	_readData
  1143     0168  01C5               	clrf	_readData+1
  1144     0169  28C8               	goto	l1262
  1145     016A  3180  2845         	ljmp	start
  1146     016C                     __end_of_main:
  1147                           
  1148                           	psect	text1
  1149     01F2                     __ptext1:	
  1150 ;; *************** function _strlen *****************
  1151 ;; Defined at:
  1152 ;;		line 5 in file "/home/stuart/microchip/xc8/v2.46/pic/sources/c99/common/strlen.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  s               1    wreg     PTR const unsigned char 
  1155 ;;		 -> rxdChar(25), 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  s               1    6[COMMON] PTR const unsigned char 
  1158 ;;		 -> rxdChar(25), 
  1159 ;;  a               1    5[COMMON] PTR const unsigned char 
  1160 ;;		 -> rxdChar(25), 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  2    2[COMMON] unsigned int 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1173 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1174 ;;Total ram usage:        5 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 1
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184     01F2                     _strlen:	
  1185                           ;psect for function _strlen
  1186                           
  1187                           
  1188                           ;incstack = 0
  1189                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  1190                           ;strlen@s stored from wreg
  1191     01F2  00F6               	movwf	strlen@s
  1192     01F3                     l1108:
  1193     01F3  0876               	movf	strlen@s,w
  1194     01F4  00F5               	movwf	strlen@a
  1195     01F5  29FA               	goto	l1112
  1196     01F6                     l1110:
  1197     01F6  3001               	movlw	1
  1198     01F7  00F4               	movwf	??_strlen
  1199     01F8  0874               	movf	??_strlen,w
  1200     01F9  07F6               	addwf	strlen@s,f
  1201     01FA                     l1112:
  1202     01FA  0876               	movf	strlen@s,w
  1203     01FB  0086               	movwf	6
  1204     01FC  0187               	clrf	7
  1205     01FD  0801               	movf	1,w
  1206     01FE  1D03               	btfss	3,2
  1207     01FF  2A01               	goto	u271
  1208     0200  2A02               	goto	u270
  1209     0201                     u271:
  1210     0201  29F6               	goto	l1110
  1211     0202                     u270:
  1212     0202                     l1114:
  1213     0202  0875               	movf	strlen@a,w
  1214     0203  0276               	subwf	strlen@s,w
  1215     0204  00F2               	movwf	?_strlen
  1216     0205  01F3               	clrf	?_strlen+1
  1217     0206  1BF2               	btfsc	?_strlen,7
  1218     0207  03F3               	decf	?_strlen+1,f
  1219     0208                     l760:
  1220     0208  0008               	return
  1221     0209                     __end_of_strlen:
  1222                           
  1223                           	psect	text2
  1224     016C                     __ptext2:	
  1225 ;; *************** function _set_index3 *****************
  1226 ;; Defined at:
  1227 ;;		line 148 in file "main.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  id_set          1    5[COMMON] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  2  119[None  ] int 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1245 ;;Total ram usage:        2 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 2
  1248 ;; This function calls:
  1249 ;;		_read_id
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255     016C                     _set_index3:	
  1256                           ;psect for function _set_index3
  1257                           
  1258     016C                     l1090:	
  1259                           ;incstack = 0
  1260                           ; Regs used in _set_index3: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1261                           
  1262                           
  1263                           ;main.c: 149:     start_addr = 0x30;
  1264     016C  3030               	movlw	48
  1265     016D  00FA               	movwf	_start_addr
  1266     016E  3000               	movlw	0
  1267     016F  00FB               	movwf	_start_addr+1
  1268     0170                     l1092:
  1269                           
  1270                           ;main.c: 150:     for (uint8_t id_set=0; id_set<=16; id_set++){
  1271     0170  01F5               	clrf	set_index3@id_set
  1272     0171                     l1098:
  1273                           
  1274                           ;main.c: 151:         read_id(start_addr);
  1275     0171  087B               	movf	_start_addr+1,w
  1276     0172  00F3               	movwf	read_id@start_addr+1
  1277     0173  087A               	movf	_start_addr,w
  1278     0174  00F2               	movwf	read_id@start_addr
  1279     0175  3182  223D  3181   	fcall	_read_id
  1280     0178                     l1100:
  1281                           
  1282                           ;main.c: 152:         id3[id_set]=EEDATA;
  1283     0178  0875               	movf	set_index3@id_set,w
  1284     0179  3EA0               	addlw	(low (_id3| 0))& (0+255)
  1285     017A  0086               	movwf	6
  1286     017B  0187               	clrf	7
  1287     017C  0023               	movlb	3	; select bank3
  1288     017D  0813               	movf	19,w	;volatile
  1289     017E  0081               	movwf	1
  1290     017F                     l1102:
  1291                           
  1292                           ;main.c: 153:         start_addr++;
  1293     017F  3001               	movlw	1
  1294     0180  07FA               	addwf	_start_addr,f
  1295     0181  3000               	movlw	0
  1296     0182  3DFB               	addwfc	_start_addr+1,f
  1297     0183                     l1104:
  1298                           
  1299                           ;main.c: 154:         }
  1300     0183  3001               	movlw	1
  1301     0184  00F4               	movwf	??_set_index3
  1302     0185  0874               	movf	??_set_index3,w
  1303     0186  07F5               	addwf	set_index3@id_set,f
  1304     0187                     l1106:
  1305     0187  3011               	movlw	17
  1306     0188  0275               	subwf	set_index3@id_set,w
  1307     0189  1C03               	skipc
  1308     018A  298C               	goto	u261
  1309     018B  298D               	goto	u260
  1310     018C                     u261:
  1311     018C  2971               	goto	l1098
  1312     018D                     u260:
  1313     018D                     l122:
  1314     018D  0008               	return
  1315     018E                     __end_of_set_index3:
  1316                           
  1317                           	psect	text3
  1318     018E                     __ptext3:	
  1319 ;; *************** function _set_index2 *****************
  1320 ;; Defined at:
  1321 ;;		line 138 in file "main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  id_set          1    5[COMMON] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  2  114[None  ] int 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1337 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1339 ;;Total ram usage:        2 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 2
  1342 ;; This function calls:
  1343 ;;		_read_id
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349     018E                     _set_index2:	
  1350                           ;psect for function _set_index2
  1351                           
  1352     018E                     l1072:	
  1353                           ;incstack = 0
  1354                           ; Regs used in _set_index2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1355                           
  1356                           
  1357                           ;main.c: 139:     start_addr = 0x20;
  1358     018E  3020               	movlw	32
  1359     018F  00FA               	movwf	_start_addr
  1360     0190  3000               	movlw	0
  1361     0191  00FB               	movwf	_start_addr+1
  1362     0192                     l1074:
  1363                           
  1364                           ;main.c: 140:     for (uint8_t id_set=0; id_set<=16; id_set++){
  1365     0192  01F5               	clrf	set_index2@id_set
  1366     0193                     l1080:
  1367                           
  1368                           ;main.c: 141:         read_id(start_addr);
  1369     0193  087B               	movf	_start_addr+1,w
  1370     0194  00F3               	movwf	read_id@start_addr+1
  1371     0195  087A               	movf	_start_addr,w
  1372     0196  00F2               	movwf	read_id@start_addr
  1373     0197  3182  223D  3181   	fcall	_read_id
  1374     019A                     l1082:
  1375                           
  1376                           ;main.c: 142:         id2[id_set]=EEDATA;
  1377     019A  0875               	movf	set_index2@id_set,w
  1378     019B  3EB0               	addlw	(low (_id2| 0))& (0+255)
  1379     019C  0086               	movwf	6
  1380     019D  0187               	clrf	7
  1381     019E  0023               	movlb	3	; select bank3
  1382     019F  0813               	movf	19,w	;volatile
  1383     01A0  0081               	movwf	1
  1384     01A1                     l1084:
  1385                           
  1386                           ;main.c: 143:         start_addr++;
  1387     01A1  3001               	movlw	1
  1388     01A2  07FA               	addwf	_start_addr,f
  1389     01A3  3000               	movlw	0
  1390     01A4  3DFB               	addwfc	_start_addr+1,f
  1391     01A5                     l1086:
  1392                           
  1393                           ;main.c: 144:         }
  1394     01A5  3001               	movlw	1
  1395     01A6  00F4               	movwf	??_set_index2
  1396     01A7  0874               	movf	??_set_index2,w
  1397     01A8  07F5               	addwf	set_index2@id_set,f
  1398     01A9                     l1088:
  1399     01A9  3011               	movlw	17
  1400     01AA  0275               	subwf	set_index2@id_set,w
  1401     01AB  1C03               	skipc
  1402     01AC  29AE               	goto	u251
  1403     01AD  29AF               	goto	u250
  1404     01AE                     u251:
  1405     01AE  2993               	goto	l1080
  1406     01AF                     u250:
  1407     01AF                     l117:
  1408     01AF  0008               	return
  1409     01B0                     __end_of_set_index2:
  1410                           
  1411                           	psect	text4
  1412     01B0                     __ptext4:	
  1413 ;; *************** function _set_index1 *****************
  1414 ;; Defined at:
  1415 ;;		line 128 in file "main.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  id_set          1    5[COMMON] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  2  109[None  ] int 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1433 ;;Total ram usage:        2 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 2
  1436 ;; This function calls:
  1437 ;;		_read_id
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443     01B0                     _set_index1:	
  1444                           ;psect for function _set_index1
  1445                           
  1446     01B0                     l1054:	
  1447                           ;incstack = 0
  1448                           ; Regs used in _set_index1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1449                           
  1450                           
  1451                           ;main.c: 129:     start_addr = 0x10;
  1452     01B0  3010               	movlw	16
  1453     01B1  00FA               	movwf	_start_addr
  1454     01B2  3000               	movlw	0
  1455     01B3  00FB               	movwf	_start_addr+1
  1456     01B4                     l1056:
  1457                           
  1458                           ;main.c: 130:     for (uint8_t id_set=0; id_set<=16; id_set++){
  1459     01B4  01F5               	clrf	set_index1@id_set
  1460     01B5                     l1062:
  1461                           
  1462                           ;main.c: 131:         read_id(start_addr);
  1463     01B5  087B               	movf	_start_addr+1,w
  1464     01B6  00F3               	movwf	read_id@start_addr+1
  1465     01B7  087A               	movf	_start_addr,w
  1466     01B8  00F2               	movwf	read_id@start_addr
  1467     01B9  3182  223D  3181   	fcall	_read_id
  1468     01BC                     l1064:
  1469                           
  1470                           ;main.c: 132:         id1[id_set]=EEDATA;
  1471     01BC  0875               	movf	set_index1@id_set,w
  1472     01BD  3E20               	addlw	(low (_id1| 0))& (0+255)
  1473     01BE  0086               	movwf	6
  1474     01BF  0187               	clrf	7
  1475     01C0  0023               	movlb	3	; select bank3
  1476     01C1  0813               	movf	19,w	;volatile
  1477     01C2  0081               	movwf	1
  1478     01C3                     l1066:
  1479                           
  1480                           ;main.c: 133:         start_addr++;
  1481     01C3  3001               	movlw	1
  1482     01C4  07FA               	addwf	_start_addr,f
  1483     01C5  3000               	movlw	0
  1484     01C6  3DFB               	addwfc	_start_addr+1,f
  1485     01C7                     l1068:
  1486                           
  1487                           ;main.c: 134:         }
  1488     01C7  3001               	movlw	1
  1489     01C8  00F4               	movwf	??_set_index1
  1490     01C9  0874               	movf	??_set_index1,w
  1491     01CA  07F5               	addwf	set_index1@id_set,f
  1492     01CB                     l1070:
  1493     01CB  3011               	movlw	17
  1494     01CC  0275               	subwf	set_index1@id_set,w
  1495     01CD  1C03               	skipc
  1496     01CE  29D0               	goto	u241
  1497     01CF  29D1               	goto	u240
  1498     01D0                     u241:
  1499     01D0  29B5               	goto	l1062
  1500     01D1                     u240:
  1501     01D1                     l112:
  1502     01D1  0008               	return
  1503     01D2                     __end_of_set_index1:
  1504                           
  1505                           	psect	text5
  1506     01D2                     __ptext5:	
  1507 ;; *************** function _set_index0 *****************
  1508 ;; Defined at:
  1509 ;;		line 118 in file "main.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  id_set          1    5[COMMON] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  2  104[None  ] int 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;Total ram usage:        2 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 2
  1530 ;; This function calls:
  1531 ;;		_read_id
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537     01D2                     _set_index0:	
  1538                           ;psect for function _set_index0
  1539                           
  1540     01D2                     l1038:	
  1541                           ;incstack = 0
  1542                           ; Regs used in _set_index0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1543                           
  1544                           
  1545                           ;main.c: 119:     start_addr = 0x0;
  1546     01D2  01FA               	clrf	_start_addr
  1547     01D3  01FB               	clrf	_start_addr+1
  1548                           
  1549                           ;main.c: 120:     for (uint8_t id_set=0; id_set<=16; id_set++){
  1550     01D4  01F5               	clrf	set_index0@id_set
  1551     01D5                     l1044:
  1552                           
  1553                           ;main.c: 121:         read_id(start_addr);
  1554     01D5  087B               	movf	_start_addr+1,w
  1555     01D6  00F3               	movwf	read_id@start_addr+1
  1556     01D7  087A               	movf	_start_addr,w
  1557     01D8  00F2               	movwf	read_id@start_addr
  1558     01D9  3182  223D  3181   	fcall	_read_id
  1559     01DC                     l1046:
  1560                           
  1561                           ;main.c: 122:         id0[id_set]=EEDATA;
  1562     01DC  0875               	movf	set_index0@id_set,w
  1563     01DD  3E30               	addlw	(low (_id0| 0))& (0+255)
  1564     01DE  0086               	movwf	6
  1565     01DF  0187               	clrf	7
  1566     01E0  0023               	movlb	3	; select bank3
  1567     01E1  0813               	movf	19,w	;volatile
  1568     01E2  0081               	movwf	1
  1569     01E3                     l1048:
  1570                           
  1571                           ;main.c: 123:         start_addr++;
  1572     01E3  3001               	movlw	1
  1573     01E4  07FA               	addwf	_start_addr,f
  1574     01E5  3000               	movlw	0
  1575     01E6  3DFB               	addwfc	_start_addr+1,f
  1576     01E7                     l1050:
  1577                           
  1578                           ;main.c: 124:         }
  1579     01E7  3001               	movlw	1
  1580     01E8  00F4               	movwf	??_set_index0
  1581     01E9  0874               	movf	??_set_index0,w
  1582     01EA  07F5               	addwf	set_index0@id_set,f
  1583     01EB                     l1052:
  1584     01EB  3011               	movlw	17
  1585     01EC  0275               	subwf	set_index0@id_set,w
  1586     01ED  1C03               	skipc
  1587     01EE  29F0               	goto	u231
  1588     01EF  29F1               	goto	u230
  1589     01F0                     u231:
  1590     01F0  29D5               	goto	l1044
  1591     01F1                     u230:
  1592     01F1                     l107:
  1593     01F1  0008               	return
  1594     01F2                     __end_of_set_index0:
  1595                           
  1596                           	psect	text6
  1597     023D                     __ptext6:	
  1598 ;; *************** function _read_id *****************
  1599 ;; Defined at:
  1600 ;;		line 109 in file "main.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  start_addr      2    2[COMMON] unsigned short 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  2    2[COMMON] int 
  1607 ;; Registers used:
  1608 ;;		wreg
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1618 ;;Total ram usage:        2 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; Hardware stack levels required when called: 1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_set_index0
  1625 ;;		_set_index1
  1626 ;;		_set_index2
  1627 ;;		_set_index3
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632     023D                     _read_id:	
  1633                           ;psect for function _read_id
  1634                           
  1635     023D                     l994:	
  1636                           ;incstack = 0
  1637                           ; Regs used in _read_id: [wreg]
  1638                           
  1639                           
  1640                           ;main.c: 111:             EEADR = start_addr;
  1641     023D  0873               	movf	read_id@start_addr+1,w
  1642     023E  0023               	movlb	3	; select bank3
  1643     023F  0092               	movwf	18	;volatile
  1644     0240  0872               	movf	read_id@start_addr,w
  1645     0241  0091               	movwf	17	;volatile
  1646     0242                     l996:
  1647                           
  1648                           ;main.c: 112:             EECON1bits.EEPGD = 0;
  1649     0242  1395               	bcf	21,7	;volsfr
  1650     0243                     l998:
  1651                           
  1652                           ;main.c: 113:             EECON1bits.CFGS = 0;
  1653     0243  1315               	bcf	21,6	;volsfr
  1654     0244                     l1000:
  1655                           
  1656                           ;main.c: 114:             EECON1bits.RD = 1;
  1657     0244  1415               	bsf	21,0	;volsfr
  1658                           
  1659                           ;main.c: 115:             return (EEDATA);;	Return value of _read_id is never used
  1660     0245  0813               	movf	19,w	;volatile
  1661     0246                     l102:
  1662     0246  0008               	return
  1663     0247                     __end_of_read_id:
  1664                           
  1665                           	psect	text7
  1666     0209                     __ptext7:	
  1667 ;; *************** function _add_id *****************
  1668 ;; Defined at:
  1669 ;;		line 91 in file "main.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  start_addr      2    2[COMMON] unsigned short 
  1672 ;;  rxdData         1    4[COMMON] unsigned char 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;		None
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  2    2[COMMON] int 
  1677 ;; Registers used:
  1678 ;;		wreg
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1684 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1687 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1688 ;;Total ram usage:        3 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; Hardware stack levels required when called: 1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_main
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698     0209                     _add_id:	
  1699                           ;psect for function _add_id
  1700                           
  1701     0209                     l1022:	
  1702                           ;incstack = 0
  1703                           ; Regs used in _add_id: [wreg]
  1704                           
  1705                           
  1706                           ;main.c: 93:             EEADR = start_addr;
  1707     0209  0873               	movf	add_id@start_addr+1,w
  1708     020A  0023               	movlb	3	; select bank3
  1709     020B  0092               	movwf	18	;volatile
  1710     020C  0872               	movf	add_id@start_addr,w
  1711     020D  0091               	movwf	17	;volatile
  1712                           
  1713                           ;main.c: 94:             EEDATA = rxdData;
  1714     020E  0874               	movf	add_id@rxdData,w
  1715     020F  0093               	movwf	19	;volatile
  1716     0210                     l1024:
  1717                           
  1718                           ;main.c: 95:             EECON1bits.CFGS = 0;
  1719     0210  1315               	bcf	21,6	;volsfr
  1720     0211                     l1026:
  1721                           
  1722                           ;main.c: 96:             EECON1bits.EEPGD = 0;
  1723     0211  1395               	bcf	21,7	;volsfr
  1724     0212                     l1028:
  1725                           
  1726                           ;main.c: 97:             EECON1bits.WREN = 1;
  1727     0212  1515               	bsf	21,2	;volsfr
  1728     0213                     l1030:
  1729                           
  1730                           ;main.c: 98:             INTCONbits.GIE = 0;
  1731     0213  138B               	bcf	11,7	;volatile
  1732                           
  1733                           ;main.c: 99:             EECON2 = 0x55;
  1734     0214  3055               	movlw	85
  1735     0215  0096               	movwf	22	;volsfr
  1736                           
  1737                           ;main.c: 100:             EECON2 = 0xAA;
  1738     0216  30AA               	movlw	170
  1739     0217  0096               	movwf	22	;volsfr
  1740     0218                     l1032:
  1741                           
  1742                           ;main.c: 101:             EECON1bits.WR = 1;
  1743     0218  1495               	bsf	21,1	;volsfr
  1744     0219                     l1034:
  1745                           
  1746                           ;main.c: 102:             INTCONbits.GIE = 1;
  1747     0219  178B               	bsf	11,7	;volatile
  1748     021A                     l1036:
  1749                           
  1750                           ;main.c: 103:             EECON1bits.WREN = 0;
  1751     021A  1115               	bcf	21,2	;volsfr
  1752     021B                     l96:	
  1753                           ;main.c: 105:             }
  1754                           
  1755                           
  1756                           ;main.c: 104:             while (EECON1bits.WR == 1){
  1757     021B  1895               	btfsc	21,1	;volsfr
  1758     021C  2A1E               	goto	u221
  1759     021D  2A1F               	goto	u220
  1760     021E                     u221:
  1761     021E  2A1B               	goto	l96
  1762     021F                     u220:
  1763     021F                     l99:
  1764     021F  0008               	return
  1765     0220                     __end_of_add_id:
  1766                           
  1767                           	psect	text8
  1768     0247                     __ptext8:	
  1769 ;; *************** function _EUSART_Write *****************
  1770 ;; Defined at:
  1771 ;;		line 71 in file "main.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  data            1    wreg     unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  data            1    2[COMMON] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;Total ram usage:        1 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799     0247                     _EUSART_Write:	
  1800                           ;psect for function _EUSART_Write
  1801                           
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _EUSART_Write: [wreg]
  1805                           ;EUSART_Write@data stored from wreg
  1806     0247  00F2               	movwf	EUSART_Write@data
  1807     0248                     l1018:
  1808     0248                     l82:	
  1809                           ;main.c: 72:     while (!PIR1bits.TXIF);
  1810                           
  1811     0248  0020               	movlb	0	; select bank0
  1812     0249  1E11               	btfss	17,4	;volatile
  1813     024A  2A4C               	goto	u211
  1814     024B  2A4D               	goto	u210
  1815     024C                     u211:
  1816     024C  2A48               	goto	l82
  1817     024D                     u210:
  1818     024D                     l1020:
  1819                           
  1820                           ;main.c: 73:     TXREG = data;
  1821     024D  0872               	movf	EUSART_Write@data,w
  1822     024E  0023               	movlb	3	; select bank3
  1823     024F  009A               	movwf	26	;volatile
  1824     0250                     l85:
  1825     0250  0008               	return
  1826     0251                     __end_of_EUSART_Write:
  1827                           
  1828                           	psect	text9
  1829     0231                     __ptext9:	
  1830 ;; *************** function _EUSART_Init *****************
  1831 ;; Defined at:
  1832 ;;		line 54 in file "main.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1850 ;;Total ram usage:        0 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 1
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860     0231                     _EUSART_Init:	
  1861                           ;psect for function _EUSART_Init
  1862                           
  1863     0231                     l1004:	
  1864                           ;incstack = 0
  1865                           ; Regs used in _EUSART_Init: [wreg]
  1866                           
  1867                           
  1868                           ;main.c: 56:     SPBRGH = 0x34;
  1869     0231  3034               	movlw	52
  1870     0232  0023               	movlb	3	; select bank3
  1871     0233  009C               	movwf	28	;volatile
  1872                           
  1873                           ;main.c: 57:     SPBRGL = 0x10;
  1874     0234  3010               	movlw	16
  1875     0235  009B               	movwf	27	;volatile
  1876     0236                     l1006:
  1877                           
  1878                           ;main.c: 60:     TXSTAbits.SYNC = 0;
  1879     0236  121E               	bcf	30,4	;volatile
  1880     0237                     l1008:
  1881                           
  1882                           ;main.c: 61:     TXSTAbits.BRGH = 1;
  1883     0237  151E               	bsf	30,2	;volatile
  1884     0238                     l1010:
  1885                           
  1886                           ;main.c: 62:     BAUDCONbits.BRG16 = 1;
  1887     0238  159F               	bsf	31,3	;volatile
  1888     0239                     l1012:
  1889                           
  1890                           ;main.c: 63:     RCSTAbits.SPEN = 1;
  1891     0239  179D               	bsf	29,7	;volatile
  1892     023A                     l1014:
  1893                           
  1894                           ;main.c: 66:     TXSTAbits.TXEN = 1;
  1895     023A  169E               	bsf	30,5	;volatile
  1896     023B                     l1016:
  1897                           
  1898                           ;main.c: 67:     RCSTAbits.CREN = 1;
  1899     023B  161D               	bsf	29,4	;volatile
  1900     023C                     l79:
  1901     023C  0008               	return
  1902     023D                     __end_of_EUSART_Init:
  1903                           
  1904                           	psect	intentry
  1905     0004                     __pintentry:	
  1906 ;; *************** function _ISR *****************
  1907 ;; Defined at:
  1908 ;;		line 79 in file "main.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  2   89[None  ] int 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1926 ;;Total ram usage:        2 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		Interrupt level 1
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935     0004                     _ISR:
  1936                           
  1937                           ;incstack = 0
  1938     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1939                           
  1940                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  1941     0005  3180               	pagesel	$
  1942     0006                     i1l1118:
  1943                           
  1944                           ;main.c: 80:     rxdChar[num] = RCREG;
  1945     0006  0877               	movf	_num,w
  1946     0007  3E46               	addlw	(low (_rxdChar| 0))& (0+255)
  1947     0008  0086               	movwf	6
  1948     0009  0187               	clrf	7
  1949     000A  0023               	movlb	3	; select bank3
  1950     000B  0819               	movf	25,w	;volatile
  1951     000C  0081               	movwf	1
  1952     000D                     i1l1120:
  1953                           
  1954                           ;main.c: 81:     num++;
  1955     000D  3001               	movlw	1
  1956     000E  07F7               	addwf	_num,f
  1957     000F  3000               	movlw	0
  1958     0010  3DF8               	addwfc	_num+1,f
  1959     0011                     i1l1122:
  1960                           
  1961                           ;main.c: 82:     if (rxdChar == '\n' || rxdChar == '\r' || num >= 16) {
  1962     0011  300A               	movlw	10
  1963     0012  00F0               	movwf	??_ISR
  1964     0013  3000               	movlw	0
  1965     0014  00F1               	movwf	??_ISR+1
  1966     0015  3000               	movlw	0
  1967     0016  0671               	xorwf	??_ISR+1,w
  1968     0017  1D03               	skipz
  1969     0018  281B               	goto	u28_25
  1970     0019  3046               	movlw	low (_rxdChar| 0)
  1971     001A  0670               	xorwf	??_ISR,w
  1972     001B                     u28_25:
  1973     001B  1903               	skipnz
  1974     001C  281E               	goto	u28_21
  1975     001D  281F               	goto	u28_20
  1976     001E                     u28_21:
  1977     001E  283A               	goto	i1l1128
  1978     001F                     u28_20:
  1979     001F                     i1l1124:
  1980     001F  300D               	movlw	13
  1981     0020  00F0               	movwf	??_ISR
  1982     0021  3000               	movlw	0
  1983     0022  00F1               	movwf	??_ISR+1
  1984     0023  3000               	movlw	0
  1985     0024  0671               	xorwf	??_ISR+1,w
  1986     0025  1D03               	skipz
  1987     0026  2829               	goto	u29_25
  1988     0027  3046               	movlw	low (_rxdChar| 0)
  1989     0028  0670               	xorwf	??_ISR,w
  1990     0029                     u29_25:
  1991     0029  1903               	skipnz
  1992     002A  282C               	goto	u29_21
  1993     002B  282D               	goto	u29_20
  1994     002C                     u29_21:
  1995     002C  283A               	goto	i1l1128
  1996     002D                     u29_20:
  1997     002D                     i1l1126:
  1998     002D  0878               	movf	_num+1,w
  1999     002E  3A80               	xorlw	128
  2000     002F  00F0               	movwf	??_ISR
  2001     0030  3080               	movlw	128
  2002     0031  0270               	subwf	??_ISR,w
  2003     0032  1D03               	skipz
  2004     0033  2836               	goto	u30_25
  2005     0034  3010               	movlw	16
  2006     0035  0277               	subwf	_num,w
  2007     0036                     u30_25:
  2008     0036  1C03               	skipc
  2009     0037  2839               	goto	u30_21
  2010     0038  283A               	goto	u30_20
  2011     0039                     u30_21:
  2012     0039  2843               	goto	i1l93
  2013     003A                     u30_20:
  2014     003A                     i1l1128:
  2015                           
  2016                           ;main.c: 83:             num = 0;
  2017     003A  01F7               	clrf	_num
  2018     003B  01F8               	clrf	_num+1
  2019     003C                     i1l1130:
  2020                           
  2021                           ;main.c: 84:             readData = 1;
  2022     003C  3001               	movlw	1
  2023     003D  0020               	movlb	0	; select bank0
  2024     003E  00C4               	movwf	_readData
  2025     003F  3000               	movlw	0
  2026     0040  00C5               	movwf	_readData+1
  2027     0041                     i1l1132:
  2028                           
  2029                           ;main.c: 85:             RCSTAbits.CREN = 0;
  2030     0041  0023               	movlb	3	; select bank3
  2031     0042  121D               	bcf	29,4	;volatile
  2032     0043                     i1l93:
  2033     0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2034     0044  0009               	retfie
  2035     0045                     __end_of_ISR:
  2036     007E                     btemp	set	126	;btemp
  2037     007E                     int$flags	set	126
  2038     007E                     wtemp0	set	126
  2039                           
  2040                           	psect	config
  2041                           
  2042                           ;Config register CONFIG1 @ 0x8007
  2043                           ;	Oscillator Selection
  2044                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  2045                           ;	Watchdog Timer Enable
  2046                           ;	WDTE = OFF, WDT disabled
  2047                           ;	Power-up Timer Enable
  2048                           ;	PWRTE = OFF, PWRT disabled
  2049                           ;	MCLR Pin Function Select
  2050                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2051                           ;	Flash Program Memory Code Protection
  2052                           ;	CP = OFF, Program memory code protection is disabled
  2053                           ;	Data Memory Code Protection
  2054                           ;	CPD = 0x1, unprogrammed default
  2055                           ;	Brown-out Reset Enable
  2056                           ;	BOREN = ON, Brown-out Reset enabled
  2057                           ;	Clock Out Enable
  2058                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2059                           ;	Internal/External Switchover
  2060                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2061                           ;	Fail-Safe Clock Monitor Enable
  2062                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2063     8007                     	org	32775
  2064     8007  3FE2               	dw	16354

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         114
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80     10      74
    BANK1            80      0      65
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@a	PTR const unsigned char  size(1) Largest target is 25
		 -> rxdChar(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 25
		 -> rxdChar(BANK0[25]), 


Critical Paths under _main in COMMON

    _main->_strlen
    _set_index3->_read_id
    _set_index2->_read_id
    _set_index1->_read_id
    _set_index0->_read_id

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2863
                                              0 BANK0     10    10      0
                        _EUSART_Init
                       _EUSART_Write
                             _add_id
                             _read_d
                            _read_id
                         _set_index0
                         _set_index1
                         _set_index2
                         _set_index3
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     156
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _set_index3                                           2     2      0     470
                                              4 COMMON     2     2      0
                            _read_id
 ---------------------------------------------------------------------------------
 (1) _set_index2                                           2     2      0     470
                                              4 COMMON     2     2      0
                            _read_id
 ---------------------------------------------------------------------------------
 (1) _set_index1                                           2     2      0     470
                                              4 COMMON     2     2      0
                            _read_id
 ---------------------------------------------------------------------------------
 (1) _set_index0                                           2     2      0     470
                                              4 COMMON     2     2      0
                            _read_id
 ---------------------------------------------------------------------------------
 (2) _read_id                                              2     0      2     402
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _read_d                                               2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _add_id                                               3     0      3     196
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Init
   _EUSART_Write
   _add_id
   _read_d
   _read_id
   _set_index0
     _read_id
   _set_index1
     _read_id
   _set_index2
     _read_id
   _set_index3
     _read_id
   _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      41       7       81.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      97      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      97      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Aug  2 08:12:59 2025

                     l82 0248                       l85 0250                       l79 023C  
                     l96 021B                       l99 021F                      l102 0246  
                    l112 01D1                      l122 018D                      l107 01F1  
                    l140 011E                      l117 01AF                      l128 00C8  
                    l145 0164                      l760 0208                      l994 023D  
                    l996 0242                      l998 0243                      u210 024D  
                    u211 024C                      u220 021F                      u221 021E  
                    u230 01F1                      u231 01F0                      u240 01D1  
                    u241 01D0                      u250 01AF                      u410 0095  
                    u251 01AE                      u411 0094                      u260 018D  
                    u500 0164                      u420 009E                      u261 018C  
                    u501 0163                      u421 009D                      u270 0202  
                    u430 00AB                      u271 0201                      u431 00AA  
                    u440 00BB                      u505 0160                      u441 00BA  
                    u450 00CF                      u451 00CE                      u460 0109  
                    _ISR 0004                      u461 0108                      u517 00EF  
                    u470 0110                      u471 010F                      u480 0116  
                    u481 0115                      u465 0105                      u490 012D  
                    u491 012C                      _id0 0030                      _id1 0020  
                    _id2 00B0                      _id3 00A0                      _loc 0042  
                    _exp 00D0                      _val 0079                      _num 0077  
                    wreg 0009             ?_EUSART_Init 0070                     ?_ISR 0070  
                   l1000 0244                     l1010 0238                     l1012 0239  
                   l1004 0231                     l1020 024D                     l1100 0178  
                   l1014 023A                     l1006 0236                     l1030 0213  
                   l1022 0209                     l1102 017F                     l1110 01F6  
                   l1016 023B                     l1008 0237                     l1032 0218  
                   l1024 0210                     l1104 0183                     l1112 01FA  
                   l1018 0248                     l1034 0219                     l1026 0211  
                   l1050 01E7                     l1106 0187                     l1114 0202  
                   l1036 021A                     l1028 0212                     l1052 01EB  
                   l1044 01D5                     l1108 01F3                     l1300 012F  
                   l1046 01DC                     l1038 01D2                     l1070 01CB  
                   l1062 01B5                     l1054 01B0                     l1310 014D  
                   l1302 0138                     l1230 0078                     l1048 01E3  
                   l1064 01BC                     l1056 01B4                     l1080 0193  
                   l1072 018E                     l1312 0151                     l1304 013A  
                   l1240 0081                     l1232 0079                     l1066 01C3  
                   l1082 019A                     l1074 0192                     l1090 016C  
                   l1306 013D                     l1314 0156                     l1250 0099  
                   l1242 0085                     l1234 007A                     l1226 006B  
                   l1068 01C7                     l1084 01A1                     l1092 0170  
                   l1316 0166                     l1308 0144                     l1260 00BB  
                   l1252 009E                     l1244 008C                     l1236 007C  
                   l1228 0075                     l1086 01A5                     l1270 00DA  
                   l1254 00A5                     l1262 00C8                     l1246 0090  
                   l1238 007E                     l1088 01A9                     l1272 00DD  
                   l1280 00FE                     l1264 00CF                     l1256 00AB  
                   l1248 0095                     l1098 0171                     l1290 0120  
                   l1282 0109                     l1274 00E9                     l1266 00D1  
                   l1258 00B5                     l1284 0110                     l1292 0123  
                   l1276 00F5                     l1268 00D8                     l1294 0125  
                   l1286 0116                     l1278 00F9                     l1288 0118  
                   l1296 0129                     l1298 012D                     i1l93 0043  
                   _main 006B                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006              main@rxdData 0064                     btemp 007E  
                   start 0045                    ??_ISR 0070            ?_EUSART_Write 0070  
                  ?_main 0070                    _EEADR 0191                    _RCREG 0199  
                  u30_20 003A                    u30_21 0039                    u30_25 0036  
                  u28_20 001F                    u28_21 001E                    u28_25 001B  
                  u29_20 002D                    u29_21 002C                    u29_25 0029  
                  _TXREG 019A             _outputStatus 0040                    _index 0069  
        __end_of_read_id 0247                    status 0003                    wtemp0 007E  
        __initialization 0048             __end_of_main 016C           ??_EUSART_Write 0072  
                 ??_main 005F            main@count_462 0067                   _EEDATA 0193  
                 _EECON2 0196                   i1l1120 000D                   i1l1130 003C  
                 i1l1122 0011                   i1l1132 0041                   i1l1124 001F  
                 i1l1126 002D                   i1l1118 0006                   i1l1128 003A  
                 _SPBRGH 019C                   _SPBRGL 019B                   _add_id 0209  
                 _idChar 00C0                   _read_d 0000                   _strlen 01F2  
              ??_read_id 0074  __end_of__initialization 0067           __pcstackCOMMON 0070  
           __pidataBANK1 0220               __pbssBANK0 0020               __pbssBANK1 00A0  
   __end_of_EUSART_Write 0251               __pnvCOMMON 007A               __pmaintext 006B  
                ?_add_id 0072               __pintentry 0004                  ?_read_d 0070  
                ?_strlen 0072                  _CPSCON0 001E                  _CPSCON1 001F  
         main@length_461 0061        read_id@start_addr 0072                  __ptext1 01F2  
                __ptext2 016C                  __ptext3 018E                  __ptext4 01B0  
                __ptext5 01D2                  __ptext6 023D                  __ptext7 0209  
                __ptext8 0247                  __ptext9 0231                  _read_id 023D  
                _rxdChar 0046                  clrloop0 0258     end_of_initialization 0067  
                init_ram 0251                  initloop 0252               _set_index0 01D2  
             _set_index1 01B0               _set_index2 018E               _set_index3 016C  
              _RCSTAbits 019D                  strlen@a 0075                  strlen@s 0076  
              _PORTBbits 000D                _TRISAbits 008C                _TRISBbits 008D  
             _start_addr 007A                _TXSTAbits 019E               main@length 0063  
         __end_of_add_id 0220              _BAUDCONbits 019F             _EUSART_Write 0247  
         __end_of_strlen 0209      start_initialization 0048              __end_of_ISR 0045  
          ??_EUSART_Init 0072            add_id@rxdData 0074              ?_set_index0 0070  
            ?_set_index1 0070              ?_set_index2 0070              ?_set_index3 0070  
               ??_add_id 0075              __pdataBANK1 00D0                 ??_read_d 0070  
               ??_strlen 0074              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 005F      __end_of_EUSART_Init 023D                __pnvBANK0 0069  
       add_id@start_addr 0072                 ?_read_id 0072                 _LATAbits 010C  
              clear_ram0 0257                 _PIE1bits 0091                 _PIR1bits 0011  
       EUSART_Write@data 0072         set_index0@id_set 0075         set_index1@id_set 0075  
       set_index2@id_set 0075         set_index3@id_set 0075                main@count 0065  
            _EUSART_Init 0231               _EECON1bits 0195               _ANSELBbits 018D  
               _readData 0044             ??_set_index0 0074             ??_set_index1 0074  
           ??_set_index2 0074             ??_set_index3 0074                 int$flags 007E  
             _INTCONbits 000B       __end_of_set_index0 01F2       __end_of_set_index1 01D2  
     __end_of_set_index2 01B0       __end_of_set_index3 018E                 intlevel1 0000  
